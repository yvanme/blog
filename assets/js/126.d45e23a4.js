(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{484:function(t,s,e){"use strict";e.r(s);var n=e(44),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Docker下配置ELK环境")]),t._v(" "),e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("p",[t._v("[TOC]")]),t._v(" "),e("p",[e("strong",[t._v("主机配置:")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("主机名")]),t._v(" "),e("th",[t._v("IP地址")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("worker")]),t._v(" "),e("td",[t._v("192.168.153.136")])])])]),t._v(" "),e("p",[e("strong",[t._v("系统：CentOS7")])]),t._v(" "),e("p",[e("strong",[t._v("ELK版本：7.8.1")])]),t._v(" "),e("p",[e("strong",[t._v("1. ELK配置")])]),t._v(" "),e("ul",[e("li",[t._v("filebeat.yml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###################### Filebeat Configuration Example #########################")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This file is an example configuration file highlighting only the most common")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# options. The filebeat.reference.yml file from the same directory contains all the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# supported options with more comments. You can use it as a reference.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can find the full configuration reference here:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://www.elastic.co/guide/en/beats/filebeat/index.html")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For more available modules and options, please see the filebeat.reference.yml sample")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configuration file.")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ============================== Filebeat inputs ===============================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filebeat.inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Each - is an input. Most options can be set at the input level, so")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# you can use different inputs for various configurations.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Below are the input specific configurations.")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" log\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Change to true to enable this input configuration.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Paths that should be crawled and fetched. Glob based paths.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /apps/filebeat/"),e("span",{pre:!0,attrs:{class:"token important"}},[t._v("*.log")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#- c:\\programdata\\elasticsearch\\logs\\*")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude lines. A list of regular expressions to match. It drops the lines that are")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# matching any regular expression from the list.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#exclude_lines: ['^DBG']")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Include lines. A list of regular expressions to match. It exports the lines that are")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# matching any regular expression from the list.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include_lines: ['^ERR', '^WARN']")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exclude files. A list of regular expressions to match. Filebeat drops the files that")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# are matching any regular expression from the list. By default, no files are dropped.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#exclude_files: ['.gz$']")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Optional additional fields. These fields can be freely picked")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to add additional information to the crawled log files for filtering")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fields:")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  level: debug")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  review: 1")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### Multiline options")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Multiline can be used for log messages spanning multiple lines. This is common")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for Java Stack Traces or C-Line Continuation")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The regexp Pattern that has to be matched. The example pattern matches all lines starting with [")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#multiline.pattern: ^\\[")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Defines if the pattern set under pattern should be negated or not. Default is false.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#multiline.negate: false")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Match can be set to "after" or "before". It is used to define if lines should be append to a pattern')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# that was (not) matched before or after or as long as a pattern is not matched based on negate.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note: After is the equivalent to previous and before is the equivalent to to next in Logstash")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#multiline.match: after")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ============================== Filebeat modules ==============================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filebeat.config.modules")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Glob pattern for configuration loading")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path.config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/modules.d/"),e("span",{pre:!0,attrs:{class:"token important"}},[t._v("*.yml")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set to true to enable config reloading")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("reload.enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Period on which files under path should be checked for changes")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#reload.period: 10s")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ======================= Elasticsearch template setting =======================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("setup.template.settings")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("index.number_of_shards")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#index.codec: best_compression")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#_source.enabled: false")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ================================== General ===================================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The name of the shipper that publishes the network data. It can be used to group")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# all the transactions sent by a single shipper in the web interface.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#name:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The tags of the shipper are included in their own field with each")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# transaction published.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#tags: ["service-X", "web-tier"]')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Optional fields that you can specify to add additional information to the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# output.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fields:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  env: staging")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ================================= Dashboards =================================")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These settings control loading the sample dashboards to the Kibana index. Loading")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the dashboards is disabled by default and can be enabled either by setting the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# options here or by using the `setup` command.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#setup.dashboards.enabled: false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The URL from where to download the dashboards archive. By default this URL")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# has a value which is computed based on the Beat name and version. For released")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# versions, this URL points to the dashboard archive on the artifacts.elastic.co")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# website.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#setup.dashboards.url:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# =================================== Kibana ===================================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This requires a Kibana endpoint configuration.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("setup.kibana")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Kibana Host")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Scheme and port can be left out and will be set to the default (http and 5601)")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In case you specify and additional path, the scheme is required: http://localhost:5601/path")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IPv6 addresses should always be defined as: https://[2001:db8::1]:5601")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#host: "localhost:5601"')]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Kibana Space ID")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ID of the Kibana Space into which the dashboards should be loaded. By default,")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the Default Space will be used.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#space.id:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# =============================== Elastic Cloud ================================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These settings simplify using Filebeat with the Elastic Cloud (https://cloud.elastic.co/).")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The cloud.id setting overwrites the `output.elasticsearch.hosts` and")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `setup.kibana.host` options.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can find the `cloud.id` in the Elastic Cloud web UI.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cloud.id:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The cloud.auth setting overwrites the `output.elasticsearch.username` and")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cloud.auth:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ================================== Outputs ===================================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configure what output to use when sending the data collected by the beat.")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------- Elasticsearch Output ----------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#output.elasticsearch:")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Array of hosts to connect to.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#hosts: ["localhost:9200"]')]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Protocol - either `http` (default) or `https`.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#protocol: "https"')]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Authentication credentials - either API key or username/password.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#api_key: "id:api_key"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#username: "elastic"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#password: "changeme"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ------------------------------ Logstash Output -------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output.logstash")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The Logstash hosts")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.sunrat.com:5044"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Optional SSL. By default is off.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of root certificates for HTTPS server verifications")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]')]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Certificate for SSL client authentication")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#ssl.certificate: "/etc/pki/client/cert.pem"')]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Client Certificate Key")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#ssl.key: "/etc/pki/client/cert.key"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ------------------------------- Console Output -------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#output.console:")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Boolean flag to enable or disable the output module.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  enabled: true")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configure JSON encoding")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  codec.json:")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pretty-print JSON event")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   pretty: true")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configure escaping HTML symbols in strings.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#escape_html: false")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ================================= Processors =================================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configure processors to enhance or manipulate events generated by the beat.")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("processors")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("add_host_metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("add_cloud_metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("add_docker_metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("add_kubernetes_metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ================================== Logging ===================================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sets log level. The default log level is info.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Available log levels are: error, warning, info, debug")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#logging.level: debug")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# At debug level, you can selectively enable logging only for some components.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# To enable all selectors use ["*"]. Examples of other selectors are "beat",')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "publish", "service".')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#logging.selectors: ["*"]')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ============================= X-Pack Monitoring ==============================")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Filebeat can export internal metrics to a central Elasticsearch monitoring")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reporting is disabled by default.")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set to true to enable the monitoring reporter.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#monitoring.enabled: false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sets the UUID of the Elasticsearch cluster under which monitoring data for this")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Filebeat instance will appear in the Stack Monitoring UI. If output.elasticsearch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is enabled, the UUID is derived from the Elasticsearch cluster referenced by output.elasticsearch.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#monitoring.cluster_uuid:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment to send the metrics to Elasticsearch. Most settings from the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Elasticsearch output are accepted here as well.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note that the settings should point to your Elasticsearch *monitoring* cluster.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Any setting that is not set is automatically inherited from the Elasticsearch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# output configuration, so if you have the Elasticsearch output configured such")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# that it is pointing to your Elasticsearch monitoring cluster, you can simply")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uncomment the following line.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#monitoring.elasticsearch:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ================================= Migration ==================================")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This allows to enable 6.7 migration aliases")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#migration.6_to_7.enabled: true")]),t._v("\n")])])]),e("ul",[e("li",[t._v("logstash.conf")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sample Logstash configuration for creating a simple")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Beats -> Logstash -> Elasticsearch pipeline.")]),t._v("\ninput "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  beats "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    port "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5044")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nfilter "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  grok "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    match "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{COMBINEDAPACHELOG}"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    match "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timestamp"')]),t._v(" , "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dd/MMM/yyyy:HH:mm:ss Z"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\noutput "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  elasticsearch "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    hosts "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.sunrat.com:9200"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    index "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#user => "elastic"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#password => "changeme"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("pipelines.yml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of pipelines to be loaded by Logstash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This document must be a list of dictionaries/hashes, where the keys/values are pipeline settings.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default values for omitted settings are read from the `logstash.yml` file.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When declaring multiple pipelines, each MUST have its own `pipeline.id`.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example of two pipelines:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pipeline.id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pipeline.workers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   pipeline.batch.size: 1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   config.string: "input { generator {} } filter { sleep { time => 1 } } output { stdout { codec => dots } }"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - pipeline.id: another_test")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   queue.type: persisted")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path.config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/share/logstash/config/logstash.conf"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Available options:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # name of the pipeline")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   pipeline.id: mylogs")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # The configuration string to be used by this pipeline")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   config.string: "input { generator {} } filter { sleep { time => 1 } } output { stdout { codec => dots } }"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # The path from where to read the configuration text")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   path.config: "/etc/conf.d/logstash/myconfig.cfg"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # How many worker threads execute the Filters+Outputs stage of the pipeline")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   pipeline.workers: 1 (actually defaults to number of CPUs)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # How many events to retrieve from inputs before sending to filters+workers")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   pipeline.batch.size: 125")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # How long to wait in milliseconds while polling for the next event")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # before dispatching an undersized batch to filters+outputs")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   pipeline.batch.delay: 50")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   # Internal queuing model, "memory" for legacy in-memory based queuing and')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   # "persisted" for disk-based acked queueing. Defaults is memory')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   queue.type: memory")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # If using queue.type: persisted, the page data files size. The queue data consists of")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # append-only data files separated into pages. Default is 64mb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   queue.page_capacity: 64mb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # If using queue.type: persisted, the maximum number of unread events in the queue.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # Default is 0 (unlimited)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   queue.max_events: 0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # If using queue.type: persisted, the total capacity of the queue in number of bytes.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # Default is 1024mb or 1gb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   queue.max_bytes: 1024mb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # If using queue.type: persisted, the maximum number of acked events before forcing a checkpoint")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # Default is 1024, 0 for unlimited")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   queue.checkpoint.acks: 1024")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # If using queue.type: persisted, the maximum number of written events before forcing a checkpoint")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # Default is 1024, 0 for unlimited")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   queue.checkpoint.writes: 1024")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # If using queue.type: persisted, the interval in milliseconds when a checkpoint is forced on the head page")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # Default is 1000, 0 for no periodic checkpoint.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   queue.checkpoint.interval: 1000")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # Enable Dead Letter Queueing for this pipeline.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   dead_letter_queue.enable: false")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   If using dead_letter_queue.enable: true, the maximum size of dead letter queue for this pipeline. Entries")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   will be dropped if they would increase the size of the dead letter queue beyond this setting.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Default is 1024mb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   dead_letter_queue.max_bytes: 1024mb")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   If using dead_letter_queue.enable: true, the directory path where the data files will be stored.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Default is path.data/dead_letter_queue")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   path.dead_letter_queue:")]),t._v("\n")])])]),e("ul",[e("li",[t._v("elasticsearch.yml(注意：es默认以elasticsearch，注意给data目录设置权限)")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ======================== Elasticsearch Configuration =========================")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NOTE: Elasticsearch comes with reasonable defaults for most settings.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       Before you set out to tweak and tune the configuration, make sure you")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       understand what are you trying to accomplish and the consequences.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The primary way of configuring a node is via this file. This template lists")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the most important settings you may want to configure for a production cluster.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Please consult the documentation for further information on configuration options:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://www.elastic.co/guide/en/elasticsearch/reference/index.html")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------- Cluster -----------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use a descriptive name for your cluster:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cluster.name: my-application")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ------------------------------------ Node ------------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use a descriptive name for the node:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#node.name: node-1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add custom attributes to the node:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#node.attr.rack: r1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ----------------------------------- Paths ------------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Path to directory where to store the data (separate multiple locations by comma):")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#path.data: /path/to/data")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Path to log files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#path.logs: /path/to/logs")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ----------------------------------- Memory -----------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Lock the memory on startup:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#bootstrap.memory_lock: true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make sure that the heap size is set to about half the memory available")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# on the system and that the owner of the process is allowed to use this")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# limit.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Elasticsearch performs poorly when the system is swapping the memory.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------- Network -----------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the bind address to a specific IP (IPv4 or IPv6):")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("network.host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.0.0.0\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set a custom port for HTTP:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http.port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9200")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For more information, consult the network module documentation.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --------------------------------- Discovery ----------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pass an initial list of hosts to perform discovery when this node is started:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# The default list of hosts is ["127.0.0.1", "[::1]"]')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#discovery.seed_hosts: ["host1", "host2"]')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Bootstrap the cluster using an initial set of master-eligible nodes:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#cluster.initial_master_nodes: ["node-1", "node-2"]')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For more information, consult the discovery and cluster formation module documentation.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------- Gateway -----------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Block initial recovery after a full cluster restart until N nodes are started:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gateway.recover_after_nodes: 3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For more information, consult the gateway module documentation.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ---------------------------------- Various -----------------------------------")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Require explicit names when deleting indices:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#action.destructive_requires_name: true")]),t._v("\n")])])]),e("ul",[e("li",[t._v("kibana.yml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Kibana is served by a back end server. This setting specifies the port to use.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server.port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5601")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default is 'localhost', which usually means remote machines will not be able to connect.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# To allow connections from remote users, set this parameter to a non-loopback address.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server.host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enables you to specify a path to mount Kibana at if you are running behind a proxy.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from requests it receives, and to prevent a deprecation warning at startup.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This setting cannot end in a slash.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#server.basePath: "/"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specifies whether Kibana should rewrite requests that are prefixed with")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `server.basePath` or require that they are rewritten by your reverse proxy.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This setting was effectively always `false` before Kibana 6.3 and will")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default to `true` starting in Kibana 7.0.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server.rewriteBasePath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The maximum payload size in bytes for incoming server requests.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server.maxPayloadBytes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1048576")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The Kibana server's name.  This is used for display purposes.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#server.name: "your-hostname"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The URLs of the Elasticsearch instances to use for all your queries.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("elasticsearch.hosts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.sunrat.com:9200"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When this setting's value is true Kibana uses the hostname specified in the server.host")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# setting. When the value of this setting is false, Kibana uses the hostname of the host")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# that connects to this Kibana instance.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.preserveHost: true")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Kibana uses an index in Elasticsearch to store saved searches, visualizations and")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dashboards. Kibana creates a new index if the index doesn't already exist.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#kibana.index: ".kibana"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default application to load.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#kibana.defaultAppId: "home"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If your Elasticsearch is protected with basic authentication, these settings provide")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the username and password that the Kibana server uses to perform maintenance on the Kibana")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is proxied through the Kibana server.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#elasticsearch.username: "kibana_system"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#elasticsearch.password: "pass"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These settings enable SSL for outgoing requests from the Kibana server to the browser.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server.ssl.enabled: false")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server.ssl.certificate: /path/to/your/server.crt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server.ssl.key: /path/to/your/server.key")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Optional settings that provide the paths to the PEM-format SSL certificate and key files.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These files are used to verify the identity of Kibana to Elasticsearch and are required when")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# xpack.security.http.ssl.client_authentication in Elasticsearch is set to required.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.ssl.certificate: /path/to/your/client.crt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.ssl.key: /path/to/your/client.key")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Optional setting that enables you to specify a path to the PEM file for the certificate")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# authority for your Elasticsearch instance.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#elasticsearch.ssl.certificateAuthorities: [ "/path/to/your/CA.pem" ]')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# To disregard the validity of SSL certificates, change this setting's value to 'none'.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.ssl.verificationMode: full")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the elasticsearch.requestTimeout setting.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.pingTimeout: 1500")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# must be a positive integer.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.requestTimeout: 30000")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# headers, set this value to [] (an empty list).")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.requestHeadersWhitelist: [ authorization ]")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.customHeaders: {}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.shardTimeout: 30000")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.startupTimeout: 5000")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Logs queries sent to Elasticsearch. Requires logging.verbose set to true.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#elasticsearch.logQueries: false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specifies the path where Kibana creates the process ID file.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid.file: /var/run/kibana.pid")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Enables you specify a file where Kibana stores log output.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#logging.dest: stdout")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the value of this setting to true to suppress all logging output.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#logging.silent: false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the value of this setting to true to suppress all logging output other than error messages.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#logging.quiet: false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the value of this setting to true to log all events, including system usage information")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and all requests.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#logging.verbose: false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the interval in milliseconds to sample system and process performance")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# metrics. Minimum is 100ms. Defaults to 5000.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ops.interval: 5000")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specifies locale to be used for all localizable strings, dates and number formats.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Supported languages are the following: English - en , by default , Chinese - zh-CN .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#i18n.locale: "en"')]),t._v("\n")])])]),e("ul",[e("li",[t._v("docker-compose.yml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filebeat")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker.elastic.co/beats/filebeat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("7.8.1\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ports:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      - 9200:9200")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      - 9300:9300")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" strict.perms=false \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /apps/filebeat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("7.8.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("linux"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("x86_64/filebeat.yml"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/filebeat/filebeat.yml \n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /apps/filebeat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("7.8.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("linux"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("x86_64/logs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/apps/filebeat\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extra_hosts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" www.sunrat.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("192.168.153.136\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("links")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" logstash        \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logstash")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker.elastic.co/logstash/logstash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("7.8.1\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 5044"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5044")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    environment:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      - discovery.type=single-node ")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /apps/logstash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("7.8.1/logstash.conf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/logstash/config/logstash.conf \n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /apps/logstash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("7.8.1/pipelines.yml"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/logstash/config/pipelines.yml \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extra_hosts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" www.sunrat.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("192.168.153.136      \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("links")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" elasticsearch        \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("elasticsearch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker.elastic.co/elasticsearch/elasticsearch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("7.8.1\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9200"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9200")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 9300"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9300")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" discovery.type=single"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /apps/elasticsearch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("7.8.1/elasticsearch.yml"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/elasticsearch/config/elasticsearch.yml\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /apps/elasticsearch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("7.8.1/data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/elasticsearch/data\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kibana")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker.elastic.co/kibana/kibana"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("7.8.1\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 5601"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5601")]),t._v("    \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    links:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      - elasticsearch      ")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /apps/kibana"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("7.8.1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("linux"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("x86_64/kibana.yml"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/share/kibana/config/kibana.yml\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    environment:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      SERVER_NAME: kibana")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      ELASTICSEARCH_HOSTS: http://www.sunrat.com:9200")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extra_hosts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" www.sunrat.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("192.168.153.136\n")])])]),e("p",[e("strong",[t._v("2. ELK管理")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("官网下载对应版本安装包")])]),t._v(" "),e("li",[e("p",[t._v("启动ELK")])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#前台启动(镜像级)")]),t._v("\ndocker-compose up\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后台启动(镜像级)")]),t._v("\ndocker-compose up -d\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器级")]),t._v("\ndocker-compose start\n")])])]),e("ul",[e("li",[t._v("停止ELK")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#（镜像级）")]),t._v("\ndocker-compose down\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#容器级")]),t._v("\ndocker-compose stop\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);