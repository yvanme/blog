(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{379:function(s,e,n){"use strict";n.r(e);var t=n(27),a=Object(t.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"docker安装常用中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker安装常用中间件"}},[s._v("#")]),s._v(" Docker安装常用中间件")]),s._v(" "),n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),n("p",[s._v("[TOC]")]),s._v(" "),n("p",[n("strong",[s._v("安装环境：")])]),s._v(" "),n("p",[n("strong",[s._v("system：CentOS7")])]),s._v(" "),n("h2",{attrs:{id:"redis安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis安装"}},[s._v("#")]),s._v(" Redis安装")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("拉取jenkins镜像")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("docker pull redis:6.0.6\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("配置本地文件目录")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /apps/redis/data\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /apps/redis/conf\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("在/apps/redis/conf配置redis.conf")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis configuration file example.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that in order to read the configuration file, Redis must be")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# started with the file path as first argument:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./redis-server /path/to/redis.conf")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note on units: when memory size is needed, it is possible to specify")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it in the usual form of 1k 5GB 4M and so forth:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1k => 1000 bytes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1kb => 1024 bytes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1m => 1000000 bytes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1mb => 1024*1024 bytes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1g => 1000000000 bytes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1gb => 1024*1024*1024 bytes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# units are case insensitive so 1GB 1Gb 1gB are all the same.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## INCLUDES ###################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Include one or more other config files here.  This is useful if you")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# have a standard template that goes to all Redis servers but also need")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to customize a few per-server settings.  Include files can include")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# other files, so use this wisely.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Notice option "include" won\'t be rewritten by command "CONFIG REWRITE"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from admin or Redis Sentinel. Since Redis always uses the last processed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# line as value of a configuration directive, you'd better put includes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# at the beginning of this file to avoid overwriting config change at runtime.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If instead you are interested in using includes to override configuration")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# options, it is better to use include as the last line.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# include /path/to/local.conf")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# include /path/to/other.conf")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## MODULES #####################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Load modules at startup. If the server is not able to load modules")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it will abort. It is possible to use multiple loadmodule directives.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# loadmodule /path/to/my_module.so")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# loadmodule /path/to/other_module.so")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## NETWORK #####################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# By default, if no "bind" configuration directive is specified, Redis listens')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for connections from all the network interfaces available on the server.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is possible to listen to just one or multiple selected interfaces using")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# the "bind" configuration directive, followed by one or more IP addresses.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Examples:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bind 192.168.1.100 10.0.0.1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bind 127.0.0.1 ::1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# internet, binding to all the interfaces is dangerous and will expose the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# instance to everybody on the internet. So by default we uncomment the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# following bind directive, that will force Redis to listen only into")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the IPv4 loopback interface address (this means Redis will be able to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# accept connections only from clients running into the same computer it")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is running).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# JUST COMMENT THE FOLLOWING LINE.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bind 127.0.0.1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bind 192.168.153.135")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Protected mode is a layer of security protection, in order to avoid that")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis instances left open on the internet are accessed and exploited.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When protected mode is on and if:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) The server is not binding explicitly to a set of addresses using the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#    "bind" directive.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) No password is configured.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The server only accepts connections from clients connecting from the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sockets.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default protected mode is enabled. You should disable it only if")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you are sure you want clients from other hosts to connect to Redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# even if no authentication is configured, nor a specific set of interfaces")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# are explicitly listed using the "bind" directive.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#protected-mode yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Accept connections on the specified port, default is 6379 (IANA #815344).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If port 0 is specified Redis will not listen on a TCP socket.")]),s._v("\nport "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TCP listen() backlog.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In high requests-per-second environments you need an high backlog in order")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to avoid slow clients connections issues. Note that the Linux kernel")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will silently truncate it to the value of /proc/sys/net/core/somaxconn so")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure to raise both the value of somaxconn and tcp_max_syn_backlog")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to get the desired effect.")]),s._v("\ntcp-backlog "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("511")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Unix socket.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify the path for the Unix socket that will be used to listen for")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# incoming connections. There is no default, so Redis will not listen")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# on a unix socket when not specified.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unixsocket /tmp/redis.sock")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unixsocketperm 700")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Close the connection after a client is idle for N seconds (0 to disable)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TCP keepalive.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of communication. This is useful for two reasons:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) Detect dead peers.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) Take the connection alive from the point of view of network")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    equipment in the middle.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On Linux, the specified value (in seconds) is the period used to send ACKs.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that to close the connection the double of the time is needed.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On other kernels the period depends on the kernel configuration.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A reasonable value for this option is 300 seconds, which is the new")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis default starting with Redis 3.2.1.")]),s._v("\ntcp-keepalive "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# TLS/SSL #####################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# By default, TLS/SSL is disabled. To enable it, the "tls-port" configuration')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# directive can be used to define TLS-listening ports. To enable TLS on the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# default port, use:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# port 0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-port 6379")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Configure a X.509 certificate and private key to use for authenticating the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# server to connected clients, masters or cluster peers.  These files should be")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PEM formatted.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-cert-file redis.crt ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-key-file redis.key")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Configure a DH parameters file to enable Diffie-Hellman (DH) key exchange:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-dh-params-file redis.dh")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Configure a CA certificate(s) bundle or directory to authenticate TLS/SSL")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# clients and peers.  Redis requires an explicit configuration of at least one")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of these, and will not implicitly use the system wide configuration.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-ca-cert-file ca.crt")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-ca-cert-dir /etc/ssl/certs")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default, clients (including replica servers) on a TLS port are required")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to authenticate using valid client side certificates.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is possible to disable authentication using this directive.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-auth-clients no")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default, a Redis replica does not attempt to establish a TLS connection")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with its master.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use the following directive to enable TLS on replication links.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-replication yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default, the Redis Cluster bus uses a plain TCP connection. To enable")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# TLS for the bus protocol, use the following directive:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-cluster yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Explicitly specify TLS versions to support. Allowed values are case insensitive")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# and include "TLSv1", "TLSv1.1", "TLSv1.2", "TLSv1.3" (OpenSSL >= 1.1.1) or')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# any combination. To enable only TLSv1.2 and TLSv1.3, use:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# tls-protocols "TLSv1.2 TLSv1.3"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Configure allowed ciphers.  See the ciphers(1ssl) manpage for more information")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# about the syntax of this string.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: this configuration applies only to <= TLSv1.2.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-ciphers DEFAULT:!MEDIUM")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Configure allowed TLSv1.3 ciphersuites.  See the ciphers(1ssl) manpage for more")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# information about the syntax of this string, and specifically for TLSv1.3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ciphersuites.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When choosing a cipher, use the server's preference instead of the client")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# preference. By default, the server follows the client's preference.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-prefer-server-ciphers yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default, TLS session caching is enabled to allow faster and less expensive")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# reconnections by clients that support it. Use the following directive to disable")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# caching.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-session-caching no")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Change the default number of TLS sessions cached. A zero value sets the cache")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to unlimited size. The default size is 20480.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-session-cache-size 5000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Change the default timeout of cached TLS sessions. The default timeout is 300")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seconds.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tls-session-cache-timeout 60")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# GENERAL #####################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default Redis does not run as a daemon. Use 'yes' if you need it.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.")]),s._v("\ndaemonize no\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you run Redis from upstart or systemd, Redis can interact with your")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# supervision tree. Options:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   supervised no      - no supervision interaction")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   supervised systemd - signal systemd by writing READY=1 to $NOTIFY_SOCKET")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   supervised auto    - detect upstart or systemd method based on")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                        UPSTART_JOB or NOTIFY_SOCKET environment variables")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Note: these supervision methods only signal "process is ready."')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       They do not enable continuous liveness pings back to your supervisor.")]),s._v("\nsupervised no\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If a pid file is specified, Redis writes it where specified at startup")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and removes it at exit.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When the server runs non daemonized, no pid file is created if none is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# specified in the configuration. When the server is daemonized, the pid file")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# is used even if not specified, defaulting to "/var/run/redis.pid".')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Creating a pid file is best effort: if Redis is not able to create it")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nothing bad happens, the server will start and run normally.")]),s._v("\npidfile /var/run/redis_6379.pid\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify the server verbosity level.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This can be one of:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# debug (a lot of information, useful for development/testing)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# verbose (many rarely useful info, but not a mess like the debug level)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# notice (moderately verbose, what you want in production probably)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# warning (only very important / critical messages are logged)")]),s._v("\nloglevel notice\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify the log file name. Also the empty string can be used to force")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis to log on the standard output. Note that if you use standard")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output for logging but daemonize, logs will be sent to /dev/null")]),s._v("\nlogfile "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To enable logging to the system logger, just set 'syslog-enabled' to yes,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and optionally update the other syslog parameters to suit your needs.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syslog-enabled no")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify the syslog identity.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syslog-ident redis")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syslog-facility local0")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set the number of databases. The default database is DB 0, you can select")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a different one on a per-connection basis using SELECT <dbid> where")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dbid is a number between 0 and 'databases'-1")]),s._v("\ndatabases "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default Redis shows an ASCII art logo only when started to log to the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# standard output and if the standard output is a TTY. Basically this means")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that normally a logo is displayed only in interactive sessions.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However it is possible to force the pre-4.0 behavior and always show a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ASCII art logo in startup logs by setting the following option to yes.")]),s._v("\nalways-show-logo "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ SNAPSHOTTING  ################################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Save the DB on disk:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   save <seconds> <changes>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   Will save the DB if both the given number of seconds and the given")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   number of write operations against the DB occurred.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   In the example below the behaviour will be to save:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   after 900 sec (15 min) if at least 1 key changed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   after 300 sec (5 min) if at least 10 keys changed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   after 60 sec if at least 10000 keys changed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   Note: you can disable saving completely by commenting out all "save" lines.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   It is also possible to remove all the previously configured save")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   points by adding a save directive with a single empty string argument")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   like in the following example:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   save ""')]),s._v("\n\nsave "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("900")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nsave "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nsave "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default Redis will stop accepting writes if RDB snapshots are enabled")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (at least one save point) and the latest background save failed.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This will make the user aware (in a hard way) that data is not persisting")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# on disk properly, otherwise chances are that no one will notice and some")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# disaster will happen.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If the background saving process will start working again Redis will")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# automatically allow writes again.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However if you have setup your proper monitoring of the Redis server")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and persistence, you may want to disable this feature so that Redis will")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# continue to work as usual even if there are problems with disk,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# permissions, and so forth.")]),s._v("\nstop-writes-on-bgsave-error "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Compress string objects using LZF when dump .rdb databases?")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For default that's set to 'yes' as it's almost always a win.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you want to save some CPU in the saving child set it to 'no' but")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the dataset will likely be bigger if you have compressible values or keys.")]),s._v("\nrdbcompression "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This makes the format more resistant to corruption but there is a performance")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hit to pay (around 10%) when saving and loading RDB files, so you can disable it")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for maximum performances.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RDB files created with checksum disabled have a checksum of zero that will")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tell the loading code to skip the check.")]),s._v("\nrdbchecksum "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The filename where to dump the DB")]),s._v("\ndbfilename dump.rdb\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Remove RDB files used by replication in instances without persistence")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enabled. By default this option is disabled, however there are environments")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# where for regulations or other security concerns, RDB files persisted on")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# disk by masters in order to feed replicas, or stored on disk by replicas")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to load them for the initial synchronization, should be deleted")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ASAP. Note that this option ONLY WORKS in instances that have both AOF")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and RDB persistence disabled, otherwise is completely ignored.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# An alternative (and sometimes better) way to obtain the same effect is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to use diskless replication on both master and replicas instances. However")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in the case of replicas, diskless is not always an option.")]),s._v("\nrdb-del-sync-files no\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The working directory.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The DB will be written inside this directory, with the filename specified")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# above using the 'dbfilename' configuration directive.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The Append Only File will also be created inside this directory.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that you must specify a directory here, not a file name.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v(" ./\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# REPLICATION #################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Master-Replica replication. Use replicaof to make a Redis instance a copy of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# another Redis server. A few things to understand ASAP about Redis replication.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   +------------------+      +---------------+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   |      Master      | ---\x3e |    Replica    |")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   | (receive writes) |      |  (exact copy) |")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   +------------------+      +---------------+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) Redis replication is asynchronous, but you can configure a master to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    stop accepting writes if it appears to be not connected with at least")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    a given number of replicas.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) Redis replicas are able to perform a partial resynchronization with the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    master if the replication link is lost for a relatively small amount of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    time. You may want to configure the replication backlog size (see the next")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    sections of this file) with a sensible value depending on your needs.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3) Replication is automatic and does not need user intervention. After a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    network partition replicas automatically try to reconnect to masters")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    and resynchronize with them.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replicaof <masterip> <masterport>")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# If the master is password protected (using the "requirepass" configuration')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# directive below) it is possible to tell the replica to authenticate before")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# starting the replication synchronization process, otherwise the master will")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# refuse the replica request.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# masterauth <master-password>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However this is not enough if you are using Redis ACLs (for Redis version")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 6 or greater), and the default user is not capable of running the PSYNC")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# command and/or other commands needed for replication. In this case it's")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# better to configure a special user to use with replication, and specify the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# masteruser configuration as such:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# masteruser <username>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When masteruser is specified, the replica will authenticate against its")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master using the new AUTH form: AUTH <username> <password>.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When a replica loses its connection with the master, or when the replication")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is still in progress, the replica can act in two different ways:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) if replica-serve-stale-data is set to 'yes' (the default) the replica will")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    still reply to client requests, possibly with out of date data, or the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    data set may just be empty if this is the first synchronization.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) if replica-serve-stale-data is set to 'no' the replica will reply with")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#    an error "SYNC with master in progress" to all the kind of commands')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    but to INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    SUBSCRIBE, UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    COMMAND, POST, HOST: and LATENCY.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nreplica-serve-stale-data "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# You can configure a replica instance to accept writes or not. Writing against")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a replica instance may be useful to store some ephemeral data (because data")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# written on a replica will be easily deleted after resync with the master) but")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# may also cause problems if clients are writing to it because of a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# misconfiguration.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Since Redis 2.6 by default replicas are read-only.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: read only replicas are not designed to be exposed to untrusted clients")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# on the internet. It's just a protection layer against misuse of the instance.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Still a read only replica exports by default all the administrative commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# security of read only replicas using 'rename-command' to shadow all the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# administrative / dangerous commands.")]),s._v("\nreplica-read-only "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replication SYNC strategy: disk or socket.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# New replicas and reconnecting replicas that are not able to continue the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replication process just receiving differences, need to do what is called a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "full synchronization". An RDB file is transmitted from the master to the')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replicas.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The transmission can happen in two different ways:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) Disk-backed: The Redis master creates a new process that writes the RDB")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                 file on disk. Later the file is transferred by the parent")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                 process to the replicas incrementally.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) Diskless: The Redis master creates a new process that directly writes the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#              RDB file to replica sockets, without touching the disk at all.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# With disk-backed replication, while the RDB file is generated, more replicas")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# can be queued and served with the RDB file as soon as the current child")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# producing the RDB file finishes its work. With diskless replication instead")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# once the transfer starts, new replicas arriving will be queued and a new")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# transfer will start when the current one terminates.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When diskless replication is used, the master waits a configurable amount of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# time (in seconds) before starting the transfer in the hope that multiple")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replicas will arrive and the transfer can be parallelized.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# With slow disks and fast (large bandwidth) networks, diskless replication")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# works better.")]),s._v("\nrepl-diskless-sync no\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When diskless replication is enabled, it is possible to configure the delay")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the server waits in order to spawn the child that transfers the RDB via socket")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to the replicas.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This is important since once the transfer starts, it is not possible to serve")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# new replicas arriving, that will be queued for the next RDB transfer, so the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# server waits a delay in order to let more replicas arrive.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The delay is specified in seconds, and by default is 5 seconds. To disable")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it entirely just set it to 0 seconds and the transfer will start ASAP.")]),s._v("\nrepl-diskless-sync-delay "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -----------------------------------------------------------------------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# WARNING: RDB diskless load is experimental. Since in this setup the replica")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# does not immediately store an RDB on disk, it may cause data loss during")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# failovers. RDB diskless load + Redis modules not handling I/O reads may also")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cause Redis to abort in case of I/O errors during the initial synchronization")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stage with the master. Use only if your do what you are doing.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -----------------------------------------------------------------------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replica can load the RDB it reads from the replication link directly from the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# socket, or store the RDB to a file and read that file after it was completely")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# recived from the master.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In many cases the disk is slower than the network, and storing and loading")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the RDB file may increase replication time (and even increase the master's")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copy on Write memory and salve buffers).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However, parsing the RDB file directly from the socket may mean that we have")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to flush the contents of the current database before the full rdb was")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# received. For this reason we have the following options:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "disabled"    - Don\'t use diskless load (store the rdb file to the disk first)')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "on-empty-db" - Use diskless load only when it is completely safe.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "swapdb"      - Keep a copy of the current db contents in RAM while parsing')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                 the data directly from the socket. note that this requires")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                 sufficient memory, if you don't have it, you risk an OOM kill.")]),s._v("\nrepl-diskless-load disabled\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replicas send PINGs to server in a predefined interval. It's possible to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# change this interval with the repl_ping_replica_period option. The default")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# value is 10 seconds.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# repl-ping-replica-period 10")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The following option sets the replication timeout for:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) Bulk transfer I/O during SYNC, from the point of view of replica.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) Master timeout from the point of view of replicas (data, pings).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3) Replica timeout from the point of view of masters (REPLCONF ACK pings).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is important to make sure that this value is greater than the value")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# specified for repl-ping-replica-period otherwise a timeout will be detected")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# every time there is low traffic between the master and the replica.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# repl-timeout 60")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Disable TCP_NODELAY on the replica socket after SYNC?")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# If you select "yes" Redis will use a smaller number of TCP packets and')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# less bandwidth to send data to replicas. But this can add a delay for")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the data to appear on the replica side, up to 40 milliseconds with")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Linux kernels using a default configuration.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# If you select "no" the delay for data to appear on the replica side will')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# be reduced but more bandwidth will be used for replication.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default we optimize for low latency, but in very high traffic conditions")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# or when the master and replicas are many hops away, turning this to "yes" may')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# be a good idea.")]),s._v("\nrepl-disable-tcp-nodelay no\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set the replication backlog size. The backlog is a buffer that accumulates")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replica data when replicas are disconnected for some time, so that when a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replica wants to reconnect again, often a full resync is not needed, but a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# partial resync is enough, just passing the portion of data the replica")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# missed while disconnected.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The bigger the replication backlog, the longer the time the replica can be")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# disconnected and later be able to perform a partial resynchronization.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The backlog is only allocated once there is at least a replica connected.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# repl-backlog-size 1mb")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# After a master has no longer connected replicas for some time, the backlog")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will be freed. The following option configures the amount of seconds that")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# need to elapse, starting from the time the last replica disconnected, for")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the backlog buffer to be freed.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that replicas never free the backlog for timeout, since they may be")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# promoted to masters later, and should be able to correctly "partially')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# resynchronize" with the replicas: hence they should always accumulate backlog.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A value of 0 means to never release the backlog.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# repl-backlog-ttl 3600")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The replica priority is an integer number published by Redis in the INFO")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output. It is used by Redis Sentinel in order to select a replica to promote")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# into a master if the master is no longer working correctly.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A replica with a low priority number is considered better for promotion, so")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for instance if there are three replicas with priority 10, 100, 25 Sentinel")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will pick the one with priority 10, that is the lowest.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However a special priority of 0 marks the replica as not able to perform the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# role of master, so a replica with priority of 0 will never be selected by")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis Sentinel for promotion.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default the priority is 100.")]),s._v("\nreplica-priority "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is possible for a master to stop accepting writes if there are less than")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# N replicas connected, having a lag less or equal than M seconds.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# The N replicas need to be in "online" state.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The lag in seconds, that must be <= the specified value, is calculated from")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the last ping received from the replica, that is usually sent every second.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This option does not GUARANTEE that N replicas will accept the write, but")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will limit the window of exposure for lost writes in case not enough replicas")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# are available, to the specified number of seconds.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For example to require at least 3 replicas with a lag <= 10 seconds use:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# min-replicas-to-write 3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# min-replicas-max-lag 10")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Setting one or the other to 0 disables the feature.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default min-replicas-to-write is set to 0 (feature disabled) and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# min-replicas-max-lag is set to 10.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A Redis master is able to list the address and port of the attached")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# replicas in different ways. For example the "INFO replication" section')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# offers this information, which is used, among other tools, by")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis Sentinel in order to discover replica instances.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Another place where this info is available is in the output of the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "ROLE" command of a master.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The listed IP and address normally reported by a replica is obtained")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in the following way:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   IP: The address is auto detected by checking the peer address")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   of the socket used by the replica to connect with the master.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   Port: The port is communicated by the replica during the replication")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   handshake, and is normally the port that the replica is using to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   listen for connections.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However when port forwarding or Network Address Translation (NAT) is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# used, the replica may be actually reachable via different IP and port")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pairs. The following two options can be used by a replica in order to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# report to its master a specific set of IP and port, so that both INFO")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and ROLE will report those values.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# There is no need to use both the options if you need to override just")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the port or the IP address.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replica-announce-ip 5.5.5.5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replica-announce-port 1234")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################### KEYS TRACKING #################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis implements server assisted support for client side caching of values.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This is implemented using an invalidation table that remembers, using")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 16 millions of slots, what clients may have certain subsets of keys. In turn")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this is used in order to send invalidation messages to clients. Please")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to understand more about the feature check this page:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   https://redis.io/topics/client-side-caching")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When tracking is enabled for a client, all the read only queries are assumed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to be cached: this will force Redis to store information in the invalidation")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# table. When keys are modified, such information is flushed away, and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# invalidation messages are sent to the clients. However if the workload is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# heavily dominated by reads, Redis could use more and more memory in order")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to track the keys fetched by many clients.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For this reason it is possible to configure a maximum fill value for the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# invalidation table. By default it is set to 1M of keys, and once this limit")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is reached, Redis will start to evict keys in the invalidation table")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# even if they were not modified, just to reclaim memory: this will in turn")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# force the clients to invalidate the cached values. Basically the table")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maximum size is a trade off between the memory you want to spend server")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# side to track information about who cached what, and the ability of clients")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to retain cached objects in memory.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you set the value to 0, it means there are no limits, and Redis will")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# retain as many keys as needed in the invalidation table.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# In the "stats" INFO section, you can find information about the number of')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# keys in the invalidation table at every given moment.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: when key tracking is used in broadcasting mode, no memory is used")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in the server side so this setting is useless.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tracking-table-max-keys 1000000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## SECURITY ###################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Warning: since Redis is pretty fast an outside user can try up to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 million passwords per second against a modern box. This means that you")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# should use very strong passwords, otherwise they will be very easy to break.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that because the password is really a shared secret between the client")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and the server, and should not be memorized by any human, the password")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# can be easily a long string from /dev/urandom or whatever, so by using a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# long and unguessable password no brute force attack will be possible.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis ACL users are defined in the following format:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   user <username> ... acl rules ...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For example:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   user worker +@list +@connection ~jobs:* on >ffa9203c493aa99")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# The special username "default" is used for new connections. If this user')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# has the "nopass" rule, then new connections will be immediately authenticated')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# as the "default" user without the need of any password provided via the')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# AUTH command. Otherwise if the "default" user is not flagged with "nopass"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the connections will start in not authenticated state, and will require")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AUTH (or the HELLO command AUTH option) in order to be authenticated and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# start to work.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The ACL rules that describe what an user can do are the following:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  on           Enable the user: it is possible to authenticate as this user.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  off          Disable the user: it's no longer possible to authenticate")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               with this user, however the already authenticated connections")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               will still work.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  +<command>   Allow the execution of that command")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  -<command>   Disallow the execution of that command")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  +@<category> Allow the execution of all the commands in such category")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               with valid categories are like @admin, @set, @sortedset, ...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               and so forth, see the full list in the server.c file where")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               the Redis command table is described and defined.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               The special category @all means all the commands, but currently")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               present in the server, and that will be loaded in the future")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               via modules.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  +<command>|subcommand    Allow a specific subcommand of an otherwise")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                           disabled command. Note that this form is not")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                           allowed as negative like -DEBUG|SEGFAULT, but")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#                           only additive starting with "+".')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  allcommands  Alias for +@all. Note that it implies the ability to execute")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               all the future commands loaded via the modules system.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  nocommands   Alias for -@all.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ~<pattern>   Add a pattern of keys that can be mentioned as part of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               commands. For instance ~* allows all the keys. The pattern")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               is a glob-style pattern like the one of KEYS.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               It is possible to specify multiple patterns.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  allkeys      Alias for ~*")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  resetkeys    Flush the list of allowed keys patterns.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ><password>  Add this passowrd to the list of valid password for the user.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#               For example >mypass will add "mypass" to the list.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#               This directive clears the "nopass" flag (see later).')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  <<password>  Remove this password from the list of valid passwords.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  nopass       All the set passwords of the user are removed, and the user")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               is flagged as requiring no password: it means that every")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               password will work against this user. If this directive is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               used for the default user, every new connection will be")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               immediately authenticated with the default user without")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#               any explicit AUTH command required. Note that the "resetpass"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               directive will clear this condition.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  resetpass    Flush the list of allowed passwords. Moreover removes the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#               "nopass" status. After "resetpass" the user has no associated')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               passwords and there is no way to authenticate without adding")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#               some password (or setting it as "nopass" later).')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  reset        Performs the following actions: resetpass, resetkeys, off,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               -@all. The user returns to the same state it has immediately")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#               after its creation.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ACL rules can be specified in any order: for instance you can start with")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# passwords, then flags, or key patterns. However note that the additive")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and subtractive rules will CHANGE MEANING depending on the ordering.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For instance see the following example:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   user alice on +@all -DEBUG ~* >somepassword")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# This will allow "alice" to use all the commands with the exception of the')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# DEBUG command, since +@all added all the commands to the set of the commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# alice can use, and later DEBUG was removed. However if we invert the order")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of two ACL rules the result will be different:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   user alice on -DEBUG +@all ~* >somepassword")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Now DEBUG was removed when alice had yet no commands in the set of allowed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commands, later all the commands are added, so the user will be able to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# execute everything.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Basically ACL rules are processed left-to-right.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For more information about ACL configuration please refer to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the Redis web site at https://redis.io/topics/acl")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ACL LOG")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The ACL Log tracks failed commands and authentication events associated")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with ACLs. The ACL Log is useful to troubleshoot failed commands blocked ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# by ACLs. The ACL Log is stored in memory. You can reclaim memory with ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ACL LOG RESET. Define the maximum entry length of the ACL Log below.")]),s._v("\nacllog-max-len "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Using an external ACL file")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Instead of configuring users here in this file, it is possible to use")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a stand-alone file just listing users. The two methods cannot be mixed:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if you configure users here and at the same time you activate the exteranl")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ACL file, the server will refuse to start.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The format of the external ACL user file is exactly the same as the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# format that is used inside redis.conf to describe users.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aclfile /etc/redis/users.acl")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# IMPORTANT NOTE: starting with Redis 6 "requirepass" is just a compatiblity')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# layer on top of the new ACL system. The option effect will be just setting")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the password for the default user. Clients will still authenticate using")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AUTH <password> as usually, or more explicitly with AUTH default <password>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if they follow the new protocol: both will work.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# requirepass foobared")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Command renaming (DEPRECATED).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ------------------------------------------------------------------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# WARNING: avoid using this option if possible. Instead use ACLs to remove")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commands from the default user, and put them only in some admin user you")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create for administrative purposes.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ------------------------------------------------------------------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is possible to change the name of dangerous commands in a shared")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# environment. For instance the CONFIG command may be renamed into something")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hard to guess so that it will still be available for internal-use tools")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# but not available for general clients.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is also possible to completely kill a command by renaming it into")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# an empty string:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# rename-command CONFIG ""')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Please note that changing the name of commands that are logged into the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AOF file or transmitted to replicas may cause problems.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################### CLIENTS ####################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set the max number of connected clients at the same time. By default")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this limit is set to 10000 clients, however if the Redis server is not")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# able to configure the process file limit to allow for the specified limit")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the max number of allowed clients is set to the current file limit")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# minus 32 (as Redis reserves a few file descriptors for internal uses).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Once the limit is reached Redis will close all the new connections sending")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# an error 'max number of clients reached'.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IMPORTANT: When Redis Cluster is used, the max number of connections is also")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shared with the cluster bus: every node in the cluster will use two")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# connections, one incoming and another outgoing. It is important to size the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit accordingly in case of very large clusters.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxclients 10000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## MEMORY MANAGEMENT ################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set a memory usage limit to the specified amount of bytes.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When the memory limit is reached Redis will try to remove keys")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# according to the eviction policy selected (see maxmemory-policy).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If Redis can't remove keys according to the policy, or if the policy is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set to 'noeviction', Redis will start to reply with errors to commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that would use more memory, like SET, LPUSH, and so on, and will continue")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to reply to read-only commands like GET.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This option is usually useful when using Redis as an LRU or LFU cache, or to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set a hard memory limit for an instance (using the 'noeviction' policy).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# WARNING: If you have replicas attached to an instance with maxmemory on,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the size of the output buffers needed to feed the replicas are subtracted")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from the used memory count, so that network problems / resyncs will")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# not trigger a loop where keys are evicted, and in turn the output")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# buffer of replicas is full with DELs of keys evicted triggering the deletion")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of more keys, and so forth until the database is completely emptied.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In short... if you have replicas attached it is suggested that you set a lower")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit for maxmemory so that there is some free RAM on the system for replica")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output buffers (but this is not needed if the policy is 'noeviction').")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxmemory <bytes>")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is reached. You can select one from the following behaviors:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-lru -> Evict using approximated LRU, only keys with an expire set.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-lru -> Evict any key using approximated LRU.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-lfu -> Evict using approximated LFU, only keys with an expire set.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-lfu -> Evict any key using approximated LFU.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-random -> Remove a random key having an expire set.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allkeys-random -> Remove a random key, any key.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volatile-ttl -> Remove the key with the nearest expire time (minor TTL)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# noeviction -> Don't evict anything, just return an error on write operations.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# LRU means Least Recently Used")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# LFU means Least Frequently Used")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Both LRU, LFU and volatile-ttl are implemented using approximated")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# randomized algorithms.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: with any of the above policies, Redis will return an error on write")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       operations, when there are no suitable keys for eviction.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       At the date of writing these commands are: set setnx setex append")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       getset mset msetnx exec sort")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The default is:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxmemory-policy noeviction")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# algorithms (in order to save memory), so you can tune it for speed or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# accuracy. For default Redis will check five keys and pick the one that was")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# used less recently, you can change the sample size using the following")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# configuration directive.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The default of 5 produces good enough results. 10 Approximates very closely")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# true LRU but costs more CPU. 3 is faster but not very accurate.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maxmemory-samples 5")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Starting from Redis 5, by default a replica will ignore its maxmemory setting")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (unless it is promoted to master after a failover or manually). It means")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that the eviction of keys will be just handled by the master, sending the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# DEL commands to the replica as keys evict in the master side.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This behavior ensures that masters and replicas stay consistent, and is usually")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# what you want, however if your replica is writable, or you want the replica")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to have a different memory setting, and you are sure all the writes performed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to the replica are idempotent, then you may change this default (but be sure")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to understand what you are doing).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that since the replica by default does not evict, it may end using more")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# memory than the one set via maxmemory (there are certain buffers that may")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# be larger on the replica, or data structures may sometimes take more memory")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and so forth). So make sure you monitor your replicas and make sure they")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# have enough memory to never hit a real out-of-memory condition before the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master hits the configured maxmemory setting.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replica-ignore-maxmemory yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis reclaims expired keys in two ways: upon access when those keys are")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# found to be expired, and also in background, in what is called the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "active expire key". The key space is slowly and interactively scanned')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# looking for expired keys to reclaim, so that it is possible to free memory")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of keys that are expired and will never be accessed again in a short time.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The default effort of the expire cycle will try to avoid having more than")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ten percent of expired keys still in memory, and will try to avoid consuming")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# more than 25% of total memory and to add latency to the system. However")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# it is possible to increase the expire "effort" that is normally set to')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "1", to a greater value, up to the value "10". At its maximum value the')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# system will use more CPU, longer cycles (and technically may introduce")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# more latency), and will tollerate less already expired keys still present")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in the system. It's a tradeoff betweeen memory, CPU and latecy.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# active-expire-effort 1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# LAZY FREEING ####################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis has two primitives to delete keys. One is called DEL and is a blocking")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# deletion of the object. It means that the server stops processing new commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to reclaim all the memory associated with an object in a synchronous")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# way. If the key deleted is associated with a small object, the time needed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to execute the DEL command is very small and comparable to most other")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# O(1) or O(log_N) commands in Redis. However if the key is associated with an")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aggregated value containing millions of elements, the server can block for")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a long time (even seconds) in order to complete the operation.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For the above reasons Redis also offers non blocking deletion primitives")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# FLUSHDB commands, in order to reclaim memory in background. Those commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# are executed in constant time. Another thread will incrementally free the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# object in the background as fast as possible.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It's up to the design of the application to understand when it is a good")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# idea to use one or the other. However the Redis server sometimes has to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete keys or flush the whole database as a side effect of other operations.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specifically Redis deletes objects independently of a user call in the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# following scenarios:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) On eviction, because of the maxmemory and maxmemory policy configurations,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    in order to make room for new data, without going over the specified")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    memory limit.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) Because of expire: when a key with an associated time to live (see the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    EXPIRE command) must be deleted from memory.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3) Because of a side effect of a command that stores data on a key that may")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    already exist. For example the RENAME command may delete the old key")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    content when it is replaced with another one. Similarly SUNIONSTORE")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    or SORT with STORE option may delete existing keys. The SET command")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    itself removes any old content of the specified key in order to replace")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    it with the specified string.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4) During replication, when a replica performs a full resynchronization with")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    its master, the content of the whole database is removed in order to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    load the RDB file just transferred.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In all the above cases the default is to delete objects in a blocking way,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# like if DEL was called. However you can configure each case specifically")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to instead release memory in a non-blocking way like if UNLINK")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# was called, using the following configuration directives.")]),s._v("\n\nlazyfree-lazy-eviction no\nlazyfree-lazy-expire no\nlazyfree-lazy-server-del no\nreplica-lazy-flush no\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is also possible, for the case when to replace the user code DEL calls")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with UNLINK calls is not easy, to modify the default behavior of the DEL")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# command to act exactly like UNLINK, using the following configuration")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# directive:")]),s._v("\n\nlazyfree-lazy-user-del no\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ THREADED I/O #################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis is mostly single threaded, however there are certain threaded")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# operations such as UNLINK, slow I/O accesses and other things that are")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# performed on side threads.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Now it is also possible to handle Redis clients socket reads and writes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in different I/O threads. Since especially writing is so slow, normally")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis users use pipelining in order to speedup the Redis performances per")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# core, and spawn multiple instances in order to scale more. Using I/O")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# threads it is possible to easily speedup two times Redis without resorting")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to pipelining nor sharding of the instance.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default threading is disabled, we suggest enabling it only in machines")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that have at least 4 or more cores, leaving at least one spare core.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Using more than 8 threads is unlikely to help much. We also recommend using")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# threaded I/O only if you actually have performance problems, with Redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# instances being able to use a quite big percentage of CPU time, otherwise")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# there is no point in using this feature.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# So for instance if you have a four cores boxes, try to use 2 or 3 I/O")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# threads, if you have a 8 cores, try to use 6 threads. In order to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enable I/O threads use the following configuration directive:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# io-threads 4")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Setting io-threads to 1 will just use the main thread as usually.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When I/O threads are enabled, we only use threads for writes, that is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to thread the write(2) syscall and transfer the client buffers to the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# socket. However it is also possible to enable threading of reads and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# protocol parsing using the following configuration directive, by setting")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it to yes:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# io-threads-do-reads no")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Usually threading reads doesn't help much.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NOTE 1: This configuration directive cannot be changed at runtime via")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CONFIG SET. Aso this feature currently does not work when SSL is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enabled.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NOTE 2: If you want to test the Redis speedup using redis-benchmark, make")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sure you also run the benchmark itself in threaded mode, using the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --threads option to match the number of Redis theads, otherwise you'll not")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# be able to notice the improvements.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################## APPEND ONLY MODE ###############################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default Redis asynchronously dumps the dataset on disk. This mode is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# good enough in many applications, but an issue with the Redis process or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a power outage may result into a few minutes of writes lost (depending on")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the configured save points).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The Append Only File is an alternative persistence mode that provides")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# much better durability. For instance using the default data fsync policy")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (see later in the config file) Redis can lose just one second of writes in a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dramatic event like a server power outage, or a single write if something")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# wrong with the Redis process itself happens, but the operating system is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# still running correctly.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AOF and RDB persistence can be enabled at the same time without problems.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If the AOF is enabled on startup Redis will load the AOF, that is the file")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with the better durability guarantees.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Please check http://redis.io/topics/persistence for more information.")]),s._v("\n\nappendonly "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# The name of the append only file (default: "appendonly.aof")')]),s._v("\n\nappendfilename "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"appendonly.aof"')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The fsync() call tells the Operating System to actually write data on disk")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# instead of waiting for more data in the output buffer. Some OS will really flush")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# data on disk, some other OS will just try to do it ASAP.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis supports three different modes:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# no: don't fsync, just let the OS flush the data when it wants. Faster.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# always: fsync after every write to the append only log. Slow, Safest.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# everysec: fsync only one time every second. Compromise.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# The default is "everysec", as that\'s usually the right compromise between')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# speed and data safety. It's up to you to understand if you can relax this to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "no" that will let the operating system flush the output buffer when')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it wants, for better performances (but if you can live with the idea of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# some data loss consider the default persistence mode that's snapshotting),")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# or on the contrary, use "always" that\'s very slow but a bit safer than')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# everysec.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# More details please check the following article:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# http://antirez.com/post/redis-persistence-demystified.html")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# If unsure, use "everysec".')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# appendfsync always")]),s._v("\nappendfsync everysec\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# appendfsync no")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When the AOF fsync policy is set to always or everysec, and a background")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# saving process (a background save or AOF log background rewriting) is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# performing a lot of I/O against the disk, in some Linux configurations")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis may block too long on the fsync() call. Note that there is no fix for")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this currently, as even performing fsync in a different thread will block")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# our synchronous write(2) call.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In order to mitigate this problem it's possible to use the following option")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that will prevent fsync() from being called in the main process while a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# BGSAVE or BGREWRITEAOF is in progress.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This means that while another child is saving, the durability of Redis is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# the same as "appendfsync none". In practical terms, this means that it is')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# possible to lose up to 30 seconds of log in the worst scenario (with the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# default Linux settings).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# If you have latency problems turn this to "yes". Otherwise leave it as')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "no" that is the safest pick from the point of view of durability.')]),s._v("\n\nno-appendfsync-on-rewrite no\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Automatic rewrite of the append only file.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis is able to automatically rewrite the log file implicitly calling")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# BGREWRITEAOF when the AOF log size grows by the specified percentage.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This is how it works: Redis remembers the size of the AOF file after the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# latest rewrite (if no rewrite has happened since the restart, the size of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the AOF at startup is used).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This base size is compared to the current size. If the current size is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bigger than the specified percentage, the rewrite is triggered. Also")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you need to specify a minimal size for the AOF file to be rewritten, this")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is useful to avoid rewriting the AOF file even if the percentage increase")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is reached but it is still pretty small.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Specify a percentage of zero in order to disable the automatic AOF")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rewrite feature.")]),s._v("\n\nauto-aof-rewrite-percentage "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\nauto-aof-rewrite-min-size 64mb\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# An AOF file may be found to be truncated at the end during the Redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# startup process, when the AOF data gets loaded back into memory.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This may happen when the system where Redis is running")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# crashes, especially when an ext4 filesystem is mounted without the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# data=ordered option (however this can't happen when Redis itself")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# crashes or aborts but the operating system still works correctly).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis can either exit with an error when this happens, or load as much")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# data as possible (the default now) and start if the AOF file is found")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to be truncated at the end. The following option controls this behavior.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If aof-load-truncated is set to yes, a truncated AOF file is loaded and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the Redis server starts emitting a log to inform the user of the event.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Otherwise if the option is set to no, the server aborts with an error")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and refuses to start. When the option is set to no, the user requires")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# to fix the AOF file using the "redis-check-aof" utility before to restart')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the server.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that if the AOF file will be found to be corrupted in the middle")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the server will still exit with an error. This option only applies when")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis will try to read more data from the AOF file but not enough bytes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will be found.")]),s._v("\naof-load-truncated "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When rewriting the AOF file, Redis is able to use an RDB preamble in the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# AOF file for faster rewrites and recoveries. When this option is turned")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# on the rewritten AOF file is composed of two different stanzas:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   [RDB file][AOF tail]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# When loading Redis recognizes that the AOF file starts with the "REDIS"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# string and loads the prefixed RDB file, and continues loading the AOF")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tail.")]),s._v("\naof-use-rdb-preamble "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ LUA SCRIPTING  ###############################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Max execution time of a Lua script in milliseconds.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If the maximum execution time is reached Redis will log that a script is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# still in execution after the maximum allowed time and will start to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# reply to queries with an error.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When a long running script exceeds the maximum execution time only the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# used to stop a script that did not yet called write commands. The second")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is the only way to shut down the server in the case a write command was")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# already issued by the script but the user doesn't want to wait for the natural")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# termination of the script.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set it to 0 or a negative value for unlimited execution without warnings.")]),s._v("\nlua-time-limit "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ REDIS CLUSTER  ###############################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Normal Redis instances can't be part of a Redis Cluster; only nodes that are")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# started as cluster nodes can. In order to start a Redis instance as a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster node enable the cluster support uncommenting the following:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-enabled yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Every cluster node has a cluster configuration file. This file is not")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# intended to be edited by hand. It is created and updated by Redis nodes.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Every Redis Cluster node requires a different cluster configuration file.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Make sure that instances running in the same system do not have")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# overlapping cluster configuration file names.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-config-file nodes-6379.conf")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Cluster node timeout is the amount of milliseconds a node must be unreachable")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for it to be considered in failure state.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Most other internal time limits are multiple of the node timeout.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-node-timeout 15000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A replica of a failing master will avoid to start a failover if its data")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# looks too old.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# There is no simple way for a replica to actually have an exact measure of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# its "data age", so the following two checks are performed:')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1) If there are multiple replicas able to failover, they exchange messages")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    in order to try to give an advantage to the replica with the best")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    replication offset (more data from the master processed).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    Replicas will try to get their rank by offset, and apply to the start")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    of the failover a delay proportional to their rank.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2) Every single replica computes the time of the last interaction with")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    its master. This can be the last ping or command received (if the master")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#    is still in the "connected" state), or the time that elapsed since the')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    disconnection with the master (if the replication link is currently down).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    If the last interaction is too old, the replica will not try to failover")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    at all.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# The point "2" can be tuned by user. Specifically a replica will not perform')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the failover if, since the last interaction with the master, the time")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# elapsed is greater than:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   (node-timeout * replica-validity-factor) + repl-ping-replica-period")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# So for example if node-timeout is 30 seconds, and the replica-validity-factor")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is 10, and assuming a default repl-ping-replica-period of 10 seconds, the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replica will not try to failover if it was not able to talk with the master")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for longer than 310 seconds.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A large replica-validity-factor may allow replicas with too old data to failover")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a master, while a too small value may prevent the cluster from being able to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# elect a replica at all.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For maximum availability, it is possible to set the replica-validity-factor")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to a value of 0, which means, that replicas will always try to failover the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master regardless of the last time they interacted with the master.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (However they'll always try to apply a delay proportional to their")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# offset rank).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Zero is the only value able to guarantee that when all the partitions heal")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the cluster will always be able to continue.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-replica-validity-factor 10")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Cluster replicas are able to migrate to orphaned masters, that are masters")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that are left without working replicas. This improves the cluster ability")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to resist to failures as otherwise an orphaned master can't be failed over")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in case of failure if it has no working replicas.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Replicas migrate to orphaned masters only if there are still at least a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# given number of other working replicas for their old master. This number")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# is the "migration barrier". A migration barrier of 1 means that a replica')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will migrate only if there is at least 1 other working replica for its master")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and so forth. It usually reflects the number of replicas you want for every")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master in your cluster.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Default is 1 (replicas migrate only if their masters remain with at least")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# one replica). To disable migration just set it to a very large value.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A value of 0 can be set but is useful only for debugging and dangerous")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in production.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-migration-barrier 1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default Redis Cluster nodes stop accepting queries if they detect there")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is at least an hash slot uncovered (no available node is serving it).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This way if the cluster is partially down (for example a range of hash slots")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# are no longer covered) all the cluster becomes, eventually, unavailable.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It automatically returns available as soon as all the slots are covered again.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However sometimes you want the subset of the cluster which is working,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to continue to accept queries for the part of the key space that is still")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# covered. In order to do so, just set the cluster-require-full-coverage")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# option to no.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-require-full-coverage yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This option, when set to yes, prevents replicas from trying to failover its")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master during master failures. However the master can still perform a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# manual failover, if forced to do so.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This is useful in different scenarios, especially in the case of multiple")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# data center operations, where we want one side to never be promoted if not")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in the case of a total DC failure.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-replica-no-failover no")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This option, when set to yes, allows nodes to serve read traffic while the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the cluster is in a down state, as long as it believes it owns the slots. ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This is useful for two cases.  The first case is for when an application ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# doesn't require consistency of data during node failures or network partitions.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# One example of this is a cache, where as long as the node has the data it")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# should be able to serve it. ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The second use case is for configurations that don't meet the recommended  ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# three shards but want to enable cluster mode and scale later. A ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master outage in a 1 or 2 shard configuration causes a read/write outage to the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# entire cluster without this option set, with it set there is only a write outage.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Without a quorum of masters, slot ownership will not change automatically. ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-allow-reads-when-down no")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In order to setup your cluster make sure to read the documentation")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# available at http://redis.io web site.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################## CLUSTER DOCKER/NAT support  ########################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In certain deployments, Redis Cluster nodes address discovery fails, because")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# addresses are NAT-ted or because ports are forwarded (the typical case is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Docker and other containers).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In order to make Redis Cluster working in such environments, a static")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# configuration where each node knows its public address is needed. The")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# following two options are used for this scope, and are:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * cluster-announce-ip")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * cluster-announce-port")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * cluster-announce-bus-port")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Each instruct the node about its address, client port, and cluster message")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bus port. The information is then published in the header of the bus packets")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# so that other nodes will be able to correctly map the address of the node")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# publishing the information.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If the above options are not used, the normal Redis Cluster auto-detection")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will be used instead.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that when remapped, the bus port may not be at the fixed offset of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# clients port + 10000, so you can specify any port and bus-port depending")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# on how they get remapped. If the bus-port is not set, a fixed offset of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 10000 will be used as usually.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Example:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-announce-ip 10.1.1.5")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-announce-port 6379")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cluster-announce-bus-port 6380")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################## SLOW LOG ###################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The Redis Slow Log is a system to log queries that exceeded a specified")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# execution time. The execution time does not include the I/O operations")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# like talking with the client, sending the reply and so forth,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# but just the time needed to actually execute the command (this is the only")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stage of command execution where the thread is blocked and can not serve")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# other requests in the meantime).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# You can configure the slow log with two parameters: one tells Redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# what is the execution time, in microseconds, to exceed in order for the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# command to get logged, and the other parameter is the length of the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# slow log. When a new command is logged the oldest one is removed from the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# queue of logged commands.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The following time is expressed in microseconds, so 1000000 is equivalent")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to one second. Note that a negative number disables the slow log, while")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a value of zero forces the logging of every command.")]),s._v("\nslowlog-log-slower-than "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# There is no limit to this length. Just be aware that it will consume memory.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# You can reclaim memory used by the slow log with SLOWLOG RESET.")]),s._v("\nslowlog-max-len "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################ LATENCY MONITOR ##############################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The Redis latency monitoring subsystem samples different operations")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# at runtime in order to collect data related to possible sources of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# latency of a Redis instance.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Via the LATENCY command this information is available to the user that can")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print graphs and obtain reports.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The system only logs operations that were performed in a time equal or")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# greater than the amount of milliseconds specified via the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# latency-monitor-threshold configuration directive. When its value is set")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to zero, the latency monitor is turned off.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default latency monitoring is disabled since it is mostly not needed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if you don't have latency issues, and collecting data has a performance")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# impact, that while very small, can be measured under big load. Latency")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# monitoring can easily be enabled at runtime using the command")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "CONFIG SET latency-monitor-threshold <milliseconds>" if needed.')]),s._v("\nlatency-monitor-threshold "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################# EVENT NOTIFICATION ##############################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis can notify Pub/Sub clients about events happening in the key space.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This feature is documented at http://redis.io/topics/notifications")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For instance if keyspace events notification is enabled, and a client")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# performs a DEL operation on key "foo" stored in the Database 0, two')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# messages will be published via Pub/Sub:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PUBLISH __keyspace@0__:foo del")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PUBLISH __keyevent@0__:del foo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is possible to select the events that Redis will notify among a set")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of classes. Every class is identified by a single character:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  K     Keyspace events, published with __keyspace@<db>__ prefix.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  E     Keyevent events, published with __keyevent@<db>__ prefix.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  $     String commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  l     List commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  s     Set commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  h     Hash commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  z     Sorted set commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  x     Expired events (events generated every time a key expires)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  e     Evicted events (events generated when a key is evicted for maxmemory)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  t     Stream commands")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  m     Key-miss events (Note: It is not included in the 'A' class)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  A     Alias for g$lshzxet, so that the "AKE" string means all the events')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        (Except key-miss events which are excluded from 'A' due to their")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         unique nature).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  The "notify-keyspace-events" takes as argument a string that is composed')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  of zero or multiple characters. The empty string means that notifications")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  are disabled.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  Example: to enable list and generic events, from the point of view of the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#           event name, use:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  notify-keyspace-events Elg")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  Example 2: to get the stream of the expired keys subscribing to channel")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#             name __keyevent@0__:expired use:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  notify-keyspace-events Ex")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  By default all notifications are disabled because most users don't need")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  this feature and the feature has some overhead. Note that if you don't")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  specify at least one of K or E, no events will be delivered.")]),s._v("\nnotify-keyspace-events "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################### GOPHER SERVER #################################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis contains an implementation of the Gopher protocol, as specified in")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the RFC 1436 (https://www.ietf.org/rfc/rfc1436.txt).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The Gopher protocol was very popular in the late '90s. It is an alternative")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to the web, and the implementation both server and client side is so simple")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that the Redis server has just 100 lines of code in order to implement this")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# support.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# What do you do with Gopher nowadays? Well Gopher never *really* died, and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lately there is a movement in order for the Gopher more hierarchical content")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# composed of just plain text documents to be resurrected. Some want a simpler")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# internet, others believe that the mainstream internet became too much")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# controlled, and it's cool to create an alternative space for people that")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# want a bit of fresh air.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Anyway for the 10nth birthday of the Redis, we gave it the Gopher protocol")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# as a gift.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --- HOW IT WORKS? ---")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The Redis Gopher support uses the inline protocol of Redis, and specifically")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# two kind of inline requests that were anyway illegal: an empty request")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# or any request that starts with "/" (there are no Redis commands starting')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with such a slash). Normal RESP2/RESP3 requests are completely out of the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# path of the Gopher protocol implementation and are served as usually as well.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you open a connection to Redis when Gopher is enabled and send it")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# a string like "/foo", if there is a key named "/foo" it is served via the')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Gopher protocol.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# In order to create a real Gopher "hole" (the name of a Gopher site in Gopher')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# talking), you likely need a script like the following:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   https://github.com/antirez/gopher2redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --- SECURITY WARNING ---")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you plan to put Redis on the internet in a publicly accessible address")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to server Gopher pages MAKE SURE TO SET A PASSWORD to the instance.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Once a password is set:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   1. The Gopher server (when enabled, not by default) will still serve")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#      content via Gopher.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   2. However other commands cannot be called before the client will")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#      authenticate.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# So use the 'requirepass' option to protect your instance.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To enable Gopher support uncomment the following line and set")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the option from no (the default) to yes.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gopher-enabled no")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############################### ADVANCED CONFIG ###############################")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Hashes are encoded using a memory efficient data structure when they have a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# small number of entries, and the biggest entry does not exceed a given")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# threshold. These thresholds can be configured using the following directives.")]),s._v("\nhash-max-ziplist-entries "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v("\nhash-max-ziplist-value "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lists are also encoded in a special way to save a lot of space.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The number of entries allowed per internal list node can be specified")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# as a fixed maximum size or a maximum number of elements.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a fixed maximum size, use -5 through -1, meaning:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -5: max size: 64 Kb  <-- not recommended for normal workloads")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -4: max size: 32 Kb  <-- not recommended")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -3: max size: 16 Kb  <-- probably not recommended")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -2: max size: 8 Kb   <-- good")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -1: max size: 4 Kb   <-- good")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Positive numbers mean store up to _exactly_ that number of elements")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# per list node.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# but if your use case is unique, adjust the settings as necessary.")]),s._v("\nlist-max-ziplist-size -2\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lists may also be compressed.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Compress depth is the number of quicklist ziplist nodes from *each* side of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the list to *exclude* from compression.  The head and tail of the list")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# are always uncompressed for fast push/pop operations.  Settings are:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0: disable all list compression")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1: depth 1 means \"don't start compressing until after 1 node into the list,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#    going from either the head or tail"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    So: [head]->node->node->...->node->[tail]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    [head], [tail] will always be uncompressed; inner nodes will compress.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2: [head]->[next]->node->node->...->node->[prev]->[tail]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    2 here means: don't compress head or head->next or tail->prev or tail,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    but compress all nodes between them.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3: [head]->[next]->[next]->node->node->...->node->[prev]->[prev]->[tail]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# etc.")]),s._v("\nlist-compress-depth "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sets have a special encoding in just one case: when a set is composed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of just strings that happen to be integers in radix 10 in the range")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of 64 bit signed integers.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The following configuration setting sets the limit in the size of the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set in order to use this special memory saving encoding.")]),s._v("\nset-max-intset-entries "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Similarly to hashes and lists, sorted sets are also specially encoded in")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# order to save a lot of space. This encoding is only used when the length and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# elements of a sorted set are below the following limits:")]),s._v("\nzset-max-ziplist-entries "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("\nzset-max-ziplist-value "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# HyperLogLog sparse representation bytes limit. The limit includes the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 16 bytes header. When an HyperLogLog using the sparse representation crosses")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this limit, it is converted into the dense representation.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A value greater than 16000 is totally useless, since at that point the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dense representation is more memory efficient.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The suggested value is ~ 3000 in order to have the benefits of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the space efficient encoding without slowing down too much PFADD,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which is O(N) with the sparse encoding. The value can be raised to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~ 10000 when CPU is not a concern, but space is, and the data set is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.")]),s._v("\nhll-sparse-max-bytes "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Streams macro node max size / items. The stream data structure is a radix")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tree of big nodes that encode multiple items inside. Using this configuration")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it is possible to configure how big a single node can be in bytes, and the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# maximum number of items it may contain before switching to a new node when")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# appending new stream entries. If any of the following settings are set to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zero, the limit is ignored, so for instance it is possible to set just a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# max entires limit by setting max-bytes to 0 and max-entries to the desired")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# value.")]),s._v("\nstream-node-max-bytes "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v("\nstream-node-max-entries "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# order to help rehashing the main Redis hash table (the one mapping top-level")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# keys to values). The hash table implementation Redis uses (see dict.c)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# performs a lazy rehashing: the more operation you run into a hash table")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# that is rehashing, the more rehashing "steps" are performed, so if the')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# server is idle the rehashing is never complete and some more memory is used")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# by the hash table.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The default is to use this millisecond 10 times every second in order to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# actively rehash the main dictionaries, freeing memory when possible.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If unsure:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# use "activerehashing no" if you have hard latency requirements and it is')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# not a good thing in your environment that Redis can reply from time to time")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to queries with 2 milliseconds delay.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# use "activerehashing yes" if you don\'t have such hard requirements but')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# want to free memory asap when possible.")]),s._v("\nactiverehashing "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The client output buffer limits can be used to force disconnection of clients")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that are not reading data from the server fast enough for some reason (a")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# common reason is that a Pub/Sub client can't consume messages as fast as the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# publisher can produce them).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The limit can be set differently for the three different classes of clients:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# normal -> normal clients including MONITOR clients")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replica  -> replica clients")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pubsub -> clients subscribed to at least one pubsub channel or pattern")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The syntax of every client-output-buffer-limit directive is the following:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A client is immediately disconnected once the hard limit is reached, or if")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the soft limit is reached and remains reached for the specified number of")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seconds (continuously).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# So for instance if the hard limit is 32 megabytes and the soft limit is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 16 megabytes / 10 seconds, the client will get disconnected immediately")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if the size of the output buffers reach 32 megabytes, but will also get")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# disconnected if the client reaches 16 megabytes and continuously overcomes")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the limit for 10 seconds.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# By default normal clients are not limited because they don't receive data")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# without asking (in a push way), but just after a request, so only")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# asynchronous clients may create a scenario where data is requested faster")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# than it can read.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Instead there is a default limit for pubsub and replica clients, since")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# subscribers and replicas receive data in a push fashion.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Both the hard or the soft limit can be disabled by setting them to zero.")]),s._v("\nclient-output-buffer-limit normal "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nclient-output-buffer-limit replica 256mb 64mb "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\nclient-output-buffer-limit pubsub 32mb 8mb "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Client query buffers accumulate new commands. They are limited to a fixed")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# amount by default in order to avoid that a protocol desynchronization (for")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# instance due to a bug in the client) will lead to unbound memory usage in")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the query buffer. However you can configure it here if you have very special")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# needs, such us huge multi/exec requests or alike.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# client-query-buffer-limit 1gb")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In the Redis protocol, bulk requests, that are, elements representing single")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# strings, are normally limited ot 512 mb. However you can change this limit")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# here.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# proto-max-bulk-len 512mb")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis calls an internal function to perform many background tasks, like")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# closing connections of clients in timeout, purging expired keys that are")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# never requested, and so forth.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Not all tasks are performed with the same frequency, but Redis checks for")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# tasks to perform according to the specified "hz" value.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# By default "hz" is set to 10. Raising the value will use more CPU when')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis is idle, but at the same time will make Redis more responsive when")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# there are many keys expiring at the same time, and timeouts may be")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# handled with more precision.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The range is between 1 and 500, however a value over 100 is usually not")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a good idea. Most users should use the default of 10 and raise this up to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 100 only in environments where very low latency is required.")]),s._v("\nhz "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Normally it is useful to have an HZ value which is proportional to the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# number of clients connected. This is useful in order, for instance, to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# avoid too many clients are processed for each background task invocation")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to avoid latency spikes.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Since the default HZ value by default is conservatively set to 10, Redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# offers, and enables by default, the ability to use an adaptive HZ value")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which will temporary raise when there are many connected clients.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When dynamic HZ is enabled, the actual configured HZ will be used")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# as a baseline, but multiples of the configured HZ value will be actually")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# used as needed once more clients are connected. In this way an idle")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# instance will use very little CPU time while a busy instance will be")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# more responsive.")]),s._v("\ndynamic-hz "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When a child rewrites the AOF file, if the following option is enabled")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the file will be fsync-ed every 32 MB of data generated. This is useful")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to commit the file to the disk more incrementally and avoid")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# big latency spikes.")]),s._v("\naof-rewrite-incremental-fsync "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# When redis saves RDB file, if the following option is enabled")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the file will be fsync-ed every 32 MB of data generated. This is useful")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to commit the file to the disk more incrementally and avoid")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# big latency spikes.")]),s._v("\nrdb-save-incremental-fsync "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# idea to start with the default settings and only change them after investigating")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# how to improve the performances and how the keys LFU change over time, which")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is possible to inspect via the OBJECT FREQ command.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# There are two tunable parameters in the Redis LFU implementation: the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# counter logarithm factor and the counter decay time. It is important to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# understand what the two parameters mean before changing them.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The LFU counter is just 8 bits per key, it's maximum value is 255, so Redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# uses a probabilistic increment with logarithmic behavior. Given the value")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of the old counter, when a key is accessed, the counter is incremented in")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this way:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. A random number R between 0 and 1 is extracted.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. The counter is incremented only if R < P.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The default lfu-log-factor is 10. This is a table of how the frequency")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# counter changes with a different number of accesses with different")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# logarithmic factors:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# +--------+------------+------------+------------+------------+------------+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# +--------+------------+------------+------------+------------+------------+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# | 0      | 104        | 255        | 255        | 255        | 255        |")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# +--------+------------+------------+------------+------------+------------+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# | 1      | 18         | 49         | 255        | 255        | 255        |")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# +--------+------------+------------+------------+------------+------------+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# | 10     | 10         | 18         | 142        | 255        | 255        |")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# +--------+------------+------------+------------+------------+------------+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# | 100    | 8          | 11         | 49         | 143        | 255        |")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# +--------+------------+------------+------------+------------+------------+")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NOTE: The above table was obtained by running the following commands:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   redis-benchmark -n 1000000 incr foo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   redis-cli object freq foo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NOTE 2: The counter initial value is 5 in order to give new objects a chance")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to accumulate hits.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The counter decay time is the time, in minutes, that must elapse in order")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for the key counter to be divided by two (or decremented if it has a value")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# less <= 10).")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The default value for the lfu-decay-time is 1. A Special value of 0 means to")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# decay the counter every time it happens to be scanned.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lfu-log-factor 10")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lfu-decay-time 1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("########################### ACTIVE DEFRAGMENTATION #######################")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# What is active defragmentation?")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -------------------------------")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Active (online) defragmentation allows a Redis server to compact the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# spaces left between small allocations and deallocations of data in memory,")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# thus allowing to reclaim back memory.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fragmentation is a natural process that happens with every allocator (but")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# less so with Jemalloc, fortunately) and certain workloads. Normally a server")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restart is needed in order to lower the fragmentation, or at least to flush")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# away all the data and create it again. However thanks to this feature")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# implemented by Oran Agra for Redis 4.0 this process can happen at runtime")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# in an "hot" way, while the server is running.')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Basically when the fragmentation is over a certain level (see the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# configuration options below) Redis will start to create new copies of the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# values in contiguous memory regions by exploiting certain specific Jemalloc")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# features (in order to understand if an allocation is causing fragmentation")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and to allocate it in a better place), and at the same time, will release the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# old copies of the data. This process, repeated incrementally for all the keys")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# will cause the fragmentation to drop back to normal values.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Important things to understand:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. This feature is disabled by default, and only works if you compiled Redis")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    to use the copy of Jemalloc we ship with the source code of Redis.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    This is the default with Linux builds.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. You never need to enable this feature if you don't have fragmentation")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    issues.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. Once you experience fragmentation, you can enable this feature when")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#    needed with the command "CONFIG SET activedefrag yes".')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The configuration parameters are able to fine tune the behavior of the")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# defragmentation process. If you are not sure about what they mean it is")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a good idea to leave the defaults untouched.")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Enabled active defragmentation")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# activedefrag no")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Minimum amount of fragmentation waste to start active defrag")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# active-defrag-ignore-bytes 100mb")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Minimum percentage of fragmentation to start active defrag")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# active-defrag-threshold-lower 10")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Maximum percentage of fragmentation at which we use maximum effort")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# active-defrag-threshold-upper 100")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Minimal effort for defrag in CPU percentage, to be used when the lower")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# threshold is reached")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# active-defrag-cycle-min 1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Maximal effort for defrag in CPU percentage, to be used when the upper")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# threshold is reached")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# active-defrag-cycle-max 25")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Maximum number of set/hash/zset/list fields that will be processed from")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the main dictionary scan")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# active-defrag-max-scan-fields 1000")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Jemalloc background thread for purging will be enabled by default")]),s._v("\njemalloc-bg-thread "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is possible to pin different threads and processes of Redis to specific")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CPUs in your system, in order to maximize the performances of the server.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This is useful both in order to pin different Redis threads in different")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CPUs, but also in order to make sure that multiple Redis instances running")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in the same host will be pinned to different CPUs.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Normally you can do this using the "taskset" command, however it is also')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# possible to this via Redis configuration directly, both in Linux and FreeBSD.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# You can pin the server/IO threads, bio threads, aof rewrite child process, and")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the bgsave child process. The syntax to specify the cpu list is the same as")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the taskset command:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set redis server/io threads to cpu affinity 0,2,4,6:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# server_cpulist 0-7:2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set bio threads to cpu affinity 1,3:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bio_cpulist 1,3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set aof rewrite child process to cpu affinity 8,9,10,11:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aof_rewrite_cpulist 8-11")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set bgsave child process to cpu affinity 1,10,11")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bgsave_cpulist 1,10-11")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("202")]),n("br"),n("span",{staticClass:"line-number"},[s._v("203")]),n("br"),n("span",{staticClass:"line-number"},[s._v("204")]),n("br"),n("span",{staticClass:"line-number"},[s._v("205")]),n("br"),n("span",{staticClass:"line-number"},[s._v("206")]),n("br"),n("span",{staticClass:"line-number"},[s._v("207")]),n("br"),n("span",{staticClass:"line-number"},[s._v("208")]),n("br"),n("span",{staticClass:"line-number"},[s._v("209")]),n("br"),n("span",{staticClass:"line-number"},[s._v("210")]),n("br"),n("span",{staticClass:"line-number"},[s._v("211")]),n("br"),n("span",{staticClass:"line-number"},[s._v("212")]),n("br"),n("span",{staticClass:"line-number"},[s._v("213")]),n("br"),n("span",{staticClass:"line-number"},[s._v("214")]),n("br"),n("span",{staticClass:"line-number"},[s._v("215")]),n("br"),n("span",{staticClass:"line-number"},[s._v("216")]),n("br"),n("span",{staticClass:"line-number"},[s._v("217")]),n("br"),n("span",{staticClass:"line-number"},[s._v("218")]),n("br"),n("span",{staticClass:"line-number"},[s._v("219")]),n("br"),n("span",{staticClass:"line-number"},[s._v("220")]),n("br"),n("span",{staticClass:"line-number"},[s._v("221")]),n("br"),n("span",{staticClass:"line-number"},[s._v("222")]),n("br"),n("span",{staticClass:"line-number"},[s._v("223")]),n("br"),n("span",{staticClass:"line-number"},[s._v("224")]),n("br"),n("span",{staticClass:"line-number"},[s._v("225")]),n("br"),n("span",{staticClass:"line-number"},[s._v("226")]),n("br"),n("span",{staticClass:"line-number"},[s._v("227")]),n("br"),n("span",{staticClass:"line-number"},[s._v("228")]),n("br"),n("span",{staticClass:"line-number"},[s._v("229")]),n("br"),n("span",{staticClass:"line-number"},[s._v("230")]),n("br"),n("span",{staticClass:"line-number"},[s._v("231")]),n("br"),n("span",{staticClass:"line-number"},[s._v("232")]),n("br"),n("span",{staticClass:"line-number"},[s._v("233")]),n("br"),n("span",{staticClass:"line-number"},[s._v("234")]),n("br"),n("span",{staticClass:"line-number"},[s._v("235")]),n("br"),n("span",{staticClass:"line-number"},[s._v("236")]),n("br"),n("span",{staticClass:"line-number"},[s._v("237")]),n("br"),n("span",{staticClass:"line-number"},[s._v("238")]),n("br"),n("span",{staticClass:"line-number"},[s._v("239")]),n("br"),n("span",{staticClass:"line-number"},[s._v("240")]),n("br"),n("span",{staticClass:"line-number"},[s._v("241")]),n("br"),n("span",{staticClass:"line-number"},[s._v("242")]),n("br"),n("span",{staticClass:"line-number"},[s._v("243")]),n("br"),n("span",{staticClass:"line-number"},[s._v("244")]),n("br"),n("span",{staticClass:"line-number"},[s._v("245")]),n("br"),n("span",{staticClass:"line-number"},[s._v("246")]),n("br"),n("span",{staticClass:"line-number"},[s._v("247")]),n("br"),n("span",{staticClass:"line-number"},[s._v("248")]),n("br"),n("span",{staticClass:"line-number"},[s._v("249")]),n("br"),n("span",{staticClass:"line-number"},[s._v("250")]),n("br"),n("span",{staticClass:"line-number"},[s._v("251")]),n("br"),n("span",{staticClass:"line-number"},[s._v("252")]),n("br"),n("span",{staticClass:"line-number"},[s._v("253")]),n("br"),n("span",{staticClass:"line-number"},[s._v("254")]),n("br"),n("span",{staticClass:"line-number"},[s._v("255")]),n("br"),n("span",{staticClass:"line-number"},[s._v("256")]),n("br"),n("span",{staticClass:"line-number"},[s._v("257")]),n("br"),n("span",{staticClass:"line-number"},[s._v("258")]),n("br"),n("span",{staticClass:"line-number"},[s._v("259")]),n("br"),n("span",{staticClass:"line-number"},[s._v("260")]),n("br"),n("span",{staticClass:"line-number"},[s._v("261")]),n("br"),n("span",{staticClass:"line-number"},[s._v("262")]),n("br"),n("span",{staticClass:"line-number"},[s._v("263")]),n("br"),n("span",{staticClass:"line-number"},[s._v("264")]),n("br"),n("span",{staticClass:"line-number"},[s._v("265")]),n("br"),n("span",{staticClass:"line-number"},[s._v("266")]),n("br"),n("span",{staticClass:"line-number"},[s._v("267")]),n("br"),n("span",{staticClass:"line-number"},[s._v("268")]),n("br"),n("span",{staticClass:"line-number"},[s._v("269")]),n("br"),n("span",{staticClass:"line-number"},[s._v("270")]),n("br"),n("span",{staticClass:"line-number"},[s._v("271")]),n("br"),n("span",{staticClass:"line-number"},[s._v("272")]),n("br"),n("span",{staticClass:"line-number"},[s._v("273")]),n("br"),n("span",{staticClass:"line-number"},[s._v("274")]),n("br"),n("span",{staticClass:"line-number"},[s._v("275")]),n("br"),n("span",{staticClass:"line-number"},[s._v("276")]),n("br"),n("span",{staticClass:"line-number"},[s._v("277")]),n("br"),n("span",{staticClass:"line-number"},[s._v("278")]),n("br"),n("span",{staticClass:"line-number"},[s._v("279")]),n("br"),n("span",{staticClass:"line-number"},[s._v("280")]),n("br"),n("span",{staticClass:"line-number"},[s._v("281")]),n("br"),n("span",{staticClass:"line-number"},[s._v("282")]),n("br"),n("span",{staticClass:"line-number"},[s._v("283")]),n("br"),n("span",{staticClass:"line-number"},[s._v("284")]),n("br"),n("span",{staticClass:"line-number"},[s._v("285")]),n("br"),n("span",{staticClass:"line-number"},[s._v("286")]),n("br"),n("span",{staticClass:"line-number"},[s._v("287")]),n("br"),n("span",{staticClass:"line-number"},[s._v("288")]),n("br"),n("span",{staticClass:"line-number"},[s._v("289")]),n("br"),n("span",{staticClass:"line-number"},[s._v("290")]),n("br"),n("span",{staticClass:"line-number"},[s._v("291")]),n("br"),n("span",{staticClass:"line-number"},[s._v("292")]),n("br"),n("span",{staticClass:"line-number"},[s._v("293")]),n("br"),n("span",{staticClass:"line-number"},[s._v("294")]),n("br"),n("span",{staticClass:"line-number"},[s._v("295")]),n("br"),n("span",{staticClass:"line-number"},[s._v("296")]),n("br"),n("span",{staticClass:"line-number"},[s._v("297")]),n("br"),n("span",{staticClass:"line-number"},[s._v("298")]),n("br"),n("span",{staticClass:"line-number"},[s._v("299")]),n("br"),n("span",{staticClass:"line-number"},[s._v("300")]),n("br"),n("span",{staticClass:"line-number"},[s._v("301")]),n("br"),n("span",{staticClass:"line-number"},[s._v("302")]),n("br"),n("span",{staticClass:"line-number"},[s._v("303")]),n("br"),n("span",{staticClass:"line-number"},[s._v("304")]),n("br"),n("span",{staticClass:"line-number"},[s._v("305")]),n("br"),n("span",{staticClass:"line-number"},[s._v("306")]),n("br"),n("span",{staticClass:"line-number"},[s._v("307")]),n("br"),n("span",{staticClass:"line-number"},[s._v("308")]),n("br"),n("span",{staticClass:"line-number"},[s._v("309")]),n("br"),n("span",{staticClass:"line-number"},[s._v("310")]),n("br"),n("span",{staticClass:"line-number"},[s._v("311")]),n("br"),n("span",{staticClass:"line-number"},[s._v("312")]),n("br"),n("span",{staticClass:"line-number"},[s._v("313")]),n("br"),n("span",{staticClass:"line-number"},[s._v("314")]),n("br"),n("span",{staticClass:"line-number"},[s._v("315")]),n("br"),n("span",{staticClass:"line-number"},[s._v("316")]),n("br"),n("span",{staticClass:"line-number"},[s._v("317")]),n("br"),n("span",{staticClass:"line-number"},[s._v("318")]),n("br"),n("span",{staticClass:"line-number"},[s._v("319")]),n("br"),n("span",{staticClass:"line-number"},[s._v("320")]),n("br"),n("span",{staticClass:"line-number"},[s._v("321")]),n("br"),n("span",{staticClass:"line-number"},[s._v("322")]),n("br"),n("span",{staticClass:"line-number"},[s._v("323")]),n("br"),n("span",{staticClass:"line-number"},[s._v("324")]),n("br"),n("span",{staticClass:"line-number"},[s._v("325")]),n("br"),n("span",{staticClass:"line-number"},[s._v("326")]),n("br"),n("span",{staticClass:"line-number"},[s._v("327")]),n("br"),n("span",{staticClass:"line-number"},[s._v("328")]),n("br"),n("span",{staticClass:"line-number"},[s._v("329")]),n("br"),n("span",{staticClass:"line-number"},[s._v("330")]),n("br"),n("span",{staticClass:"line-number"},[s._v("331")]),n("br"),n("span",{staticClass:"line-number"},[s._v("332")]),n("br"),n("span",{staticClass:"line-number"},[s._v("333")]),n("br"),n("span",{staticClass:"line-number"},[s._v("334")]),n("br"),n("span",{staticClass:"line-number"},[s._v("335")]),n("br"),n("span",{staticClass:"line-number"},[s._v("336")]),n("br"),n("span",{staticClass:"line-number"},[s._v("337")]),n("br"),n("span",{staticClass:"line-number"},[s._v("338")]),n("br"),n("span",{staticClass:"line-number"},[s._v("339")]),n("br"),n("span",{staticClass:"line-number"},[s._v("340")]),n("br"),n("span",{staticClass:"line-number"},[s._v("341")]),n("br"),n("span",{staticClass:"line-number"},[s._v("342")]),n("br"),n("span",{staticClass:"line-number"},[s._v("343")]),n("br"),n("span",{staticClass:"line-number"},[s._v("344")]),n("br"),n("span",{staticClass:"line-number"},[s._v("345")]),n("br"),n("span",{staticClass:"line-number"},[s._v("346")]),n("br"),n("span",{staticClass:"line-number"},[s._v("347")]),n("br"),n("span",{staticClass:"line-number"},[s._v("348")]),n("br"),n("span",{staticClass:"line-number"},[s._v("349")]),n("br"),n("span",{staticClass:"line-number"},[s._v("350")]),n("br"),n("span",{staticClass:"line-number"},[s._v("351")]),n("br"),n("span",{staticClass:"line-number"},[s._v("352")]),n("br"),n("span",{staticClass:"line-number"},[s._v("353")]),n("br"),n("span",{staticClass:"line-number"},[s._v("354")]),n("br"),n("span",{staticClass:"line-number"},[s._v("355")]),n("br"),n("span",{staticClass:"line-number"},[s._v("356")]),n("br"),n("span",{staticClass:"line-number"},[s._v("357")]),n("br"),n("span",{staticClass:"line-number"},[s._v("358")]),n("br"),n("span",{staticClass:"line-number"},[s._v("359")]),n("br"),n("span",{staticClass:"line-number"},[s._v("360")]),n("br"),n("span",{staticClass:"line-number"},[s._v("361")]),n("br"),n("span",{staticClass:"line-number"},[s._v("362")]),n("br"),n("span",{staticClass:"line-number"},[s._v("363")]),n("br"),n("span",{staticClass:"line-number"},[s._v("364")]),n("br"),n("span",{staticClass:"line-number"},[s._v("365")]),n("br"),n("span",{staticClass:"line-number"},[s._v("366")]),n("br"),n("span",{staticClass:"line-number"},[s._v("367")]),n("br"),n("span",{staticClass:"line-number"},[s._v("368")]),n("br"),n("span",{staticClass:"line-number"},[s._v("369")]),n("br"),n("span",{staticClass:"line-number"},[s._v("370")]),n("br"),n("span",{staticClass:"line-number"},[s._v("371")]),n("br"),n("span",{staticClass:"line-number"},[s._v("372")]),n("br"),n("span",{staticClass:"line-number"},[s._v("373")]),n("br"),n("span",{staticClass:"line-number"},[s._v("374")]),n("br"),n("span",{staticClass:"line-number"},[s._v("375")]),n("br"),n("span",{staticClass:"line-number"},[s._v("376")]),n("br"),n("span",{staticClass:"line-number"},[s._v("377")]),n("br"),n("span",{staticClass:"line-number"},[s._v("378")]),n("br"),n("span",{staticClass:"line-number"},[s._v("379")]),n("br"),n("span",{staticClass:"line-number"},[s._v("380")]),n("br"),n("span",{staticClass:"line-number"},[s._v("381")]),n("br"),n("span",{staticClass:"line-number"},[s._v("382")]),n("br"),n("span",{staticClass:"line-number"},[s._v("383")]),n("br"),n("span",{staticClass:"line-number"},[s._v("384")]),n("br"),n("span",{staticClass:"line-number"},[s._v("385")]),n("br"),n("span",{staticClass:"line-number"},[s._v("386")]),n("br"),n("span",{staticClass:"line-number"},[s._v("387")]),n("br"),n("span",{staticClass:"line-number"},[s._v("388")]),n("br"),n("span",{staticClass:"line-number"},[s._v("389")]),n("br"),n("span",{staticClass:"line-number"},[s._v("390")]),n("br"),n("span",{staticClass:"line-number"},[s._v("391")]),n("br"),n("span",{staticClass:"line-number"},[s._v("392")]),n("br"),n("span",{staticClass:"line-number"},[s._v("393")]),n("br"),n("span",{staticClass:"line-number"},[s._v("394")]),n("br"),n("span",{staticClass:"line-number"},[s._v("395")]),n("br"),n("span",{staticClass:"line-number"},[s._v("396")]),n("br"),n("span",{staticClass:"line-number"},[s._v("397")]),n("br"),n("span",{staticClass:"line-number"},[s._v("398")]),n("br"),n("span",{staticClass:"line-number"},[s._v("399")]),n("br"),n("span",{staticClass:"line-number"},[s._v("400")]),n("br"),n("span",{staticClass:"line-number"},[s._v("401")]),n("br"),n("span",{staticClass:"line-number"},[s._v("402")]),n("br"),n("span",{staticClass:"line-number"},[s._v("403")]),n("br"),n("span",{staticClass:"line-number"},[s._v("404")]),n("br"),n("span",{staticClass:"line-number"},[s._v("405")]),n("br"),n("span",{staticClass:"line-number"},[s._v("406")]),n("br"),n("span",{staticClass:"line-number"},[s._v("407")]),n("br"),n("span",{staticClass:"line-number"},[s._v("408")]),n("br"),n("span",{staticClass:"line-number"},[s._v("409")]),n("br"),n("span",{staticClass:"line-number"},[s._v("410")]),n("br"),n("span",{staticClass:"line-number"},[s._v("411")]),n("br"),n("span",{staticClass:"line-number"},[s._v("412")]),n("br"),n("span",{staticClass:"line-number"},[s._v("413")]),n("br"),n("span",{staticClass:"line-number"},[s._v("414")]),n("br"),n("span",{staticClass:"line-number"},[s._v("415")]),n("br"),n("span",{staticClass:"line-number"},[s._v("416")]),n("br"),n("span",{staticClass:"line-number"},[s._v("417")]),n("br"),n("span",{staticClass:"line-number"},[s._v("418")]),n("br"),n("span",{staticClass:"line-number"},[s._v("419")]),n("br"),n("span",{staticClass:"line-number"},[s._v("420")]),n("br"),n("span",{staticClass:"line-number"},[s._v("421")]),n("br"),n("span",{staticClass:"line-number"},[s._v("422")]),n("br"),n("span",{staticClass:"line-number"},[s._v("423")]),n("br"),n("span",{staticClass:"line-number"},[s._v("424")]),n("br"),n("span",{staticClass:"line-number"},[s._v("425")]),n("br"),n("span",{staticClass:"line-number"},[s._v("426")]),n("br"),n("span",{staticClass:"line-number"},[s._v("427")]),n("br"),n("span",{staticClass:"line-number"},[s._v("428")]),n("br"),n("span",{staticClass:"line-number"},[s._v("429")]),n("br"),n("span",{staticClass:"line-number"},[s._v("430")]),n("br"),n("span",{staticClass:"line-number"},[s._v("431")]),n("br"),n("span",{staticClass:"line-number"},[s._v("432")]),n("br"),n("span",{staticClass:"line-number"},[s._v("433")]),n("br"),n("span",{staticClass:"line-number"},[s._v("434")]),n("br"),n("span",{staticClass:"line-number"},[s._v("435")]),n("br"),n("span",{staticClass:"line-number"},[s._v("436")]),n("br"),n("span",{staticClass:"line-number"},[s._v("437")]),n("br"),n("span",{staticClass:"line-number"},[s._v("438")]),n("br"),n("span",{staticClass:"line-number"},[s._v("439")]),n("br"),n("span",{staticClass:"line-number"},[s._v("440")]),n("br"),n("span",{staticClass:"line-number"},[s._v("441")]),n("br"),n("span",{staticClass:"line-number"},[s._v("442")]),n("br"),n("span",{staticClass:"line-number"},[s._v("443")]),n("br"),n("span",{staticClass:"line-number"},[s._v("444")]),n("br"),n("span",{staticClass:"line-number"},[s._v("445")]),n("br"),n("span",{staticClass:"line-number"},[s._v("446")]),n("br"),n("span",{staticClass:"line-number"},[s._v("447")]),n("br"),n("span",{staticClass:"line-number"},[s._v("448")]),n("br"),n("span",{staticClass:"line-number"},[s._v("449")]),n("br"),n("span",{staticClass:"line-number"},[s._v("450")]),n("br"),n("span",{staticClass:"line-number"},[s._v("451")]),n("br"),n("span",{staticClass:"line-number"},[s._v("452")]),n("br"),n("span",{staticClass:"line-number"},[s._v("453")]),n("br"),n("span",{staticClass:"line-number"},[s._v("454")]),n("br"),n("span",{staticClass:"line-number"},[s._v("455")]),n("br"),n("span",{staticClass:"line-number"},[s._v("456")]),n("br"),n("span",{staticClass:"line-number"},[s._v("457")]),n("br"),n("span",{staticClass:"line-number"},[s._v("458")]),n("br"),n("span",{staticClass:"line-number"},[s._v("459")]),n("br"),n("span",{staticClass:"line-number"},[s._v("460")]),n("br"),n("span",{staticClass:"line-number"},[s._v("461")]),n("br"),n("span",{staticClass:"line-number"},[s._v("462")]),n("br"),n("span",{staticClass:"line-number"},[s._v("463")]),n("br"),n("span",{staticClass:"line-number"},[s._v("464")]),n("br"),n("span",{staticClass:"line-number"},[s._v("465")]),n("br"),n("span",{staticClass:"line-number"},[s._v("466")]),n("br"),n("span",{staticClass:"line-number"},[s._v("467")]),n("br"),n("span",{staticClass:"line-number"},[s._v("468")]),n("br"),n("span",{staticClass:"line-number"},[s._v("469")]),n("br"),n("span",{staticClass:"line-number"},[s._v("470")]),n("br"),n("span",{staticClass:"line-number"},[s._v("471")]),n("br"),n("span",{staticClass:"line-number"},[s._v("472")]),n("br"),n("span",{staticClass:"line-number"},[s._v("473")]),n("br"),n("span",{staticClass:"line-number"},[s._v("474")]),n("br"),n("span",{staticClass:"line-number"},[s._v("475")]),n("br"),n("span",{staticClass:"line-number"},[s._v("476")]),n("br"),n("span",{staticClass:"line-number"},[s._v("477")]),n("br"),n("span",{staticClass:"line-number"},[s._v("478")]),n("br"),n("span",{staticClass:"line-number"},[s._v("479")]),n("br"),n("span",{staticClass:"line-number"},[s._v("480")]),n("br"),n("span",{staticClass:"line-number"},[s._v("481")]),n("br"),n("span",{staticClass:"line-number"},[s._v("482")]),n("br"),n("span",{staticClass:"line-number"},[s._v("483")]),n("br"),n("span",{staticClass:"line-number"},[s._v("484")]),n("br"),n("span",{staticClass:"line-number"},[s._v("485")]),n("br"),n("span",{staticClass:"line-number"},[s._v("486")]),n("br"),n("span",{staticClass:"line-number"},[s._v("487")]),n("br"),n("span",{staticClass:"line-number"},[s._v("488")]),n("br"),n("span",{staticClass:"line-number"},[s._v("489")]),n("br"),n("span",{staticClass:"line-number"},[s._v("490")]),n("br"),n("span",{staticClass:"line-number"},[s._v("491")]),n("br"),n("span",{staticClass:"line-number"},[s._v("492")]),n("br"),n("span",{staticClass:"line-number"},[s._v("493")]),n("br"),n("span",{staticClass:"line-number"},[s._v("494")]),n("br"),n("span",{staticClass:"line-number"},[s._v("495")]),n("br"),n("span",{staticClass:"line-number"},[s._v("496")]),n("br"),n("span",{staticClass:"line-number"},[s._v("497")]),n("br"),n("span",{staticClass:"line-number"},[s._v("498")]),n("br"),n("span",{staticClass:"line-number"},[s._v("499")]),n("br"),n("span",{staticClass:"line-number"},[s._v("500")]),n("br"),n("span",{staticClass:"line-number"},[s._v("501")]),n("br"),n("span",{staticClass:"line-number"},[s._v("502")]),n("br"),n("span",{staticClass:"line-number"},[s._v("503")]),n("br"),n("span",{staticClass:"line-number"},[s._v("504")]),n("br"),n("span",{staticClass:"line-number"},[s._v("505")]),n("br"),n("span",{staticClass:"line-number"},[s._v("506")]),n("br"),n("span",{staticClass:"line-number"},[s._v("507")]),n("br"),n("span",{staticClass:"line-number"},[s._v("508")]),n("br"),n("span",{staticClass:"line-number"},[s._v("509")]),n("br"),n("span",{staticClass:"line-number"},[s._v("510")]),n("br"),n("span",{staticClass:"line-number"},[s._v("511")]),n("br"),n("span",{staticClass:"line-number"},[s._v("512")]),n("br"),n("span",{staticClass:"line-number"},[s._v("513")]),n("br"),n("span",{staticClass:"line-number"},[s._v("514")]),n("br"),n("span",{staticClass:"line-number"},[s._v("515")]),n("br"),n("span",{staticClass:"line-number"},[s._v("516")]),n("br"),n("span",{staticClass:"line-number"},[s._v("517")]),n("br"),n("span",{staticClass:"line-number"},[s._v("518")]),n("br"),n("span",{staticClass:"line-number"},[s._v("519")]),n("br"),n("span",{staticClass:"line-number"},[s._v("520")]),n("br"),n("span",{staticClass:"line-number"},[s._v("521")]),n("br"),n("span",{staticClass:"line-number"},[s._v("522")]),n("br"),n("span",{staticClass:"line-number"},[s._v("523")]),n("br"),n("span",{staticClass:"line-number"},[s._v("524")]),n("br"),n("span",{staticClass:"line-number"},[s._v("525")]),n("br"),n("span",{staticClass:"line-number"},[s._v("526")]),n("br"),n("span",{staticClass:"line-number"},[s._v("527")]),n("br"),n("span",{staticClass:"line-number"},[s._v("528")]),n("br"),n("span",{staticClass:"line-number"},[s._v("529")]),n("br"),n("span",{staticClass:"line-number"},[s._v("530")]),n("br"),n("span",{staticClass:"line-number"},[s._v("531")]),n("br"),n("span",{staticClass:"line-number"},[s._v("532")]),n("br"),n("span",{staticClass:"line-number"},[s._v("533")]),n("br"),n("span",{staticClass:"line-number"},[s._v("534")]),n("br"),n("span",{staticClass:"line-number"},[s._v("535")]),n("br"),n("span",{staticClass:"line-number"},[s._v("536")]),n("br"),n("span",{staticClass:"line-number"},[s._v("537")]),n("br"),n("span",{staticClass:"line-number"},[s._v("538")]),n("br"),n("span",{staticClass:"line-number"},[s._v("539")]),n("br"),n("span",{staticClass:"line-number"},[s._v("540")]),n("br"),n("span",{staticClass:"line-number"},[s._v("541")]),n("br"),n("span",{staticClass:"line-number"},[s._v("542")]),n("br"),n("span",{staticClass:"line-number"},[s._v("543")]),n("br"),n("span",{staticClass:"line-number"},[s._v("544")]),n("br"),n("span",{staticClass:"line-number"},[s._v("545")]),n("br"),n("span",{staticClass:"line-number"},[s._v("546")]),n("br"),n("span",{staticClass:"line-number"},[s._v("547")]),n("br"),n("span",{staticClass:"line-number"},[s._v("548")]),n("br"),n("span",{staticClass:"line-number"},[s._v("549")]),n("br"),n("span",{staticClass:"line-number"},[s._v("550")]),n("br"),n("span",{staticClass:"line-number"},[s._v("551")]),n("br"),n("span",{staticClass:"line-number"},[s._v("552")]),n("br"),n("span",{staticClass:"line-number"},[s._v("553")]),n("br"),n("span",{staticClass:"line-number"},[s._v("554")]),n("br"),n("span",{staticClass:"line-number"},[s._v("555")]),n("br"),n("span",{staticClass:"line-number"},[s._v("556")]),n("br"),n("span",{staticClass:"line-number"},[s._v("557")]),n("br"),n("span",{staticClass:"line-number"},[s._v("558")]),n("br"),n("span",{staticClass:"line-number"},[s._v("559")]),n("br"),n("span",{staticClass:"line-number"},[s._v("560")]),n("br"),n("span",{staticClass:"line-number"},[s._v("561")]),n("br"),n("span",{staticClass:"line-number"},[s._v("562")]),n("br"),n("span",{staticClass:"line-number"},[s._v("563")]),n("br"),n("span",{staticClass:"line-number"},[s._v("564")]),n("br"),n("span",{staticClass:"line-number"},[s._v("565")]),n("br"),n("span",{staticClass:"line-number"},[s._v("566")]),n("br"),n("span",{staticClass:"line-number"},[s._v("567")]),n("br"),n("span",{staticClass:"line-number"},[s._v("568")]),n("br"),n("span",{staticClass:"line-number"},[s._v("569")]),n("br"),n("span",{staticClass:"line-number"},[s._v("570")]),n("br"),n("span",{staticClass:"line-number"},[s._v("571")]),n("br"),n("span",{staticClass:"line-number"},[s._v("572")]),n("br"),n("span",{staticClass:"line-number"},[s._v("573")]),n("br"),n("span",{staticClass:"line-number"},[s._v("574")]),n("br"),n("span",{staticClass:"line-number"},[s._v("575")]),n("br"),n("span",{staticClass:"line-number"},[s._v("576")]),n("br"),n("span",{staticClass:"line-number"},[s._v("577")]),n("br"),n("span",{staticClass:"line-number"},[s._v("578")]),n("br"),n("span",{staticClass:"line-number"},[s._v("579")]),n("br"),n("span",{staticClass:"line-number"},[s._v("580")]),n("br"),n("span",{staticClass:"line-number"},[s._v("581")]),n("br"),n("span",{staticClass:"line-number"},[s._v("582")]),n("br"),n("span",{staticClass:"line-number"},[s._v("583")]),n("br"),n("span",{staticClass:"line-number"},[s._v("584")]),n("br"),n("span",{staticClass:"line-number"},[s._v("585")]),n("br"),n("span",{staticClass:"line-number"},[s._v("586")]),n("br"),n("span",{staticClass:"line-number"},[s._v("587")]),n("br"),n("span",{staticClass:"line-number"},[s._v("588")]),n("br"),n("span",{staticClass:"line-number"},[s._v("589")]),n("br"),n("span",{staticClass:"line-number"},[s._v("590")]),n("br"),n("span",{staticClass:"line-number"},[s._v("591")]),n("br"),n("span",{staticClass:"line-number"},[s._v("592")]),n("br"),n("span",{staticClass:"line-number"},[s._v("593")]),n("br"),n("span",{staticClass:"line-number"},[s._v("594")]),n("br"),n("span",{staticClass:"line-number"},[s._v("595")]),n("br"),n("span",{staticClass:"line-number"},[s._v("596")]),n("br"),n("span",{staticClass:"line-number"},[s._v("597")]),n("br"),n("span",{staticClass:"line-number"},[s._v("598")]),n("br"),n("span",{staticClass:"line-number"},[s._v("599")]),n("br"),n("span",{staticClass:"line-number"},[s._v("600")]),n("br"),n("span",{staticClass:"line-number"},[s._v("601")]),n("br"),n("span",{staticClass:"line-number"},[s._v("602")]),n("br"),n("span",{staticClass:"line-number"},[s._v("603")]),n("br"),n("span",{staticClass:"line-number"},[s._v("604")]),n("br"),n("span",{staticClass:"line-number"},[s._v("605")]),n("br"),n("span",{staticClass:"line-number"},[s._v("606")]),n("br"),n("span",{staticClass:"line-number"},[s._v("607")]),n("br"),n("span",{staticClass:"line-number"},[s._v("608")]),n("br"),n("span",{staticClass:"line-number"},[s._v("609")]),n("br"),n("span",{staticClass:"line-number"},[s._v("610")]),n("br"),n("span",{staticClass:"line-number"},[s._v("611")]),n("br"),n("span",{staticClass:"line-number"},[s._v("612")]),n("br"),n("span",{staticClass:"line-number"},[s._v("613")]),n("br"),n("span",{staticClass:"line-number"},[s._v("614")]),n("br"),n("span",{staticClass:"line-number"},[s._v("615")]),n("br"),n("span",{staticClass:"line-number"},[s._v("616")]),n("br"),n("span",{staticClass:"line-number"},[s._v("617")]),n("br"),n("span",{staticClass:"line-number"},[s._v("618")]),n("br"),n("span",{staticClass:"line-number"},[s._v("619")]),n("br"),n("span",{staticClass:"line-number"},[s._v("620")]),n("br"),n("span",{staticClass:"line-number"},[s._v("621")]),n("br"),n("span",{staticClass:"line-number"},[s._v("622")]),n("br"),n("span",{staticClass:"line-number"},[s._v("623")]),n("br"),n("span",{staticClass:"line-number"},[s._v("624")]),n("br"),n("span",{staticClass:"line-number"},[s._v("625")]),n("br"),n("span",{staticClass:"line-number"},[s._v("626")]),n("br"),n("span",{staticClass:"line-number"},[s._v("627")]),n("br"),n("span",{staticClass:"line-number"},[s._v("628")]),n("br"),n("span",{staticClass:"line-number"},[s._v("629")]),n("br"),n("span",{staticClass:"line-number"},[s._v("630")]),n("br"),n("span",{staticClass:"line-number"},[s._v("631")]),n("br"),n("span",{staticClass:"line-number"},[s._v("632")]),n("br"),n("span",{staticClass:"line-number"},[s._v("633")]),n("br"),n("span",{staticClass:"line-number"},[s._v("634")]),n("br"),n("span",{staticClass:"line-number"},[s._v("635")]),n("br"),n("span",{staticClass:"line-number"},[s._v("636")]),n("br"),n("span",{staticClass:"line-number"},[s._v("637")]),n("br"),n("span",{staticClass:"line-number"},[s._v("638")]),n("br"),n("span",{staticClass:"line-number"},[s._v("639")]),n("br"),n("span",{staticClass:"line-number"},[s._v("640")]),n("br"),n("span",{staticClass:"line-number"},[s._v("641")]),n("br"),n("span",{staticClass:"line-number"},[s._v("642")]),n("br"),n("span",{staticClass:"line-number"},[s._v("643")]),n("br"),n("span",{staticClass:"line-number"},[s._v("644")]),n("br"),n("span",{staticClass:"line-number"},[s._v("645")]),n("br"),n("span",{staticClass:"line-number"},[s._v("646")]),n("br"),n("span",{staticClass:"line-number"},[s._v("647")]),n("br"),n("span",{staticClass:"line-number"},[s._v("648")]),n("br"),n("span",{staticClass:"line-number"},[s._v("649")]),n("br"),n("span",{staticClass:"line-number"},[s._v("650")]),n("br"),n("span",{staticClass:"line-number"},[s._v("651")]),n("br"),n("span",{staticClass:"line-number"},[s._v("652")]),n("br"),n("span",{staticClass:"line-number"},[s._v("653")]),n("br"),n("span",{staticClass:"line-number"},[s._v("654")]),n("br"),n("span",{staticClass:"line-number"},[s._v("655")]),n("br"),n("span",{staticClass:"line-number"},[s._v("656")]),n("br"),n("span",{staticClass:"line-number"},[s._v("657")]),n("br"),n("span",{staticClass:"line-number"},[s._v("658")]),n("br"),n("span",{staticClass:"line-number"},[s._v("659")]),n("br"),n("span",{staticClass:"line-number"},[s._v("660")]),n("br"),n("span",{staticClass:"line-number"},[s._v("661")]),n("br"),n("span",{staticClass:"line-number"},[s._v("662")]),n("br"),n("span",{staticClass:"line-number"},[s._v("663")]),n("br"),n("span",{staticClass:"line-number"},[s._v("664")]),n("br"),n("span",{staticClass:"line-number"},[s._v("665")]),n("br"),n("span",{staticClass:"line-number"},[s._v("666")]),n("br"),n("span",{staticClass:"line-number"},[s._v("667")]),n("br"),n("span",{staticClass:"line-number"},[s._v("668")]),n("br"),n("span",{staticClass:"line-number"},[s._v("669")]),n("br"),n("span",{staticClass:"line-number"},[s._v("670")]),n("br"),n("span",{staticClass:"line-number"},[s._v("671")]),n("br"),n("span",{staticClass:"line-number"},[s._v("672")]),n("br"),n("span",{staticClass:"line-number"},[s._v("673")]),n("br"),n("span",{staticClass:"line-number"},[s._v("674")]),n("br"),n("span",{staticClass:"line-number"},[s._v("675")]),n("br"),n("span",{staticClass:"line-number"},[s._v("676")]),n("br"),n("span",{staticClass:"line-number"},[s._v("677")]),n("br"),n("span",{staticClass:"line-number"},[s._v("678")]),n("br"),n("span",{staticClass:"line-number"},[s._v("679")]),n("br"),n("span",{staticClass:"line-number"},[s._v("680")]),n("br"),n("span",{staticClass:"line-number"},[s._v("681")]),n("br"),n("span",{staticClass:"line-number"},[s._v("682")]),n("br"),n("span",{staticClass:"line-number"},[s._v("683")]),n("br"),n("span",{staticClass:"line-number"},[s._v("684")]),n("br"),n("span",{staticClass:"line-number"},[s._v("685")]),n("br"),n("span",{staticClass:"line-number"},[s._v("686")]),n("br"),n("span",{staticClass:"line-number"},[s._v("687")]),n("br"),n("span",{staticClass:"line-number"},[s._v("688")]),n("br"),n("span",{staticClass:"line-number"},[s._v("689")]),n("br"),n("span",{staticClass:"line-number"},[s._v("690")]),n("br"),n("span",{staticClass:"line-number"},[s._v("691")]),n("br"),n("span",{staticClass:"line-number"},[s._v("692")]),n("br"),n("span",{staticClass:"line-number"},[s._v("693")]),n("br"),n("span",{staticClass:"line-number"},[s._v("694")]),n("br"),n("span",{staticClass:"line-number"},[s._v("695")]),n("br"),n("span",{staticClass:"line-number"},[s._v("696")]),n("br"),n("span",{staticClass:"line-number"},[s._v("697")]),n("br"),n("span",{staticClass:"line-number"},[s._v("698")]),n("br"),n("span",{staticClass:"line-number"},[s._v("699")]),n("br"),n("span",{staticClass:"line-number"},[s._v("700")]),n("br"),n("span",{staticClass:"line-number"},[s._v("701")]),n("br"),n("span",{staticClass:"line-number"},[s._v("702")]),n("br"),n("span",{staticClass:"line-number"},[s._v("703")]),n("br"),n("span",{staticClass:"line-number"},[s._v("704")]),n("br"),n("span",{staticClass:"line-number"},[s._v("705")]),n("br"),n("span",{staticClass:"line-number"},[s._v("706")]),n("br"),n("span",{staticClass:"line-number"},[s._v("707")]),n("br"),n("span",{staticClass:"line-number"},[s._v("708")]),n("br"),n("span",{staticClass:"line-number"},[s._v("709")]),n("br"),n("span",{staticClass:"line-number"},[s._v("710")]),n("br"),n("span",{staticClass:"line-number"},[s._v("711")]),n("br"),n("span",{staticClass:"line-number"},[s._v("712")]),n("br"),n("span",{staticClass:"line-number"},[s._v("713")]),n("br"),n("span",{staticClass:"line-number"},[s._v("714")]),n("br"),n("span",{staticClass:"line-number"},[s._v("715")]),n("br"),n("span",{staticClass:"line-number"},[s._v("716")]),n("br"),n("span",{staticClass:"line-number"},[s._v("717")]),n("br"),n("span",{staticClass:"line-number"},[s._v("718")]),n("br"),n("span",{staticClass:"line-number"},[s._v("719")]),n("br"),n("span",{staticClass:"line-number"},[s._v("720")]),n("br"),n("span",{staticClass:"line-number"},[s._v("721")]),n("br"),n("span",{staticClass:"line-number"},[s._v("722")]),n("br"),n("span",{staticClass:"line-number"},[s._v("723")]),n("br"),n("span",{staticClass:"line-number"},[s._v("724")]),n("br"),n("span",{staticClass:"line-number"},[s._v("725")]),n("br"),n("span",{staticClass:"line-number"},[s._v("726")]),n("br"),n("span",{staticClass:"line-number"},[s._v("727")]),n("br"),n("span",{staticClass:"line-number"},[s._v("728")]),n("br"),n("span",{staticClass:"line-number"},[s._v("729")]),n("br"),n("span",{staticClass:"line-number"},[s._v("730")]),n("br"),n("span",{staticClass:"line-number"},[s._v("731")]),n("br"),n("span",{staticClass:"line-number"},[s._v("732")]),n("br"),n("span",{staticClass:"line-number"},[s._v("733")]),n("br"),n("span",{staticClass:"line-number"},[s._v("734")]),n("br"),n("span",{staticClass:"line-number"},[s._v("735")]),n("br"),n("span",{staticClass:"line-number"},[s._v("736")]),n("br"),n("span",{staticClass:"line-number"},[s._v("737")]),n("br"),n("span",{staticClass:"line-number"},[s._v("738")]),n("br"),n("span",{staticClass:"line-number"},[s._v("739")]),n("br"),n("span",{staticClass:"line-number"},[s._v("740")]),n("br"),n("span",{staticClass:"line-number"},[s._v("741")]),n("br"),n("span",{staticClass:"line-number"},[s._v("742")]),n("br"),n("span",{staticClass:"line-number"},[s._v("743")]),n("br"),n("span",{staticClass:"line-number"},[s._v("744")]),n("br"),n("span",{staticClass:"line-number"},[s._v("745")]),n("br"),n("span",{staticClass:"line-number"},[s._v("746")]),n("br"),n("span",{staticClass:"line-number"},[s._v("747")]),n("br"),n("span",{staticClass:"line-number"},[s._v("748")]),n("br"),n("span",{staticClass:"line-number"},[s._v("749")]),n("br"),n("span",{staticClass:"line-number"},[s._v("750")]),n("br"),n("span",{staticClass:"line-number"},[s._v("751")]),n("br"),n("span",{staticClass:"line-number"},[s._v("752")]),n("br"),n("span",{staticClass:"line-number"},[s._v("753")]),n("br"),n("span",{staticClass:"line-number"},[s._v("754")]),n("br"),n("span",{staticClass:"line-number"},[s._v("755")]),n("br"),n("span",{staticClass:"line-number"},[s._v("756")]),n("br"),n("span",{staticClass:"line-number"},[s._v("757")]),n("br"),n("span",{staticClass:"line-number"},[s._v("758")]),n("br"),n("span",{staticClass:"line-number"},[s._v("759")]),n("br"),n("span",{staticClass:"line-number"},[s._v("760")]),n("br"),n("span",{staticClass:"line-number"},[s._v("761")]),n("br"),n("span",{staticClass:"line-number"},[s._v("762")]),n("br"),n("span",{staticClass:"line-number"},[s._v("763")]),n("br"),n("span",{staticClass:"line-number"},[s._v("764")]),n("br"),n("span",{staticClass:"line-number"},[s._v("765")]),n("br"),n("span",{staticClass:"line-number"},[s._v("766")]),n("br"),n("span",{staticClass:"line-number"},[s._v("767")]),n("br"),n("span",{staticClass:"line-number"},[s._v("768")]),n("br"),n("span",{staticClass:"line-number"},[s._v("769")]),n("br"),n("span",{staticClass:"line-number"},[s._v("770")]),n("br"),n("span",{staticClass:"line-number"},[s._v("771")]),n("br"),n("span",{staticClass:"line-number"},[s._v("772")]),n("br"),n("span",{staticClass:"line-number"},[s._v("773")]),n("br"),n("span",{staticClass:"line-number"},[s._v("774")]),n("br"),n("span",{staticClass:"line-number"},[s._v("775")]),n("br"),n("span",{staticClass:"line-number"},[s._v("776")]),n("br"),n("span",{staticClass:"line-number"},[s._v("777")]),n("br"),n("span",{staticClass:"line-number"},[s._v("778")]),n("br"),n("span",{staticClass:"line-number"},[s._v("779")]),n("br"),n("span",{staticClass:"line-number"},[s._v("780")]),n("br"),n("span",{staticClass:"line-number"},[s._v("781")]),n("br"),n("span",{staticClass:"line-number"},[s._v("782")]),n("br"),n("span",{staticClass:"line-number"},[s._v("783")]),n("br"),n("span",{staticClass:"line-number"},[s._v("784")]),n("br"),n("span",{staticClass:"line-number"},[s._v("785")]),n("br"),n("span",{staticClass:"line-number"},[s._v("786")]),n("br"),n("span",{staticClass:"line-number"},[s._v("787")]),n("br"),n("span",{staticClass:"line-number"},[s._v("788")]),n("br"),n("span",{staticClass:"line-number"},[s._v("789")]),n("br"),n("span",{staticClass:"line-number"},[s._v("790")]),n("br"),n("span",{staticClass:"line-number"},[s._v("791")]),n("br"),n("span",{staticClass:"line-number"},[s._v("792")]),n("br"),n("span",{staticClass:"line-number"},[s._v("793")]),n("br"),n("span",{staticClass:"line-number"},[s._v("794")]),n("br"),n("span",{staticClass:"line-number"},[s._v("795")]),n("br"),n("span",{staticClass:"line-number"},[s._v("796")]),n("br"),n("span",{staticClass:"line-number"},[s._v("797")]),n("br"),n("span",{staticClass:"line-number"},[s._v("798")]),n("br"),n("span",{staticClass:"line-number"},[s._v("799")]),n("br"),n("span",{staticClass:"line-number"},[s._v("800")]),n("br"),n("span",{staticClass:"line-number"},[s._v("801")]),n("br"),n("span",{staticClass:"line-number"},[s._v("802")]),n("br"),n("span",{staticClass:"line-number"},[s._v("803")]),n("br"),n("span",{staticClass:"line-number"},[s._v("804")]),n("br"),n("span",{staticClass:"line-number"},[s._v("805")]),n("br"),n("span",{staticClass:"line-number"},[s._v("806")]),n("br"),n("span",{staticClass:"line-number"},[s._v("807")]),n("br"),n("span",{staticClass:"line-number"},[s._v("808")]),n("br"),n("span",{staticClass:"line-number"},[s._v("809")]),n("br"),n("span",{staticClass:"line-number"},[s._v("810")]),n("br"),n("span",{staticClass:"line-number"},[s._v("811")]),n("br"),n("span",{staticClass:"line-number"},[s._v("812")]),n("br"),n("span",{staticClass:"line-number"},[s._v("813")]),n("br"),n("span",{staticClass:"line-number"},[s._v("814")]),n("br"),n("span",{staticClass:"line-number"},[s._v("815")]),n("br"),n("span",{staticClass:"line-number"},[s._v("816")]),n("br"),n("span",{staticClass:"line-number"},[s._v("817")]),n("br"),n("span",{staticClass:"line-number"},[s._v("818")]),n("br"),n("span",{staticClass:"line-number"},[s._v("819")]),n("br"),n("span",{staticClass:"line-number"},[s._v("820")]),n("br"),n("span",{staticClass:"line-number"},[s._v("821")]),n("br"),n("span",{staticClass:"line-number"},[s._v("822")]),n("br"),n("span",{staticClass:"line-number"},[s._v("823")]),n("br"),n("span",{staticClass:"line-number"},[s._v("824")]),n("br"),n("span",{staticClass:"line-number"},[s._v("825")]),n("br"),n("span",{staticClass:"line-number"},[s._v("826")]),n("br"),n("span",{staticClass:"line-number"},[s._v("827")]),n("br"),n("span",{staticClass:"line-number"},[s._v("828")]),n("br"),n("span",{staticClass:"line-number"},[s._v("829")]),n("br"),n("span",{staticClass:"line-number"},[s._v("830")]),n("br"),n("span",{staticClass:"line-number"},[s._v("831")]),n("br"),n("span",{staticClass:"line-number"},[s._v("832")]),n("br"),n("span",{staticClass:"line-number"},[s._v("833")]),n("br"),n("span",{staticClass:"line-number"},[s._v("834")]),n("br"),n("span",{staticClass:"line-number"},[s._v("835")]),n("br"),n("span",{staticClass:"line-number"},[s._v("836")]),n("br"),n("span",{staticClass:"line-number"},[s._v("837")]),n("br"),n("span",{staticClass:"line-number"},[s._v("838")]),n("br"),n("span",{staticClass:"line-number"},[s._v("839")]),n("br"),n("span",{staticClass:"line-number"},[s._v("840")]),n("br"),n("span",{staticClass:"line-number"},[s._v("841")]),n("br"),n("span",{staticClass:"line-number"},[s._v("842")]),n("br"),n("span",{staticClass:"line-number"},[s._v("843")]),n("br"),n("span",{staticClass:"line-number"},[s._v("844")]),n("br"),n("span",{staticClass:"line-number"},[s._v("845")]),n("br"),n("span",{staticClass:"line-number"},[s._v("846")]),n("br"),n("span",{staticClass:"line-number"},[s._v("847")]),n("br"),n("span",{staticClass:"line-number"},[s._v("848")]),n("br"),n("span",{staticClass:"line-number"},[s._v("849")]),n("br"),n("span",{staticClass:"line-number"},[s._v("850")]),n("br"),n("span",{staticClass:"line-number"},[s._v("851")]),n("br"),n("span",{staticClass:"line-number"},[s._v("852")]),n("br"),n("span",{staticClass:"line-number"},[s._v("853")]),n("br"),n("span",{staticClass:"line-number"},[s._v("854")]),n("br"),n("span",{staticClass:"line-number"},[s._v("855")]),n("br"),n("span",{staticClass:"line-number"},[s._v("856")]),n("br"),n("span",{staticClass:"line-number"},[s._v("857")]),n("br"),n("span",{staticClass:"line-number"},[s._v("858")]),n("br"),n("span",{staticClass:"line-number"},[s._v("859")]),n("br"),n("span",{staticClass:"line-number"},[s._v("860")]),n("br"),n("span",{staticClass:"line-number"},[s._v("861")]),n("br"),n("span",{staticClass:"line-number"},[s._v("862")]),n("br"),n("span",{staticClass:"line-number"},[s._v("863")]),n("br"),n("span",{staticClass:"line-number"},[s._v("864")]),n("br"),n("span",{staticClass:"line-number"},[s._v("865")]),n("br"),n("span",{staticClass:"line-number"},[s._v("866")]),n("br"),n("span",{staticClass:"line-number"},[s._v("867")]),n("br"),n("span",{staticClass:"line-number"},[s._v("868")]),n("br"),n("span",{staticClass:"line-number"},[s._v("869")]),n("br"),n("span",{staticClass:"line-number"},[s._v("870")]),n("br"),n("span",{staticClass:"line-number"},[s._v("871")]),n("br"),n("span",{staticClass:"line-number"},[s._v("872")]),n("br"),n("span",{staticClass:"line-number"},[s._v("873")]),n("br"),n("span",{staticClass:"line-number"},[s._v("874")]),n("br"),n("span",{staticClass:"line-number"},[s._v("875")]),n("br"),n("span",{staticClass:"line-number"},[s._v("876")]),n("br"),n("span",{staticClass:"line-number"},[s._v("877")]),n("br"),n("span",{staticClass:"line-number"},[s._v("878")]),n("br"),n("span",{staticClass:"line-number"},[s._v("879")]),n("br"),n("span",{staticClass:"line-number"},[s._v("880")]),n("br"),n("span",{staticClass:"line-number"},[s._v("881")]),n("br"),n("span",{staticClass:"line-number"},[s._v("882")]),n("br"),n("span",{staticClass:"line-number"},[s._v("883")]),n("br"),n("span",{staticClass:"line-number"},[s._v("884")]),n("br"),n("span",{staticClass:"line-number"},[s._v("885")]),n("br"),n("span",{staticClass:"line-number"},[s._v("886")]),n("br"),n("span",{staticClass:"line-number"},[s._v("887")]),n("br"),n("span",{staticClass:"line-number"},[s._v("888")]),n("br"),n("span",{staticClass:"line-number"},[s._v("889")]),n("br"),n("span",{staticClass:"line-number"},[s._v("890")]),n("br"),n("span",{staticClass:"line-number"},[s._v("891")]),n("br"),n("span",{staticClass:"line-number"},[s._v("892")]),n("br"),n("span",{staticClass:"line-number"},[s._v("893")]),n("br"),n("span",{staticClass:"line-number"},[s._v("894")]),n("br"),n("span",{staticClass:"line-number"},[s._v("895")]),n("br"),n("span",{staticClass:"line-number"},[s._v("896")]),n("br"),n("span",{staticClass:"line-number"},[s._v("897")]),n("br"),n("span",{staticClass:"line-number"},[s._v("898")]),n("br"),n("span",{staticClass:"line-number"},[s._v("899")]),n("br"),n("span",{staticClass:"line-number"},[s._v("900")]),n("br"),n("span",{staticClass:"line-number"},[s._v("901")]),n("br"),n("span",{staticClass:"line-number"},[s._v("902")]),n("br"),n("span",{staticClass:"line-number"},[s._v("903")]),n("br"),n("span",{staticClass:"line-number"},[s._v("904")]),n("br"),n("span",{staticClass:"line-number"},[s._v("905")]),n("br"),n("span",{staticClass:"line-number"},[s._v("906")]),n("br"),n("span",{staticClass:"line-number"},[s._v("907")]),n("br"),n("span",{staticClass:"line-number"},[s._v("908")]),n("br"),n("span",{staticClass:"line-number"},[s._v("909")]),n("br"),n("span",{staticClass:"line-number"},[s._v("910")]),n("br"),n("span",{staticClass:"line-number"},[s._v("911")]),n("br"),n("span",{staticClass:"line-number"},[s._v("912")]),n("br"),n("span",{staticClass:"line-number"},[s._v("913")]),n("br"),n("span",{staticClass:"line-number"},[s._v("914")]),n("br"),n("span",{staticClass:"line-number"},[s._v("915")]),n("br"),n("span",{staticClass:"line-number"},[s._v("916")]),n("br"),n("span",{staticClass:"line-number"},[s._v("917")]),n("br"),n("span",{staticClass:"line-number"},[s._v("918")]),n("br"),n("span",{staticClass:"line-number"},[s._v("919")]),n("br"),n("span",{staticClass:"line-number"},[s._v("920")]),n("br"),n("span",{staticClass:"line-number"},[s._v("921")]),n("br"),n("span",{staticClass:"line-number"},[s._v("922")]),n("br"),n("span",{staticClass:"line-number"},[s._v("923")]),n("br"),n("span",{staticClass:"line-number"},[s._v("924")]),n("br"),n("span",{staticClass:"line-number"},[s._v("925")]),n("br"),n("span",{staticClass:"line-number"},[s._v("926")]),n("br"),n("span",{staticClass:"line-number"},[s._v("927")]),n("br"),n("span",{staticClass:"line-number"},[s._v("928")]),n("br"),n("span",{staticClass:"line-number"},[s._v("929")]),n("br"),n("span",{staticClass:"line-number"},[s._v("930")]),n("br"),n("span",{staticClass:"line-number"},[s._v("931")]),n("br"),n("span",{staticClass:"line-number"},[s._v("932")]),n("br"),n("span",{staticClass:"line-number"},[s._v("933")]),n("br"),n("span",{staticClass:"line-number"},[s._v("934")]),n("br"),n("span",{staticClass:"line-number"},[s._v("935")]),n("br"),n("span",{staticClass:"line-number"},[s._v("936")]),n("br"),n("span",{staticClass:"line-number"},[s._v("937")]),n("br"),n("span",{staticClass:"line-number"},[s._v("938")]),n("br"),n("span",{staticClass:"line-number"},[s._v("939")]),n("br"),n("span",{staticClass:"line-number"},[s._v("940")]),n("br"),n("span",{staticClass:"line-number"},[s._v("941")]),n("br"),n("span",{staticClass:"line-number"},[s._v("942")]),n("br"),n("span",{staticClass:"line-number"},[s._v("943")]),n("br"),n("span",{staticClass:"line-number"},[s._v("944")]),n("br"),n("span",{staticClass:"line-number"},[s._v("945")]),n("br"),n("span",{staticClass:"line-number"},[s._v("946")]),n("br"),n("span",{staticClass:"line-number"},[s._v("947")]),n("br"),n("span",{staticClass:"line-number"},[s._v("948")]),n("br"),n("span",{staticClass:"line-number"},[s._v("949")]),n("br"),n("span",{staticClass:"line-number"},[s._v("950")]),n("br"),n("span",{staticClass:"line-number"},[s._v("951")]),n("br"),n("span",{staticClass:"line-number"},[s._v("952")]),n("br"),n("span",{staticClass:"line-number"},[s._v("953")]),n("br"),n("span",{staticClass:"line-number"},[s._v("954")]),n("br"),n("span",{staticClass:"line-number"},[s._v("955")]),n("br"),n("span",{staticClass:"line-number"},[s._v("956")]),n("br"),n("span",{staticClass:"line-number"},[s._v("957")]),n("br"),n("span",{staticClass:"line-number"},[s._v("958")]),n("br"),n("span",{staticClass:"line-number"},[s._v("959")]),n("br"),n("span",{staticClass:"line-number"},[s._v("960")]),n("br"),n("span",{staticClass:"line-number"},[s._v("961")]),n("br"),n("span",{staticClass:"line-number"},[s._v("962")]),n("br"),n("span",{staticClass:"line-number"},[s._v("963")]),n("br"),n("span",{staticClass:"line-number"},[s._v("964")]),n("br"),n("span",{staticClass:"line-number"},[s._v("965")]),n("br"),n("span",{staticClass:"line-number"},[s._v("966")]),n("br"),n("span",{staticClass:"line-number"},[s._v("967")]),n("br"),n("span",{staticClass:"line-number"},[s._v("968")]),n("br"),n("span",{staticClass:"line-number"},[s._v("969")]),n("br"),n("span",{staticClass:"line-number"},[s._v("970")]),n("br"),n("span",{staticClass:"line-number"},[s._v("971")]),n("br"),n("span",{staticClass:"line-number"},[s._v("972")]),n("br"),n("span",{staticClass:"line-number"},[s._v("973")]),n("br"),n("span",{staticClass:"line-number"},[s._v("974")]),n("br"),n("span",{staticClass:"line-number"},[s._v("975")]),n("br"),n("span",{staticClass:"line-number"},[s._v("976")]),n("br"),n("span",{staticClass:"line-number"},[s._v("977")]),n("br"),n("span",{staticClass:"line-number"},[s._v("978")]),n("br"),n("span",{staticClass:"line-number"},[s._v("979")]),n("br"),n("span",{staticClass:"line-number"},[s._v("980")]),n("br"),n("span",{staticClass:"line-number"},[s._v("981")]),n("br"),n("span",{staticClass:"line-number"},[s._v("982")]),n("br"),n("span",{staticClass:"line-number"},[s._v("983")]),n("br"),n("span",{staticClass:"line-number"},[s._v("984")]),n("br"),n("span",{staticClass:"line-number"},[s._v("985")]),n("br"),n("span",{staticClass:"line-number"},[s._v("986")]),n("br"),n("span",{staticClass:"line-number"},[s._v("987")]),n("br"),n("span",{staticClass:"line-number"},[s._v("988")]),n("br"),n("span",{staticClass:"line-number"},[s._v("989")]),n("br"),n("span",{staticClass:"line-number"},[s._v("990")]),n("br"),n("span",{staticClass:"line-number"},[s._v("991")]),n("br"),n("span",{staticClass:"line-number"},[s._v("992")]),n("br"),n("span",{staticClass:"line-number"},[s._v("993")]),n("br"),n("span",{staticClass:"line-number"},[s._v("994")]),n("br"),n("span",{staticClass:"line-number"},[s._v("995")]),n("br"),n("span",{staticClass:"line-number"},[s._v("996")]),n("br"),n("span",{staticClass:"line-number"},[s._v("997")]),n("br"),n("span",{staticClass:"line-number"},[s._v("998")]),n("br"),n("span",{staticClass:"line-number"},[s._v("999")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1000")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1001")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1002")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1003")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1004")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1005")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1006")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1007")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1008")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1009")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1010")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1011")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1012")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1013")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1014")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1015")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1016")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1017")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1018")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1019")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1020")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1021")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1022")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1023")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1024")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1025")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1026")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1027")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1028")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1029")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1030")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1031")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1032")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1033")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1034")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1035")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1036")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1037")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1038")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1039")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1040")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1041")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1042")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1043")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1044")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1045")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1046")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1047")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1048")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1049")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1050")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1051")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1052")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1053")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1054")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1055")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1056")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1057")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1058")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1059")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1060")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1061")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1062")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1063")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1064")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1065")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1066")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1067")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1068")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1069")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1070")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1071")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1072")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1073")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1074")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1075")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1076")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1077")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1078")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1079")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1080")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1081")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1082")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1083")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1084")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1085")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1086")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1087")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1088")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1089")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1090")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1091")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1092")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1093")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1094")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1095")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1096")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1097")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1098")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1099")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1202")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1203")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1204")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1205")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1206")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1207")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1208")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1209")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1210")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1211")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1212")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1213")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1214")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1215")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1216")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1217")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1218")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1219")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1220")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1221")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1222")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1223")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1224")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1225")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1226")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1227")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1228")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1229")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1230")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1231")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1232")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1233")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1234")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1235")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1236")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1237")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1238")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1239")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1240")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1241")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1242")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1243")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1244")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1245")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1246")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1247")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1248")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1249")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1250")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1251")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1252")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1253")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1254")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1255")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1256")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1257")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1258")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1259")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1260")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1261")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1262")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1263")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1264")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1265")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1266")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1267")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1268")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1269")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1270")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1271")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1272")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1273")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1274")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1275")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1276")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1277")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1278")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1279")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1280")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1281")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1282")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1283")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1284")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1285")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1286")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1287")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1288")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1289")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1290")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1291")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1292")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1293")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1294")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1295")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1296")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1297")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1298")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1299")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1300")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1301")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1302")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1303")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1304")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1305")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1306")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1307")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1308")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1309")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1310")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1311")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1312")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1313")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1314")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1315")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1316")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1317")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1318")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1319")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1320")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1321")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1322")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1323")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1324")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1325")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1326")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1327")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1328")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1329")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1330")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1331")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1332")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1333")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1334")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1335")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1336")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1337")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1338")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1339")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1340")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1341")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1342")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1343")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1344")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1345")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1346")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1347")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1348")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1349")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1350")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1351")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1352")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1353")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1354")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1355")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1356")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1357")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1358")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1359")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1360")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1361")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1362")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1363")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1364")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1365")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1366")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1367")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1368")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1369")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1370")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1371")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1372")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1373")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1374")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1375")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1376")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1377")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1378")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1379")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1380")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1381")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1382")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1383")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1384")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1385")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1386")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1387")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1388")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1389")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1390")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1391")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1392")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1393")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1394")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1395")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1396")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1397")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1398")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1399")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1400")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1401")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1402")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1403")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1404")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1405")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1406")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1407")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1408")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1409")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1410")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1411")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1412")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1413")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1414")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1415")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1416")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1417")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1418")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1419")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1420")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1421")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1422")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1423")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1424")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1425")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1426")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1427")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1428")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1429")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1430")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1431")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1432")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1433")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1434")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1435")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1436")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1437")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1438")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1439")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1440")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1441")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1442")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1443")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1444")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1445")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1446")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1447")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1448")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1449")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1450")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1451")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1452")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1453")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1454")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1455")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1456")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1457")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1458")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1459")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1460")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1461")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1462")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1463")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1464")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1465")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1466")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1467")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1468")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1469")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1470")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1471")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1472")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1473")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1474")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1475")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1476")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1477")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1478")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1479")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1480")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1481")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1482")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1483")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1484")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1485")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1486")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1487")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1488")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1489")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1490")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1491")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1492")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1493")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1494")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1495")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1496")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1497")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1498")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1499")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1500")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1501")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1502")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1503")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1504")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1505")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1506")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1507")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1508")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1509")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1510")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1511")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1512")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1513")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1514")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1515")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1516")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1517")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1518")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1519")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1520")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1521")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1522")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1523")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1524")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1525")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1526")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1527")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1528")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1529")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1530")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1531")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1532")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1533")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1534")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1535")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1536")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1537")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1538")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1539")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1540")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1541")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1542")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1543")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1544")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1545")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1546")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1547")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1548")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1549")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1550")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1551")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1552")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1553")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1554")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1555")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1556")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1557")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1558")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1559")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1560")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1561")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1562")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1563")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1564")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1565")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1566")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1567")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1568")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1569")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1570")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1571")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1572")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1573")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1574")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1575")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1576")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1577")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1578")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1579")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1580")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1581")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1582")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1583")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1584")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1585")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1586")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1587")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1588")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1589")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1590")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1591")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1592")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1593")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1594")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1595")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1596")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1597")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1598")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1599")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1600")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1601")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1602")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1603")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1604")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1605")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1606")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1607")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1608")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1609")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1610")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1611")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1612")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1613")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1614")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1615")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1616")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1617")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1618")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1619")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1620")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1621")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1622")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1623")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1624")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1625")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1626")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1627")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1628")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1629")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1630")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1631")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1632")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1633")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1634")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1635")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1636")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1637")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1638")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1639")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1640")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1641")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1642")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1643")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1644")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1645")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1646")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1647")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1648")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1649")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1650")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1651")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1652")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1653")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1654")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1655")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1656")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1657")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1658")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1659")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1660")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1661")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1662")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1663")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1664")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1665")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1666")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1667")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1668")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1669")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1670")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1671")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1672")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1673")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1674")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1675")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1676")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1677")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1678")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1679")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1680")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1681")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1682")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1683")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1684")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1685")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1686")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1687")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1688")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1689")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1690")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1691")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1692")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1693")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1694")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1695")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1696")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1697")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1698")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1699")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1700")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1701")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1702")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1703")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1704")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1705")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1706")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1707")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1708")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1709")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1710")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1711")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1712")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1713")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1714")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1715")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1716")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1717")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1718")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1719")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1720")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1721")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1722")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1723")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1724")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1725")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1726")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1727")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1728")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1729")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1730")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1731")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1732")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1733")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1734")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1735")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1736")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1737")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1738")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1739")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1740")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1741")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1742")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1743")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1744")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1745")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1746")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1747")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1748")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1749")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1750")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1751")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1752")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1753")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1754")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1755")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1756")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1757")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1758")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1759")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1760")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1761")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1762")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1763")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1764")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1765")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1766")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1767")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1768")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1769")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1770")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1771")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1772")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1773")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1774")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1775")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1776")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1777")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1778")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1779")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1780")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1781")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1782")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1783")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1784")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1785")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1786")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1787")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1788")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1789")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1790")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1791")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1792")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1793")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1794")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1795")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1796")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1797")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1798")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1799")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1800")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1801")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1802")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1803")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1804")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1805")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1806")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1807")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1808")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1809")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1810")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1811")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1812")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1813")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1814")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1815")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1816")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1817")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1818")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1819")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1820")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1821")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1822")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1823")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1824")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1825")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1826")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1827")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1828")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1829")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1830")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1831")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1832")]),n("br"),n("span",{staticClass:"line-number"},[s._v("1833")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("启动redis")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker run -d -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(":6379 -v /apps/redis/data:/data -v /apps/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf  redis:6.0.6 redis-server /usr/local/etc/redis/redis.conf\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])]),s._v(" "),n("h2",{attrs:{id:"nginx安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx安装"}},[s._v("#")]),s._v(" Nginx安装")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("拉取nginx镜像")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker pull nginx:1.19.1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("配置本地文件目录")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /apps/nginx/html\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /apps/nginx/conf\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("在/apps/nginx/html配置测试网页index.html,内容随意")])]),s._v(" "),n("li",[n("p",[s._v("在/apps/nginx/conf配置nginx.conf")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#user  nobody;")]),s._v("\nworker_processes  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#error_log  logs/error.log;")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#error_log  logs/error.log  notice;")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#error_log  logs/error.log  info;")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#pid        logs/nginx.pid;")]),s._v("\n\n\nevents "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    worker_connections  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\nhttp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    include       mime.types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    default_type  application/octet-stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#                  '$status $body_bytes_sent \"$http_referer\" '")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#                  \'"$http_user_agent" "$http_x_forwarded_for"\';')]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#access_log  logs/access.log  main;")]),s._v("\n\n    sendfile        on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#tcp_nopush     on;")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#keepalive_timeout  0;")]),s._v("\n    keepalive_timeout  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("65")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#gzip  on;")]),s._v("\n\n    server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        listen       "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        server_name  localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#charset koi8-r;")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#access_log  logs/host.access.log  main;")]),s._v("\n\n        location / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            root   html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            index  index.html index.htm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#error_page  404              /404.html;")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redirect server error pages to the static page /50x.html")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n        error_page   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("502")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("503")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("504")]),s._v("  /50x.html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        location "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" /50x.html "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            root   html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# proxy the PHP scripts to Apache listening on 127.0.0.1:80")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#location ~ \\.php$ {")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    proxy_pass   http://127.0.0.1;")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#location ~ \\.php$ {")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    root           html;")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    fastcgi_pass   127.0.0.1:9000;")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    fastcgi_index  index.php;")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    include        fastcgi_params;")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# deny access to .htaccess files, if Apache's document root")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# concurs with nginx's one")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#location ~ /\\.ht {")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    deny  all;")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# another virtual host using mix of IP-, name-, and port-based configuration")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#server {")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    listen       8000;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    listen       somename:8080;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    server_name  somename  alias  another.alias;")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    location / {")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        root   html;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        index  index.html index.htm;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    }")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#}")]),s._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# HTTPS server")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#server {")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    listen       443 ssl;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    server_name  localhost;")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    ssl_certificate      cert.pem;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    ssl_certificate_key  cert.key;")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    ssl_session_cache    shared:SSL:1m;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    ssl_session_timeout  5m;")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    ssl_ciphers  HIGH:!aNULL:!MD5;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    ssl_prefer_server_ciphers  on;")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    location / {")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        root   html;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        index  index.html index.htm;")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    }")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("启动nginx")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker run -d -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 -v /apps/nginx/html:/etc/nginx/html:ro -v /apps/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro nginx:1.19.1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])]),s._v(" "),n("h2",{attrs:{id:"mysql安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql安装"}},[s._v("#")]),s._v(" MySQL安装")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("拉取mysql镜像")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker pull mysql:5.7.31\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("启动mysql")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("docker run -d -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v(" -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v(":3306 -v /apps/mysql/conf:/etc/mysql/conf.d -v /apps/mysql/data:/var/lib/mysql mysql:5.7.31 --character-set-server"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8mb4 --collation-server"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8mb4_unicode_ci\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);