(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{534:function(n,t,e){"use strict";e.r(t);var s=e(27),o=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"linux磁盘管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux磁盘管理"}},[n._v("#")]),n._v(" Linux磁盘管理")]),n._v(" "),e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[n._v("#")]),n._v(" 介绍")]),n._v(" "),e("p",[n._v("[TOC]")]),n._v(" "),e("p",[e("strong",[n._v("环境：CentOS7")])]),n._v(" "),e("p",[n._v("Linux磁盘管理好坏直接关系到整个系统的性能问题。\nLinux磁盘管理常用三个命令为df、du和fdisk。\n• df：列出文件系统的整体磁盘使用量\n• du：检查磁盘空间使用量\n• fdisk：用于磁盘分区")]),n._v(" "),e("p",[n._v("一、df命令")]),n._v(" "),e("p",[n._v("df命令参数功能：检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。\n语法：\ndf [-ahikHTm] [目录或文件名]\n选项与参数：\n• -a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；\n• -k ：以 KBytes 的容量显示各文件系统；\n• -m ：以 MBytes 的容量显示各文件系统；\n• -h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；\n• -H ：以 M=1000K 取代 M=1024K 的进位方式；\n• -T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；\n• -i ：不用硬盘容量，而以 inode 的数量来显示\n实例 1\n将系统内所有的文件系统列出来！\n[root@www ~]# df\nFilesystem      1K-blocks      Used Available Use% Mounted on\n/dev/hdc2         9920624   3823112   5585444  41% /\n/dev/hdc3         4956316    141376   4559108   4% /home\n/dev/hdc1          101086     11126     84741  12% /boot\ntmpfs              371332         0    371332   0% /dev/shm\n在 Linux 底下如果 df 没有加任何选项，那么默认会将系统内所有的 (不含特殊内存内的文件系统与 swap) 都以 1 Kbytes 的容量来列出来！\n实例 2\n将容量结果以易读的容量格式显示出来\n[root@www ~]# df -h\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/hdc2             9.5G  3.7G  5.4G  41% /\n/dev/hdc3             4.8G  139M  4.4G   4% /home\n/dev/hdc1              99M   11M   83M  12% /boot\ntmpfs                 363M     0  363M   0% /dev/shm\n实例 3\n将系统内的所有特殊文件格式及名称都列出来\n[root@www ~]# df -aT\nFilesystem    Type 1K-blocks    Used Available Use% Mounted on\n/dev/hdc2     ext3   9920624 3823112   5585444  41% /\nproc          proc         0       0         0   -  /proc\nsysfs        sysfs         0       0         0   -  /sys\ndevpts      devpts         0       0         0   -  /dev/pts\n/dev/hdc3     ext3   4956316  141376   4559108   4% /home\n/dev/hdc1     ext3    101086   11126     84741  12% /boot\ntmpfs        tmpfs    371332       0    371332   0% /dev/shm\nnone   binfmt_misc         0       0         0   -  /proc/sys/fs/binfmt_misc\nsunrpc  rpc_pipefs         0       0         0   -  /var/lib/nfs/rpc_pipefs\n实例 4\n将 /etc 底下的可用的磁盘容量以易读的容量格式显示\n[root@www ~]# df -h /etc\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/hdc2             9.5G  3.7G  5.4G  41% /")]),n._v(" "),e("p",[n._v("二、du命令")]),n._v(" "),e("p",[n._v("Linux du命令也是查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的，这里介绍Linux du命令。\n语法：\ndu [-ahskm] 文件或目录名称\n选项与参数：\n• -a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。\n• -h ：以人们较易读的容量格式 (G/M) 显示；\n• -s ：列出总量而已，而不列出每个各别的目录占用容量；\n• -S ：不包括子目录下的总计，与 -s 有点差别。\n• -k ：以 KBytes 列出容量显示；\n• -m ：以 MBytes 列出容量显示；\n实例 1\n列出目前目录下的所有文件容量\n[root@www ~]# du\n8       ./test4     <==每个目录都会列出来\n8       ./test2\n....中间省略....\n12      ./.gconfd   <==包括隐藏文件的目录\n220     .           <==这个目录(.)所占用的总量\n直接输入 du 没有加任何选项时，则 du 会分析当前所在目录的文件与目录所占用的硬盘空间。\n实例 2\n将文件的容量也列出来\n[root@www ~]# du -a\n12      ./install.log.syslog   <==有文件的列表了\n8       ./.bash_logout\n8       ./test4\n8       ./test2\n....中间省略....\n12      ./.gconfd\n220     .\n实例 3\n检查根目录底下每个目录所占用的容量\n[root@www ~]# du -sm /*\n7       /bin\n6       /boot\n.....中间省略....\n0       /proc\n.....中间省略....\n1       /tmp\n3859    /usr     <==系统初期最大就是他了啦！\n77      /var\n通配符 * 来代表每个目录。\n与 df 不一样的是，du 这个命令其实会直接到文件系统内去搜寻所有的文件数据。\n实例 4\n 查看当前文件夹下所有文件大小（包括子文件夹）\ndu -sh\n \n# du -h\n15M   ./package\n16K   ./.fontconfig\n4.0K  ./.cache\n5.1M  ./.rpmdb\n20M   .\n实例 5\n查看指定文件夹下所有文件大小（包括子文件夹）\n# du -h ftp\n3.8G  ftp/sanya/doc\n3.8G  ftp/sanya\n4.0K  ftp/testftp/doc\n1.4M  ftp/testftp\n875M  ftp/platform/doc/002-录像\n27M   ftp/platform/doc/001-PDF\n5.2M  ftp/platform/doc/BBFlash\n1.2G  ftp/platform/doc/003-录音\n2.1G  ftp/platform/doc\n2.1G  ftp/platform\n4.0K  ftp/pmo/doc\n20K   ftp/pmo\n36M   ftp/uf/doc/innovate-201207\n36M   ftp/uf/doc\n36M   ftp/uf\n446M  ftp/code/doc\n446M  ftp/code\n6.3G  ftp\n实例 6\n查看指定文件大小\n# du -h ./package/compat-libstdc++-33-3.2.3-69.el6.x86_64.rpm\n184K  ./package/compat-libstdc++-33-3.2.3-69.el6.x86_64.rpm\n实例 7\n查看指定文件夹大小\n# du -hs ftp\n6.3G  ftp")]),n._v(" "),e("p",[n._v("三、fdisk命令")]),n._v(" "),e("p",[n._v("fdisk 是 Linux 的磁盘分区表操作工具。\n语法：\nfdisk [-l] 装置名称\n选项与参数：\n• -l ：输出后面接的装置所有的分区内容。若仅有 fdisk -l 时， 则系统将会把整个系统内能够搜寻到的装置的分区均列出来。\nfdisk可以用m命令来看fdisk命令的内部命令；\na：命令指定启动分区；\nd：命令删除一个存在的分区；\nl：命令显示分区ID号的列表；\nm：查看fdisk命令帮助；\nn：命令创建一个新分区；\np：命令显示分区列表；\nt：命令修改分区的类型ID号；\nw：命令是将对分区表的修改存盘让它发生作用。\n实例 1\n列出所有分区信息\n[root@AY120919111755c246621 tmp]# fdisk -l\nDisk /dev/xvda: 21.5 GB, 21474836480 bytes\n255 heads, 63 sectors/track, 2610 cylinders\nUnits = cylinders of 16065 * 512 = 8225280 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk identifier: 0x00000000\nDevice Boot      Start         End      Blocks   Id  System\n/dev/xvda1   *           1        2550    20480000   83  Linux\n/dev/xvda2            2550        2611      490496   82  Linux swap / Solaris\nDisk /dev/xvdb: 21.5 GB, 21474836480 bytes\n255 heads, 63 sectors/track, 2610 cylinders\nUnits = cylinders of 16065 * 512 = 8225280 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk identifier: 0x56f40944\nDevice Boot      Start         End      Blocks   Id  System\n/dev/xvdb2               1        2610    20964793+  83  Linux\n实例 2\n找出你系统中的根目录所在磁盘，并查阅该硬盘内的相关信息\n[root@www ~]# df /            <==注意：重点在找出磁盘文件名而已\nFilesystem           1K-blocks      Used Available Use% Mounted on\n/dev/hdc2              9920624   3823168   5585388  41% /\n[root@www ~]# fdisk /dev/hdc  <==仔细看，不要加上数字喔！\nThe number of cylinders for this disk is set to 5005.\nThere is nothing wrong with that, but this is larger than 1024,\nand could in certain setups cause problems with:")]),n._v(" "),e("ol",[e("li",[n._v("software that runs at boot time (e.g., old versions of LILO)")]),n._v(" "),e("li",[n._v("booting and partitioning software from other OSs\n(e.g., DOS FDISK, OS/2 FDISK)\nCommand (m for help):     <==等待你的输入！\n输入 m 后，就会看到底下这些命令介绍\nCommand (m for help): m   <== 输入 m 后，就会看到底下这些命令介绍\nCommand action\na   toggle a bootable flag\nb   edit bsd disklabel\nc   toggle the dos compatibility flag\nd   delete a partition            <==删除一个partition\nl   list known partition types\nm   print this menu\nn   add a new partition           <==新增一个partition\no   create a new empty DOS partition table\np   print the partition table     <==在屏幕上显示分割表\nq   quit without saving changes   <==不储存离开fdisk程序\ns   create a new empty Sun disklabel\nt   change a partition's system id\nu   change display/entry units\nv   verify the partition table\nw   write table to disk and exit  <==将刚刚的动作写入分割表\nx   extra functionality (experts only)\n离开 fdisk 时按下 q，那么所有的动作都不会生效！相反的， 按下w就是动作生效的意思。\nCommand (m for help): p  <== 这里可以输出目前磁盘的状态\nDisk /dev/hdc: 41.1 GB, 41174138880 bytes        <==这个磁盘的文件名与容量\n255 heads, 63 sectors/track, 5005 cylinders      <==磁头、扇区与磁柱大小\nUnits = cylinders of 16065 * 512 = 8225280 bytes <==每个磁柱的大小\nDevice Boot      Start         End      Blocks   Id  System\n/dev/hdc1   *           1          13      104391   83  Linux\n/dev/hdc2              14        1288    10241437+  83  Linux\n/dev/hdc3            1289        1925     5116702+  83  Linux\n/dev/hdc4            1926        5005    24740100    5  Extended\n/dev/hdc5            1926        2052     1020096   82  Linux swap / Solaris")])]),n._v(" "),e("h1",{attrs:{id:"装置文件名-启动区否-开始磁柱-结束磁柱-1k大小容量-磁盘分区槽内的系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#装置文件名-启动区否-开始磁柱-结束磁柱-1k大小容量-磁盘分区槽内的系统"}},[n._v("#")]),n._v(" 装置文件名 启动区否 开始磁柱    结束磁柱  1K大小容量 磁盘分区槽内的系统")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("Command (m for help): q\n")])])]),e("p",[n._v("想要不储存离开吗？按下 q 就对了！不要随便按 w 啊！\n使用 p 可以列出目前这颗磁盘的分割表信息，这个信息的上半部在显示整体磁盘的状态。")]),n._v(" "),e("p",[n._v("四、磁盘格式化")]),n._v(" "),e("p",[n._v("磁盘分割完毕后自然就是要进行文件系统的格式化，格式化的命令非常的简单，使用 mkfs（make filesystem） 命令。\n语法：\nmkfs [-t 文件系统格式] 装置文件名\n选项与参数：\n• -t ：可以接文件系统格式，例如 ext3, ext2, vfat 等(系统有支持才会生效)\n实例 1\n查看 mkfs 支持的文件格式\n[root@www ~]# mkfs[tab][tab]\nmkfs         mkfs.cramfs  mkfs.ext2    mkfs.ext3    mkfs.msdos   mkfs.vfat\n按下两个[tab]，会发现 mkfs 支持的文件格式如上所示。\n实例 2\n将分区 /dev/hdc6（可指定你自己的分区） 格式化为 ext3 文件系统：\n[root@www ~]# mkfs -t ext3 /dev/hdc6\nmke2fs 1.39 (29-May-2006)\nFilesystem label=                <==这里指的是分割槽的名称(label)\nOS type: Linux\nBlock size=4096 (log=2)          <==block 的大小配置为 4K\nFragment size=4096 (log=2)\n251392 inodes, 502023 blocks     <==由此配置决定的inode/block数量\n25101 blocks (5.00%) reserved for the super user\nFirst data block=0\nMaximum filesystem blocks=515899392\n16 block groups\n32768 blocks per group, 32768 fragments per group\n15712 inodes per group\nSuperblock backups stored on blocks:\n32768, 98304, 163840, 229376, 294912\nWriting inode tables: done\nCreating journal (8192 blocks): done <==有日志记录\nWriting superblocks and filesystem accounting information: done\nThis filesystem will be automatically checked every 34 mounts or\n180 days, whichever comes first.  Use tune2fs -c or -i to override.")]),n._v(" "),e("h1",{attrs:{id:"这样就创建起来我们所需要的-ext3-文件系统了-简单明了"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#这样就创建起来我们所需要的-ext3-文件系统了-简单明了"}},[n._v("#")]),n._v(" 这样就创建起来我们所需要的 Ext3 文件系统了！简单明了！")]),n._v(" "),e("p",[n._v("五、磁盘检验")]),n._v(" "),e("p",[n._v("fsck（file system check）用来检查和维护不一致的文件系统。\n若系统掉电或磁盘发生问题，可利用fsck命令对文件系统进行检查。\n语法：\nfsck [-t 文件系统] [-ACay] 装置名称\n选项与参数：\n• -t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数\n• -s : 依序一个一个地执行 fsck 的指令来检查\n• -A : 对/etc/fstab 中所有列出来的 分区（partition）做检查\n• -C : 显示完整的检查进度\n• -d : 打印出 e2fsck 的 debug 结果\n• -p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行\n• -R : 同时有 -A 条件时，省略 / 不检查\n• -V : 详细显示模式\n• -a : 如果检查有错则自动修复\n• -r : 如果检查有错则由使用者回答是否修复\n• -y : 选项指定检测每个文件是自动输入yes，在不确定那些是不正常的时候，可以执行 # fsck -y 全部检查修复。\n实例 1\n查看系统有多少文件系统支持的 fsck 命令：\n[root@www ~]# fsck[tab][tab]\nfsck         fsck.cramfs  fsck.ext2    fsck.ext3    fsck.msdos   fsck.vfat\n实例 2\n强制检测 /dev/hdc6 分区:\n[root@www ~]# fsck -C -f -t ext3 /dev/hdc6\nfsck 1.39 (29-May-2006)\ne2fsck 1.39 (29-May-2006)\nPass 1: Checking inodes, blocks, and sizes\nPass 2: Checking directory structure\nPass 3: Checking directory connectivity\nPass 4: Checking reference counts\nPass 5: Checking group summary information\nvbird_logical: 11/251968 files (9.1% non-contiguous), 36926/1004046 blocks\n如果没有加上 -f 的选项，则由于这个文件系统不曾出现问题，检查的经过非常快速！若加上 -f 强制检查，才会一项一项的显示过程。")]),n._v(" "),e("p",[n._v("六、磁盘挂载与卸除")]),n._v(" "),e("p",[n._v("Linux 的磁盘挂载使用 mount 命令，卸载使用 umount 命令。\n磁盘挂载语法：\nmount [-t 文件系统] [-L Label名] [-o 额外选项] [-n]  装置文件名  挂载点\n实例 1\n用默认的方式，将刚刚创建的 /dev/hdc6 挂载到 /mnt/hdc6 上面！\n[root@www ~]# mkdir /dev/hdc6\n[root@www ~]# mount /dev/hdc6 /mnt/hdc6\n[root@www ~]# df\nFilesystem           1K-blocks      Used Available Use% Mounted on\n.....中间省略.....\n/dev/hdc6              1976312     42072   1833836   3% /mnt/hdc6\n磁盘卸载命令 umount 语法：\numount [-fn] 装置文件名或挂载点\n选项与参数：\n• -f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下；\n• -n ：不升级 /etc/mtab 情况下卸除。\n卸载/dev/hdc6\n[root@www ~]# umount /dev/hdc6")]),n._v(" "),e("p",[n._v("七、磁盘分区挂载实例")]),n._v(" "),e("p",[n._v("1、磁盘分区\n执行fdisk -l 命令，发现多了一个/dev/hdb 设备")]),n._v(" "),e("p",[n._v("执行fdisk /dev/sdb 命令，根据提示对磁盘进行分区。注意：下边操作提示的红色字体表示输入的指令\n1> 命令(输入 m 获取帮助)： m\n2> 添加新的分区\n命令(输入 m 获取帮助)：n\n3> 选择分区类型\nPartition type: \np primary (0 primary, 0 extended, 4 free) \ne extended \nSelect (default p): e \n输入e表示创建扩展分区\n4> 分区数量\n分区号 (1-4，默认 1)：1\n5> 设置扇区\n起始 扇区 (2048-83886079，默认为 2048)：回车 \nLast 扇区, +扇区 or +size{K,M,G} (2048-83886079，默认为 83886079)：回车\n6> 保存\n命令(输入 m 获取帮助)：w")]),n._v(" "),e("p",[n._v("完整操作流程如下图所示：")]),n._v(" "),e("p",[n._v("2、格式化分区\nmkfs -t ext3 /dev/sdb")]),n._v(" "),e("p",[n._v("3、挂载磁盘\nmount /dev/sdb /apps\n这种方式只临时挂载到/opt目录下，下次开机时不会自动挂载 \n注意：挂载后/apps目录下的文件会被临时删除，注意备份\n4、开机自动挂载\n编辑/etc/fstab文件，在文件中添加如下内容：\n/dev/sdb /apps ext3 defaults 1 1")])])}),[],!1,null,null,null);t.default=o.exports}}]);