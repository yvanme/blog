(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{493:function(t,s,e){"use strict";e.r(s);var n=e(44),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Harbor安装")]),t._v(" "),e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("p",[t._v("[TOC]")]),t._v(" "),e("p",[e("strong",[t._v("主机配置:")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("主机名")]),t._v(" "),e("th",[t._v("IP地址")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("worker")]),t._v(" "),e("td",[t._v("192.168.153.100")])])])]),t._v(" "),e("p",[e("strong",[t._v("系统：CentOS7")])]),t._v(" "),e("p",[e("strong",[t._v("harbor版本：1.9.3")])]),t._v(" "),e("p",[e("strong",[t._v("docker版本：19.03.5")])]),t._v(" "),e("p",[e("strong",[t._v("docker-compose版本：1.25.0")])]),t._v(" "),e("p",[e("strong",[t._v("1. harbor安装")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("从官网下载指定版本安装包，并上传到指定目录")])]),t._v(" "),e("li",[e("p",[t._v("解压安装包")])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zvxf harbor-offline-installer-v1.9.3.tgz\n")])])]),e("ul",[e("li",[t._v("配置harbor.yml")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configuration file of Harbor")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The IP address or hostname to access admin UI and registry service.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置主机名")]),t._v("\nhostname: worker\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http related config")]),t._v("\nhttp:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# port for http, default is 80. If https enabled, this port will redirect to https port")]),t._v("\n  port: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https related config")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # https port for harbor, default is 443")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   port: 443")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # The path of cert and key files for nginx")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   certificate: /your/certificate/path")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   private_key: /your/private/key/path")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment external_url if you want to enable external proxy")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# And when it enabled the hostname will no longer used")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# external_url: https://reg.mydomain.com:8433")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The initial password of Harbor admin")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It only works in first time to install harbor")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remember Change the admin password from UI after launching Harbor.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置登录密码")]),t._v("\nharbor_admin_password: Worker@1234\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Harbor DB configuration")]),t._v("\ndatabase:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The password for the root user of Harbor DB. Change this before any production use.")]),t._v("\n  password: root123\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The maximum number of connections in the idle connection pool. If it <=0, no idle connections are retained.")]),t._v("\n  max_idle_conns: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The maximum number of open connections to the database. If it <= 0, then there is no limit on the number of open connections.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note: the default number of connections is 100 for postgres.")]),t._v("\n  max_open_conns: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default data volume")]),t._v("\ndata_volume: /data\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Harbor Storage settings by default is using /data dir on local filesystem")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment storage_service setting If you want to using external storage")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# storage_service:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ca_bundle:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   filesystem:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     maxthreads: 100")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # set disable to true when you want to disable registry redirect")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   redirect:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     disabled: false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Clair configuration")]),t._v("\nclair:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The interval of clair updaters, the unit is hour, set to 0 to disable the updaters.")]),t._v("\n  updaters_interval: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n\njobservice:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum number of job workers in job service")]),t._v("\n  max_job_workers: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\nnotification:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum retry count for webhook job")]),t._v("\n  webhook_job_max_retry: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n\nchart:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Change the value of absolute_url to enabled can enable absolute url in chart")]),t._v("\n  absolute_url: disabled\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Log configurations")]),t._v("\nlog:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# options are debug, info, warning, error, fatal")]),t._v("\n  level: info\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# configs for logs in local storage")]),t._v("\n  local:\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Log files are rotated log_rotate_count times before being removed. If count is 0, old versions are removed rather than rotated.")]),t._v("\n    rotate_count: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Log files are rotated only if they grow bigger than log_rotate_size bytes. If size is followed by k, the size is assumed to be in kilobytes.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the M is used, the size is in megabytes, and if G is used, the size is in gigabytes. So size 100, size 100k, size 100M and size 100G")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# are all valid.")]),t._v("\n    rotate_size: 200M\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The directory on your host that store log")]),t._v("\n    location: /var/log/harbor\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment following lines to enable external syslog endpoint.")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# external_endpoint:")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # protocol used to transmit log to external endpoint, options is tcp or udp")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   protocol: tcp")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # The host of external endpoint")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   host: localhost")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # Port of external endpoint")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   port: 5140")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!")]),t._v("\n_version: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.9")]),t._v(".0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment external_database if using external database.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# external_database:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   harbor:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: harbor_db_host")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: harbor_db_port")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     db_name: harbor_db_name")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     username: harbor_db_username")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: harbor_db_password")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ssl_mode: disable")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     max_idle_conns: 2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     max_open_conns: 0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   clair:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: clair_db_host")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: clair_db_port")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     db_name: clair_db_name")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     username: clair_db_username")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: clair_db_password")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ssl_mode: disable")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   notary_signer:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: notary_signer_db_host")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: notary_signer_db_port")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     db_name: notary_signer_db_name")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     username: notary_signer_db_username")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: notary_signer_db_password")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ssl_mode: disable")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   notary_server:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     host: notary_server_db_host")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     port: notary_server_db_port")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     db_name: notary_server_db_name")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     username: notary_server_db_username")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     password: notary_server_db_password")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ssl_mode: disable")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment external_redis if using external Redis server")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# external_redis:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   host: redis")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   port: 6379")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   password:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   # db_index 0 is for core, it's unchangeable")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   registry_db_index: 1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   jobservice_db_index: 2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   chartmuseum_db_index: 3")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uaa:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   ca_file: /path/to/ca")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Global proxy")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Config http proxy for components, e.g. http://my.proxy.com:3128")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Components doesn't need to connect to each others via http proxy.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remove component from `components` array if want disable proxy")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for it. If you want use proxy for replication, MUST enable proxy")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for core and jobservice, and set `http_proxy` and `https_proxy`.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add domain to the `no_proxy` field, when you want disable proxy")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for some special registry.")]),t._v("\nproxy:\n  http_proxy:\n  https_proxy:\n  no_proxy: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1,localhost,.local,.internal,log,db,redis,nginx,core,portal,postgresql,jobservice,registry,registryctl,clair\n  components:\n    - core\n    - jobservice\n    - clair\n\n")])])]),e("ul",[e("li",[t._v("执行install.sh脚本")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("./install.sh\n")])])]),e("ul",[e("li",[t._v("访问harbor")])]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("http:")]),t._v("//192.168.153.128/\n")])])]),e("ul",[e("li",[t._v("停止harbor")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker-compose down -v\n")])])]),e("ul",[e("li",[t._v("启动harbor")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker-compose up -d\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("问题解决")]),t._v(" "),e("p",[t._v("docker login 报错：")]),t._v(" "),e("p",[t._v("Error response from daemon: Get https://192.168.153.130/v2/: dial tcp 192.168.153.130:443: connect: connection refused")]),t._v(" "),e("p",[t._v("问题说明：")]),t._v(" "),e("p",[t._v("这里说拒绝连接，因为我是用http部署的harbor，这里是https://进行访问的，所有出现报错")]),t._v(" "),e("p",[t._v("然后解决这个问题其实就在/etc/docker/daemon.json文件下,添加对私有仓库的认证就可以登录了")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"registry-mirrors"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://f1361db2.m.daocloud.io"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://docker.mirrors.ustc.edu.cn"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://hub-mirror.c.163.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://kfwkfulq.mirror.aliyuncs.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://2lqq34jg.mirror.aliyuncs.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://pee6w651.mirror.aliyuncs.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://registry.docker-cn.com"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"insecure-registries"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.sunrat.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);