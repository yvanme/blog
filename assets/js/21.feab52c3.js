(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{379:function(e,s,t){"use strict";t.r(s);var a=t(44),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"kafka安装-集群版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kafka安装-集群版"}},[e._v("#")]),e._v(" Kafka安装（集群版）")]),e._v(" "),t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),t("p",[e._v("[TOC]")]),e._v(" "),t("p",[t("strong",[e._v("环境：CentOS7、kafka_2.12-2.3.0版本")])]),e._v(" "),t("p",[t("strong",[e._v("主机配置:")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("主机名")]),e._v(" "),t("th",[e._v("IP地址")]),e._v(" "),t("th",[e._v("JDK")]),e._v(" "),t("th",[e._v("Hadoop")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("master")]),e._v(" "),t("td",[e._v("192.168.153.130")]),e._v(" "),t("td",[e._v("1.8.0_201")]),e._v(" "),t("td",[e._v("server.1")])]),e._v(" "),t("tr",[t("td",[e._v("slave1")]),e._v(" "),t("td",[e._v("192.168.153.131")]),e._v(" "),t("td",[e._v("1.8.0_201")]),e._v(" "),t("td",[e._v("server.2")])]),e._v(" "),t("tr",[t("td",[e._v("slave2")]),e._v(" "),t("td",[e._v("192.168.153.132")]),e._v(" "),t("td",[e._v("1.8.0_201")]),e._v(" "),t("td",[e._v("server.3")])])])]),e._v(" "),t("p",[t("strong",[e._v("安装目录：/apps/kafka_2.12-2.3.0")])]),e._v(" "),t("p",[t("strong",[e._v("备注：kafka依赖zookeeper，因此在安装kafka之前需要安装好zookeeper环境")])]),e._v(" "),t("p",[e._v("​      "),t("strong",[e._v("1.集群安装规划")])]),e._v(" "),t("p",[e._v("​      "),t("strong",[e._v("1.1")]),e._v(" "),t("strong",[e._v("软件规划")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("软件")]),e._v(" "),t("th",[e._v("版本")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("Jdk")]),e._v(" "),t("td",[e._v("Jdk1.8")])]),e._v(" "),t("tr",[t("td",[e._v("CentOS")]),e._v(" "),t("td",[e._v("CentOS7")])]),e._v(" "),t("tr",[t("td",[e._v("Zookeeper")]),e._v(" "),t("td",[e._v("Zookeeper3.4.14")])]),e._v(" "),t("tr",[t("td",[e._v("kafka")]),e._v(" "),t("td",[e._v("kafka_2.12-2.3.0")])])])]),e._v(" "),t("p",[t("strong",[e._v("1.2数据目录规划")])]),e._v(" "),t("p",[e._v("​      在搭建Hadoop集群之前，需要规划好所有的软件目录和数据存放目录，便于后期的管理与维护。")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("目录名称")]),e._v(" "),t("th",[e._v("绝对路径")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("所有软件存放目录")]),e._v(" "),t("td",[e._v("/apps/app")])]),e._v(" "),t("tr",[t("td",[e._v("所有数据与日志存放目录")]),e._v(" "),t("td",[e._v("/apps/data")])])])]),e._v(" "),t("p",[e._v("​\t"),t("strong",[e._v("2. 集群安装")])]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("配置主机名（永久修改主机名）")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("hostnamectl --static set-hostname <host-name>\n")])])]),t("ul",[t("li",[t("strong",[e._v("修改/etc/hosts,加入以下配置，使节点之间可以通过主机名访问")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("192.168.153.130 master\n192.168.153.131 slave1\n192.168.153.132 slave2\n")])])]),t("ul",[t("li",[t("p",[t("strong",[e._v("关闭防火墙")])]),e._v(" "),t("p",[e._v("查看防火墙状态")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl status firewalld \n")])])]),t("p",[e._v("临时关闭防火墙")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl stop firewalld\n")])])]),t("p",[e._v("永久关闭防火墙(需要重启才能生效)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl disable firewalld\n")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("关闭selinux")]),e._v("\nselinux是Linux一个子安全机制，学习环境可以将它禁用")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vim /etc/sysconfig/selinux\n")])])]),t("p",[e._v("把SELINUX设置成disabled")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELINUX=disabled\n")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("设置节点间免密登陆")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("在jmaster上生成公钥私钥")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("ssh-keygen\n")])])])]),e._v(" "),t("li",[t("p",[e._v("查看公钥私钥")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("ll -a\n")])])])]),e._v(" "),t("li",[t("p",[e._v("将公钥拷贝到slave1,slave2节点")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("ssh-copy-id root@slave1\nssh-copy-id root@slave2\n")])])])]),e._v(" "),t("li",[t("p",[e._v("其他两台机器重复此步骤")])]),e._v(" "),t("li",[t("p",[e._v("在slave1上免密登陆slave2")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" root@slave2\n")])])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("配置脚本工具")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("deploy.conf")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("#规划集群角色\nmaster,all,namenode,zookeeper,resourcemanager,\nslave1,all,slave,namenode,zookeeper,resourcemanager,\nslave2,all,slave,datanode,zookeeper,\n")])])])]),e._v(" "),t("li",[t("p",[e._v("deploy.sh")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[e._v("#!/bin/bash")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#set -x")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$#")]),e._v(" -lt "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Usage: ./deply.sh srcFile(or Dir) descFile(or Dir) MachineTag"')]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Usage: ./deply.sh srcFile(or Dir) descFile(or Dir) MachineTag confFile"')]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("src")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("dest")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$2")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("tag")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$3")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'a'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$4")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'a'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'aa'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("confFile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/deploy.conf\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("confFile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$4")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" -f "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$confFile")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" -f "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$src")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[e._v("server")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" $confFile"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'^#'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),e._v("$tag"),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" -F"),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'{print $1}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("scp")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$src")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$server")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('":"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${dest}")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("elif")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" -d "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$src")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[e._v("server")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" $confFile"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'^#'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),e._v("$tag"),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" -F"),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'{print $1}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("scp")]),e._v(" -r "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$src")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$server")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('":"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${dest}")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Error: No source file exist"')]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Error: Please assign config file or run deploy.sh command with deploy.conf in same directory"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])])]),e._v(" "),t("li",[t("p",[e._v("runRemoteCmd.sh")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[e._v("#!/bin/bash")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#set -x")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$#")]),e._v(" -lt "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Usage: ./runRemoteCmd.sh Command MachineTag"')]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Usage: ./runRemoteCmd.sh Command MachineTag confFile"')]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("cmd")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$1")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("tag")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$2")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'a'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$3")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'a'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'aa'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("confFile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/deploy.conf\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("confFile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$3")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" -f "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$confFile")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[e._v("server")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" $confFile"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'^#'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),e._v("$tag"),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" -F"),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("','")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'{print $1}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n       "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*******************'),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$server")]),e._v('***************************"')]),e._v("\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$server")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"source /etc/profile; '),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$cmd")]),e._v('"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("done")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Error: Please assign config file or run deploy.sh command with deploy.conf in same directory"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])])]),e._v(" "),t("li",[t("p",[e._v("给脚本添加执行权限")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" chmod u+x deploy.sh\n chmod u+x runRemoteCmd.sh\n")])])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("安装jdk1.8")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("使用解压命令解压到当前目录。")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("tar")]),e._v(" zxvf jdk-8u221-linux-x64.tar.gz\n")])])])]),e._v(" "),t("li",[t("p",[e._v("修改etc/profile，在文件结尾追加如下命令：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#java environment")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("JAVA_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/jdk1.8.0_221\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CLASSPATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(".:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/jre/lib/rt.jar:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/lib/dt.jar:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/lib/tools.jar \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/bin\n")])])])]),e._v(" "),t("li",[t("p",[e._v("保存profile，使之生效")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" /etc/profile\n")])])])]),e._v(" "),t("li",[t("p",[e._v("检验是否安装成功")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("java -version\n")])])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("安装Zookeeper")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("将下载的Zookeeper文件上传到CentOS系统中。")])]),e._v(" "),t("li",[t("p",[e._v("解压文件")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("tar -zxvf zookeeper-3.4.14.tar.gz\n")])])]),t("ul",[t("li",[t("p",[e._v("进入到conf目录")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cd zookeeper-3.4.14/conf\n")])])])]),e._v(" "),t("li",[t("p",[e._v("将zoo_sample.cfg拷贝一份为zoo.cfg")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("cp zoo_sample.cfg zoo.cfg\n")])])])]),e._v(" "),t("li",[t("p",[e._v("修改zoo.cfg配置文件")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of milliseconds of each tick")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("tickTime")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2000")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of ticks that the initial ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# synchronization phase can take")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("initLimit")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of ticks that can pass between ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# sending a request and getting an acknowledgement")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("syncLimit")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the directory where the snapshot is stored.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# do not use /tmp for storage, /tmp here is just ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# example sakes.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#数据存放目录")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("dataDir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/tmp/zookeeper\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("dataLogDir")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/tmp/zookeeper/log\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the port at which the clients will connect")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#服务的端口号")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("clientPort")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2181")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the maximum number of client connections.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# increase this if you need to handle more clients")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#maxClientCnxns=60")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Be sure to read the maintenance section of the ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# administrator guide before turning on autopurge.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of snapshots to retain in dataDir")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#autopurge.snapRetainCount=3")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Purge task interval in hours")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# Set to "0" to disable auto purge feature')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#autopurge.purgeInterval=1")]),e._v("\nserver.1"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("master:2888:3888\nserver.2"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("slave1:2888:3888\nserver.3"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("slave2:2888:3888\n\n")])])])]),e._v(" "),t("li",[t("p",[e._v("创建ServerID标识")]),e._v(" "),t("p",[e._v("除了修改zoo.cfg配置文件外,zookeeper集群模式下还要配置一个myid文件,这个文件需要放在dataDir目录下。")]),e._v(" "),t("p",[e._v("这个文件里面有一个数据就是A的值（该A就是zoo.cfg文件中server.A=B:C:D中的A）,在zoo.cfg文件中配置的dataDir路径中创建myid文件。值同时与zoo.cfg文件里面的server.1保持一致，如下")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#192.168.153.130")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /tmp/zookeeper/myid\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#192.168.153.131")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /tmp/zookeeper/myid\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#192.168.153.132")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"3"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" /tmp/zookeeper/myid\n")])])])]),e._v(" "),t("li",[t("p",[e._v("设置环境变量")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#修改/etc/profile文件")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("vi")]),e._v(" /etc/profile\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#加入以下配置")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ZOOKEEPER_INSTALL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/zookeeper-3.4.14\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ZOOKEEPER_INSTALL")]),e._v("/bin\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#使配置生效")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("source")]),e._v(" /etc/profile\n")])])])]),e._v(" "),t("li",[t("p",[e._v("使用runRemoteCmd.sh 脚本，启动所有节点上面的Zookeeper")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('runRemoteCmd.sh "/apps/zookeeper-3.4.14/bin/zkServer.sh start" zookeeper\n')])])])]),e._v(" "),t("li",[t("p",[e._v("查看所有Zookeeper节点状态")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('runRemoteCmd.sh "/apps/zookeeper-3.4.14/bin/zkServer.sh status" zookeeper\n')])])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("集群搭建")])])]),e._v(" "),t("li",[t("p",[e._v("下载解压kafka_2.12-2.3.0")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("tar -zvxf kafka_2.12-2.3.0.tgz\n")])])]),t("ul",[t("li",[t("strong",[e._v("配置server.properties")])])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Licensed to the Apache Software Foundation (ASF) under one or more")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# contributor license agreements.  See the NOTICE file distributed with")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# this work for additional information regarding copyright ownership.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The ASF licenses this file to You under the Apache License, Version 2.0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# (the "License"); you may not use this file except in compliance with')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the License.  You may obtain a copy of the License at")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    http://www.apache.org/licenses/LICENSE-2.0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Unless required by applicable law or agreed to in writing, software")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# distributed under the License is distributed on an "AS IS" BASIS,')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# See the License for the specific language governing permissions and")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# limitations under the License.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# see kafka.server.KafkaConfig for additional details and defaults")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Server Basics #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The id of the broker. This must be set to a unique integer for each broker.")]),e._v("\nbroker.id"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Socket Server Settings #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The address the socket server listens on. It will get the value returned from ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# java.net.InetAddress.getCanonicalHostName() if not configured.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   FORMAT:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     listeners = listener_name://host_name:port")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   EXAMPLE:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     listeners = PLAINTEXT://your.host.name:9092")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#listeners=PLAINTEXT://:9092")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("listeners")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("PLAINTEXT://master:9092\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Hostname and port the broker will advertise to producers and consumers. If not set, ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# it uses the value for "listeners" if configured.  Otherwise, it will use the value')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# returned from java.net.InetAddress.getCanonicalHostName().")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#advertised.listeners=PLAINTEXT://your.host.name:9092")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads that the server uses for receiving requests from the network and sending responses to the network")]),e._v("\nnum.network.threads"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads that the server uses for processing requests, which may include disk I/O")]),e._v("\nnum.io.threads"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The send buffer (SO_SNDBUF) used by the socket server")]),e._v("\nsocket.send.buffer.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("102400")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The receive buffer (SO_RCVBUF) used by the socket server")]),e._v("\nsocket.receive.buffer.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("102400")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum size of a request that the socket server will accept (protection against OOM)")]),e._v("\nsocket.request.max.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("104857600")]),e._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Basics #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A comma separated list of directories under which to store log files")]),e._v("\nlog.dirs"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/kafka_2.12-2.3.0/kafka-logs\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The default number of log partitions per topic. More partitions allow greater")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# parallelism for consumption, but this will also result in more files across")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the brokers.")]),e._v("\nnum.partitions"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This value is recommended to be increased for installations with data dirs located in RAID array.")]),e._v("\nnum.recovery.threads.per.data.dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Internal Topic Settings  #############################")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# For anything other than development testing, a value greater than 1 is recommended for to ensure availability such as 3.")]),e._v("\noffsets.topic.replication.factor"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\ntransaction.state.log.replication.factor"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\ntransaction.state.log.min.isr"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Flush Policy #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Messages are immediately written to the filesystem but by default we only fsync() to sync")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the OS cache lazily. The following configurations control the flush of data to disk.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# There are a few important trade-offs here:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    1. Durability: Unflushed data may be lost if you are not using replication.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The settings below allow one to configure the flush policy to flush data after a period of time or")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# every N messages (or both). This can be done globally and overridden on a per-topic basis.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of messages to accept before forcing a flush of data to disk")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.flush.interval.messages=10000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum amount of time a message can sit in a log before we force a flush")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.flush.interval.ms=1000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Retention Policy #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The following configurations control the disposal of log segments. The policy can")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# be set to delete segments after a period of time, or after a given size has accumulated.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# from the end of the log.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The minimum age of a log file to be eligible for deletion due to age")]),e._v("\nlog.retention.hours"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("168")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A size-based retention policy for logs. Segments are pruned from the log unless the remaining")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# segments drop below log.retention.bytes. Functions independently of log.retention.hours.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.retention.bytes=1073741824")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum size of a log segment file. When this size is reached a new log segment will be created.")]),e._v("\nlog.segment.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1073741824")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The interval at which log segments are checked to see if they can be deleted according")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# to the retention policies")]),e._v("\nlog.retention.check.interval.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("300000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Zookeeper #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Zookeeper connection string (see zookeeper docs for details).")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This is a comma separated host:port pairs, each corresponding to a zk")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# You can also append an optional chroot string to the urls to specify the")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# root directory for all kafka znodes.")]),e._v("\nzookeeper.connect"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("master:2181,slave1:2181,slave2:2181\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Timeout in ms for connecting to zookeeper")]),e._v("\nzookeeper.connection.timeout.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("6000")]),e._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Group Coordinator Settings #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The following configuration specifies the time, in milliseconds, that the GroupCoordinator will delay the initial consumer rebalance.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The rebalance will be further delayed by the value of group.initial.rebalance.delay.ms as new members join the group, up to a maximum of max.poll.interval.ms.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The default value for this is 3 seconds.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# We override this to 0 here as it makes for a better out-of-the-box experience for development and testing.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# However, in production environments the default value of 3 seconds is more suitable as this will help to avoid unnecessary, and potentially expensive, rebalances during application startup.")]),e._v("\ngroup.initial.rebalance.delay.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n")])])]),t("ul",[t("li",[t("strong",[e._v("将kafka安装包分发到其他节点")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("deploy.sh /apps/kafka_2.12-2.3.0 /apps/ slave\n")])])]),t("ul",[t("li",[t("strong",[e._v("配置hadoop3环境变量，并使用source /etc/profile 使之生效")])])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#java environment")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("JAVA_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/jdk1.8.0_221\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CLASSPATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(".:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/jre/lib/rt.jar:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/lib/dt.jar:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/lib/tools.jar \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$JAVA_HOME")]),e._v("/bin\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ZOOKEEPER_INSTALL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/zookeeper-3.4.14\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ZOOKEEPER_INSTALL")]),e._v("/bin\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("HADOOP_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/hadoop-3.1.2\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$HADOOP_HOME")]),e._v("/bin\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#kafka ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("KAFKA_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/kafka_2.12-2.3.0\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${KAFKA_HOME}")]),e._v("/bin\n\n")])])]),t("ul",[t("li",[t("strong",[e._v("配置slave1 server.properties")])])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Licensed to the Apache Software Foundation (ASF) under one or more")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# contributor license agreements.  See the NOTICE file distributed with")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# this work for additional information regarding copyright ownership.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The ASF licenses this file to You under the Apache License, Version 2.0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# (the "License"); you may not use this file except in compliance with')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the License.  You may obtain a copy of the License at")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    http://www.apache.org/licenses/LICENSE-2.0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Unless required by applicable law or agreed to in writing, software")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# distributed under the License is distributed on an "AS IS" BASIS,')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# See the License for the specific language governing permissions and")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# limitations under the License.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# see kafka.server.KafkaConfig for additional details and defaults")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Server Basics #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The id of the broker. This must be set to a unique integer for each broker.")]),e._v("\nbroker.id"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Socket Server Settings #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The address the socket server listens on. It will get the value returned from ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# java.net.InetAddress.getCanonicalHostName() if not configured.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   FORMAT:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     listeners = listener_name://host_name:port")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   EXAMPLE:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     listeners = PLAINTEXT://your.host.name:9092")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#listeners=PLAINTEXT://:9092")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("listeners")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("PLAINTEXT://slava1:9092\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Hostname and port the broker will advertise to producers and consumers. If not set, ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# it uses the value for "listeners" if configured.  Otherwise, it will use the value')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# returned from java.net.InetAddress.getCanonicalHostName().")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#advertised.listeners=PLAINTEXT://your.host.name:9092")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads that the server uses for receiving requests from the network and sending responses to the network")]),e._v("\nnum.network.threads"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads that the server uses for processing requests, which may include disk I/O")]),e._v("\nnum.io.threads"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The send buffer (SO_SNDBUF) used by the socket server")]),e._v("\nsocket.send.buffer.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("102400")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The receive buffer (SO_RCVBUF) used by the socket server")]),e._v("\nsocket.receive.buffer.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("102400")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum size of a request that the socket server will accept (protection against OOM)")]),e._v("\nsocket.request.max.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("104857600")]),e._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Basics #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A comma separated list of directories under which to store log files")]),e._v("\nlog.dirs"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/kafka_2.12-2.3.0/kafka-logs\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The default number of log partitions per topic. More partitions allow greater")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# parallelism for consumption, but this will also result in more files across")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the brokers.")]),e._v("\nnum.partitions"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This value is recommended to be increased for installations with data dirs located in RAID array.")]),e._v("\nnum.recovery.threads.per.data.dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Internal Topic Settings  #############################")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# For anything other than development testing, a value greater than 1 is recommended for to ensure availability such as 3.")]),e._v("\noffsets.topic.replication.factor"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\ntransaction.state.log.replication.factor"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\ntransaction.state.log.min.isr"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Flush Policy #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Messages are immediately written to the filesystem but by default we only fsync() to sync")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the OS cache lazily. The following configurations control the flush of data to disk.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# There are a few important trade-offs here:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    1. Durability: Unflushed data may be lost if you are not using replication.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The settings below allow one to configure the flush policy to flush data after a period of time or")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# every N messages (or both). This can be done globally and overridden on a per-topic basis.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of messages to accept before forcing a flush of data to disk")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.flush.interval.messages=10000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum amount of time a message can sit in a log before we force a flush")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.flush.interval.ms=1000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Retention Policy #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The following configurations control the disposal of log segments. The policy can")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# be set to delete segments after a period of time, or after a given size has accumulated.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# from the end of the log.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The minimum age of a log file to be eligible for deletion due to age")]),e._v("\nlog.retention.hours"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("168")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A size-based retention policy for logs. Segments are pruned from the log unless the remaining")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# segments drop below log.retention.bytes. Functions independently of log.retention.hours.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.retention.bytes=1073741824")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum size of a log segment file. When this size is reached a new log segment will be created.")]),e._v("\nlog.segment.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1073741824")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The interval at which log segments are checked to see if they can be deleted according")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# to the retention policies")]),e._v("\nlog.retention.check.interval.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("300000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Zookeeper #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Zookeeper connection string (see zookeeper docs for details).")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This is a comma separated host:port pairs, each corresponding to a zk")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# You can also append an optional chroot string to the urls to specify the")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# root directory for all kafka znodes.")]),e._v("\nzookeeper.connect"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("master:2181,slave1:2181,slave2:2181\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Timeout in ms for connecting to zookeeper")]),e._v("\nzookeeper.connection.timeout.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("6000")]),e._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Group Coordinator Settings #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The following configuration specifies the time, in milliseconds, that the GroupCoordinator will delay the initial consumer rebalance.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The rebalance will be further delayed by the value of group.initial.rebalance.delay.ms as new members join the group, up to a maximum of max.poll.interval.ms.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The default value for this is 3 seconds.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# We override this to 0 here as it makes for a better out-of-the-box experience for development and testing.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# However, in production environments the default value of 3 seconds is more suitable as this will help to avoid unnecessary, and potentially expensive, rebalances during application startup.")]),e._v("\ngroup.initial.rebalance.delay.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n")])])]),t("ul",[t("li",[t("strong",[e._v("配置slave2 server.properties")])])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Licensed to the Apache Software Foundation (ASF) under one or more")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# contributor license agreements.  See the NOTICE file distributed with")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# this work for additional information regarding copyright ownership.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The ASF licenses this file to You under the Apache License, Version 2.0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# (the "License"); you may not use this file except in compliance with')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the License.  You may obtain a copy of the License at")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    http://www.apache.org/licenses/LICENSE-2.0")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Unless required by applicable law or agreed to in writing, software")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# distributed under the License is distributed on an "AS IS" BASIS,')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# See the License for the specific language governing permissions and")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# limitations under the License.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# see kafka.server.KafkaConfig for additional details and defaults")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Server Basics #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The id of the broker. This must be set to a unique integer for each broker.")]),e._v("\nbroker.id"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Socket Server Settings #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The address the socket server listens on. It will get the value returned from ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# java.net.InetAddress.getCanonicalHostName() if not configured.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   FORMAT:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     listeners = listener_name://host_name:port")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   EXAMPLE:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     listeners = PLAINTEXT://your.host.name:9092")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#listeners=PLAINTEXT://:9092")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("listeners")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("PLAINTEXT://slave2:9092\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Hostname and port the broker will advertise to producers and consumers. If not set, ")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# it uses the value for "listeners" if configured.  Otherwise, it will use the value')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# returned from java.net.InetAddress.getCanonicalHostName().")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#advertised.listeners=PLAINTEXT://your.host.name:9092")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads that the server uses for receiving requests from the network and sending responses to the network")]),e._v("\nnum.network.threads"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads that the server uses for processing requests, which may include disk I/O")]),e._v("\nnum.io.threads"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The send buffer (SO_SNDBUF) used by the socket server")]),e._v("\nsocket.send.buffer.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("102400")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The receive buffer (SO_RCVBUF) used by the socket server")]),e._v("\nsocket.receive.buffer.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("102400")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum size of a request that the socket server will accept (protection against OOM)")]),e._v("\nsocket.request.max.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("104857600")]),e._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Basics #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A comma separated list of directories under which to store log files")]),e._v("\nlog.dirs"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/apps/kafka_2.12-2.3.0/kafka-logs\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The default number of log partitions per topic. More partitions allow greater")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# parallelism for consumption, but this will also result in more files across")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the brokers.")]),e._v("\nnum.partitions"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This value is recommended to be increased for installations with data dirs located in RAID array.")]),e._v("\nnum.recovery.threads.per.data.dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Internal Topic Settings  #############################")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# For anything other than development testing, a value greater than 1 is recommended for to ensure availability such as 3.")]),e._v("\noffsets.topic.replication.factor"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\ntransaction.state.log.replication.factor"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\ntransaction.state.log.min.isr"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Flush Policy #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Messages are immediately written to the filesystem but by default we only fsync() to sync")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# the OS cache lazily. The following configurations control the flush of data to disk.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# There are a few important trade-offs here:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    1. Durability: Unflushed data may be lost if you are not using replication.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The settings below allow one to configure the flush policy to flush data after a period of time or")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# every N messages (or both). This can be done globally and overridden on a per-topic basis.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The number of messages to accept before forcing a flush of data to disk")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.flush.interval.messages=10000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum amount of time a message can sit in a log before we force a flush")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.flush.interval.ms=1000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Log Retention Policy #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The following configurations control the disposal of log segments. The policy can")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# be set to delete segments after a period of time, or after a given size has accumulated.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# from the end of the log.")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The minimum age of a log file to be eligible for deletion due to age")]),e._v("\nlog.retention.hours"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("168")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A size-based retention policy for logs. Segments are pruned from the log unless the remaining")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# segments drop below log.retention.bytes. Functions independently of log.retention.hours.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#log.retention.bytes=1073741824")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The maximum size of a log segment file. When this size is reached a new log segment will be created.")]),e._v("\nlog.segment.bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1073741824")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The interval at which log segments are checked to see if they can be deleted according")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# to the retention policies")]),e._v("\nlog.retention.check.interval.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("300000")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Zookeeper #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Zookeeper connection string (see zookeeper docs for details).")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This is a comma separated host:port pairs, each corresponding to a zk")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# You can also append an optional chroot string to the urls to specify the")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# root directory for all kafka znodes.")]),e._v("\nzookeeper.connect"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("master:2181,slave1:2181,slave2:2181\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Timeout in ms for connecting to zookeeper")]),e._v("\nzookeeper.connection.timeout.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("6000")]),e._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("############################# Group Coordinator Settings #############################")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The following configuration specifies the time, in milliseconds, that the GroupCoordinator will delay the initial consumer rebalance.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The rebalance will be further delayed by the value of group.initial.rebalance.delay.ms as new members join the group, up to a maximum of max.poll.interval.ms.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The default value for this is 3 seconds.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# We override this to 0 here as it makes for a better out-of-the-box experience for development and testing.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# However, in production environments the default value of 3 seconds is more suitable as this will help to avoid unnecessary, and potentially expensive, rebalances during application startup.")]),e._v("\ngroup.initial.rebalance.delay.ms"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n")])])]),t("ul",[t("li",[t("strong",[e._v("创建目录")])])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("runRemoteCmd.sh "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"mkdir -p /apps/kafka_2.12-2.3.0/kafka-logs"')]),e._v(" all\n")])])]),t("ul",[t("li",[t("strong",[e._v("启动Kafka")])])]),e._v(" "),t("p",[e._v("一键启动Kafka")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("runRemoteCmd.sh "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/apps/kafka_2.12-2.3.0/bin/kafka-server-start.sh -daemon /apps/kafka_2.12-2.3.0/config/server.properties"')]),e._v(" all\n")])])]),t("ul",[t("li",[t("strong",[e._v("测试运行Kafka")])])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#使用自带脚本向topic 发送数据")]),e._v("\nbin/kafka-console-producer.sh --broker-list master:9092 --topic "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#使用自带脚本消费topic 数据（从头消费数据）")]),e._v("\nbin/kafka-console-consumer.sh --bootstrap-server master:9092 --topic "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v("\n--from-beginning\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);